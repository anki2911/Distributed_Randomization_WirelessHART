<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="17:SendingBuffer_AppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f11911dcc40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f11913b40d0"/></to>
    </wire>
    <wire loc="72:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f11913b40d0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f11911f8590"/></to>
    </wire>
    <wire loc="19:SendingBuffer_AppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f11911768f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f118fddb020"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f118fddb020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f118f664b40"/></to>
    </wire>
    <wire loc="20:SendingBuffer_AppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f119115a7a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1190cd9140"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1190cd9140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1190cb0880"/></to>
    </wire>
    <wire loc="21:SendingBuffer_AppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f11911d0590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1190fda8d0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1190fda8d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1190fd32a0"/></to>
    </wire>
    <wire loc="22:SendingBuffer_AppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7f11911699e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f118fdc5830"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f118fdc5830"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f11900762c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:SendingBuffer_AppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7f1191165020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f118fdbe140"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f118fdbe140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f11900762c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:SendingBuffer_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f11911505f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f118fddbc30"/></to>
    </wire>
    <wire loc="29:SendingBuffer_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f11911505f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f118fdce020"/></to>
    </wire>
    <wire loc="30:SendingBuffer_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f11911505f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f118fdca970"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f118fdca970"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1190cd5630"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f118fdce020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1190cd5630"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f118fddbc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f118f6638b0"/></to>
    </wire>
    <wire loc="27:SendingBuffer_AppC.nc">
      <from><interface-ref name="R_A" scoped="" ref="0x7f1191172220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f118fdd5910"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f118fdd5910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1190cd63f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:SendingBuffer_AppC.nc">
      <from><interface-ref name="R_B" scoped="" ref="0x7f11911728e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f118fdca3a0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f118fdca3a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1190cd63f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:SendingBuffer_AppC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f119114c810"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f118fb37160"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f118fb37160"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f118fc01d20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:SendingBuffer_AppC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f118fb33020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1191125c40"/></to>
    </wire>
    <wire loc="36:SendingBuffer_AppC.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7f119112c3a0"/></from>
      <to><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f118fb35d30"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f118fb35d30"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f118fd972e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f118f2143b0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f118fd8f020"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f118febfdd0"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f118ff48b70"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f118ff66750"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1190013080"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1190149130"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f119024a620"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1190339c60"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1190b397e0"/></to>
    </wire>
    <wire loc="103:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f118f44e140"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1190803020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1190be9510"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f11911f8c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1191c6c3a0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1191c6c3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f11913fa140"/></to>
    </wire>
    <wire loc="68:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f11911eb6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f11913b6560"/></to>
    </wire>
    <wire loc="48:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f11913b6560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f11913b1770"/></to>
    </wire>
    <wire loc="71:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f11911ebdc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></to>
    </wire>
    <wire loc="49:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f11913b1e80"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f11913aebe0"/></to>
    </wire>
    <wire loc="46:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f11913aebe0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f119138fb60"/></to>
    </wire>
    <wire loc="50:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f11913ad580"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f11913b0a20"/></to>
    </wire>
    <wire loc="56:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f11913adc60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1190fabc40"/></to>
    </wire>
    <wire loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f119138fb60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1191376940"/></to>
    </wire>
    <wire loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f11913852c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1191375020"/></to>
    </wire>
    <wire loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f11914d24c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1191374360"/></to>
    </wire>
    <wire loc="113:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f11913315a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f119126e6d0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f119131f020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1191267b30"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f1191328700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1191274160"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f119130ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f119124dcb0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f119132faa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1191275480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f1191312020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f119124d020"/></to>
    </wire>
    <wire loc="170:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f1191309a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1191236cb0"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f11913195a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1191247220"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f1191332b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f11912c49d0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f119130ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f119125c2f0"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f11913143e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f119125d610"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f119131e5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f119125e220"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f1191327700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f119126c7a0"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f119130ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f11912452f0"/></to>
    </wire>
    <wire loc="140:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f119131dbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f11912576d0"/></to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f119132e890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f119126dac0"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f1191342060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f11912d2540"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f1191312da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1191246610"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f11913380c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1191276020"/></to>
    </wire>
    <wire loc="161:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f1191318a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f119123f6d0"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f11913226d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f119127ca90"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f119130da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f11912557a0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f119132acf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f119127dde0"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f11913131f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1191256ac0"/></to>
    </wire>
    <wire loc="163:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f119130aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f119123d7a0"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f119131a0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f119124fb30"/></to>
    </wire>
    <wire loc="120:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f11913216c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f11912ca3e0"/></to>
    </wire>
    <wire loc="162:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f1191311b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f119123eac0"/></to>
    </wire>
    <wire loc="128:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f119130fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1191265cb0"/></to>
    </wire>
    <wire loc="169:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f1191310a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1191236020"/></to>
    </wire>
    <wire loc="127:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f1191315570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1191265020"/></to>
    </wire>
    <wire loc="168:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f1191316020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1191238b30"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f11912d0450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f11912d1d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f11912d0aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1191230a90"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f11912ce120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f119122d260"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f119127b930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f11912d2540"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1191279020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f11912d1d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1191273020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f11912d2540"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f11912717a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f11912d1d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f119126b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f11912d2540"/></to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f119126ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f11912d1d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f11912c82f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f11912c9bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f11912c8940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f119122d9f0"/></to>
    </wire>
    <wire loc="123:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f11912c7020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f119122c240"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1191264b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f11912ca3e0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f11912612f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f11912c9bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f119125b160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f11912ca3e0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f119125a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f11912c9bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1191254610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f11912ca3e0"/></to>
    </wire>
    <wire loc="144:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1191253c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f11912c9bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f119124cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f11912ca3e0"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f119124a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f11912c9bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1191244160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f11912ca3e0"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f11912437a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f11912c9bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f119123c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f11912ca3e0"/></to>
    </wire>
    <wire loc="165:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f119123bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f11912c9bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1191235b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f11912ca3e0"/></to>
    </wire>
    <wire loc="172:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f11912332f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f11912c9bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f11913f8040"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f11913f4490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f11917e63b0"/></to>
    </wire>
    <wire loc="586:SendingBufferC.nc">
      <from><interface-ref name="getData" scoped="" ref="0x7f1191012380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:SendingBufferC.nc">
      <from><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7f119111b420"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:SendingBufferC.nc">
      <from><interface-ref name="updateSchedule" scoped="" ref="0x7f11911172a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:SendingBufferC.nc">
      <from><interface-ref name="initializeFlow" scoped="" ref="0x7f119111c4a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:SendingBufferC.nc">
      <from><interface-ref name="initializeSchedule" scoped="" ref="0x7f119111a370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:SendingBufferC.nc">
      <from><interface-ref name="initializeCluster" scoped="" ref="0x7f11911182b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:SendingBufferC.nc">
      <from><interface-ref name="PermutateCipher" scoped="" ref="0x7f11911162a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1190fabc40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1190fd6c40"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1190fcb910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f1190fae360"/></to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1190fae360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1190d94440"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1190fd1b10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f1190fad6a0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1190fad6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1190d7e020"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1190fd0e30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f1190fac9c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1190fac9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1190d7ab90"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190d83610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f1190f54200"/></to>
    </wire>
    <wire loc="486:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f1190f54200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e30740"/></to>
    </wire>
    <wire loc="62:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190d7d2f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f1190f52200"/></to>
    </wire>
    <wire loc="487:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f1190f52200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e2b100"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190d79de0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f1190f50200"/></to>
    </wire>
    <wire loc="488:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f1190f50200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e27d10"/></to>
    </wire>
    <wire loc="442:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f1190f95020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190ec9100"/></to>
    </wire>
    <wire loc="455:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f1190f81020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e9ad10"/></to>
    </wire>
    <wire loc="531:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f1190f37560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e8cd10"/></to>
    </wire>
    <wire loc="551:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f1190f12570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e00100"/></to>
    </wire>
    <wire loc="532:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f1190f35580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e87740"/></to>
    </wire>
    <wire loc="460:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f1190f7c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e90100"/></to>
    </wire>
    <wire loc="473:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f1190f68200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e60e00"/></to>
    </wire>
    <wire loc="497:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f1190f43200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e0ad10"/></to>
    </wire>
    <wire loc="535:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f1190f2f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e7dd10"/></to>
    </wire>
    <wire loc="545:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f1190f1f570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e1d100"/></to>
    </wire>
    <wire loc="557:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f1190f0a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190dfcd10"/></to>
    </wire>
    <wire loc="445:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f1190f8f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190ebb100"/></to>
    </wire>
    <wire loc="536:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f1190f2d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e78740"/></to>
    </wire>
    <wire loc="450:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f1190f8b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190eb2740"/></to>
    </wire>
    <wire loc="463:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f1190f76020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e81100"/></to>
    </wire>
    <wire loc="476:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f1190f62200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e52d10"/></to>
    </wire>
    <wire loc="489:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f1190f4d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e22740"/></to>
    </wire>
    <wire loc="500:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f1190f3d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190dfcd10"/></to>
    </wire>
    <wire loc="440:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f1190f99020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190ed4d10"/></to>
    </wire>
    <wire loc="453:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f1190f85020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190ea3860"/></to>
    </wire>
    <wire loc="466:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f1190f70020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e73100"/></to>
    </wire>
    <wire loc="530:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f1190f39580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e8cd10"/></to>
    </wire>
    <wire loc="548:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f1190f18570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e0e100"/></to>
    </wire>
    <wire loc="555:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f1190f0c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190dfcd10"/></to>
    </wire>
    <wire loc="541:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f1190f25580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e35d10"/></to>
    </wire>
    <wire loc="471:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f1190f6c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e6aa60"/></to>
    </wire>
    <wire loc="484:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f1190f58200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e39100"/></to>
    </wire>
    <wire loc="495:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f1190f47200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e13740"/></to>
    </wire>
    <wire loc="549:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f1190f16570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e0ad10"/></to>
    </wire>
    <wire loc="538:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f1190f2b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e44d10"/></to>
    </wire>
    <wire loc="443:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f1190f93020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190ec5d10"/></to>
    </wire>
    <wire loc="456:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f1190f7f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e95740"/></to>
    </wire>
    <wire loc="493:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f1190f4b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e1d100"/></to>
    </wire>
    <wire loc="461:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f1190f7a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e8cd10"/></to>
    </wire>
    <wire loc="474:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f1190f66200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e5b740"/></to>
    </wire>
    <wire loc="498:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f1190f41200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e05740"/></to>
    </wire>
    <wire loc="540:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f1190f27580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e39100"/></to>
    </wire>
    <wire loc="438:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f1190fa6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190edd6d0"/></to>
    </wire>
    <wire loc="451:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f1190f89020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190ead100"/></to>
    </wire>
    <wire loc="464:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f1190f74020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e7dd10"/></to>
    </wire>
    <wire loc="477:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f1190f60200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e4d740"/></to>
    </wire>
    <wire loc="542:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f1190f23580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e73100"/></to>
    </wire>
    <wire loc="546:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f1190f1c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e19d10"/></to>
    </wire>
    <wire loc="552:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f1190f10570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190dfcd10"/></to>
    </wire>
    <wire loc="482:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f1190f5c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e44d10"/></to>
    </wire>
    <wire loc="543:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f1190f21580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e6fd10"/></to>
    </wire>
    <wire loc="441:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f1190f97020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190ece740"/></to>
    </wire>
    <wire loc="454:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f1190f83020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e9e270"/></to>
    </wire>
    <wire loc="467:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f1190f6e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e6fd10"/></to>
    </wire>
    <wire loc="539:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f1190f29580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e3f740"/></to>
    </wire>
    <wire loc="550:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f1190f14570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e05740"/></to>
    </wire>
    <wire loc="472:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f1190f6a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e65460"/></to>
    </wire>
    <wire loc="485:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f1190f56200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e35d10"/></to>
    </wire>
    <wire loc="496:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f1190f45200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e0e100"/></to>
    </wire>
    <wire loc="444:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f1190f91020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190ec0740"/></to>
    </wire>
    <wire loc="494:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f1190f49200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e19d10"/></to>
    </wire>
    <wire loc="449:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f1190f8d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190eb7d10"/></to>
    </wire>
    <wire loc="462:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f1190f78020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e87740"/></to>
    </wire>
    <wire loc="475:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f1190f64200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e56100"/></to>
    </wire>
    <wire loc="499:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f1190f3f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e00100"/></to>
    </wire>
    <wire loc="439:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f1190f9b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190ed8100"/></to>
    </wire>
    <wire loc="452:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f1190f87020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190ea8d10"/></to>
    </wire>
    <wire loc="465:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f1190f72020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e78740"/></to>
    </wire>
    <wire loc="478:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f1190f5e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e48100"/></to>
    </wire>
    <wire loc="534:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f1190f31560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e81100"/></to>
    </wire>
    <wire loc="547:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f1190f1a570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e13740"/></to>
    </wire>
    <wire loc="533:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f1190f33580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e81100"/></to>
    </wire>
    <wire loc="483:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f1190f5a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e3f740"/></to>
    </wire>
    <wire loc="554:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f1190f0e570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e00100"/></to>
    </wire>
    <wire loc="558:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f1190f08580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e22740"/></to>
    </wire>
    <wire loc="529:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f1190f3b1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1190e90100"/></to>
    </wire>
    <wire loc="63:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f118f664b40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f118f656bc0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f118f6638b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1190cd5630"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f118fdda8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f118f662590"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f118f662590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1190cd42d0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f118fdd8020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f118f660c10"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f118f660c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1190cd3990"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1190cd5630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1190cab760"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1190cd42d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1190cac020"/></to>
    </wire>
    <wire loc="85:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1190cd3990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1190ca8810"/></to>
    </wire>
    <wire loc="60:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f118f655910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1190d2f940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f118f654590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1190cd42d0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1190d2f940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1190ce24b0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1190ce1400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1190cd81d0"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1190cd81d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1190caf980"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1190ce0060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1190cd42d0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1190cdf720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1190cd5630"/></to>
    </wire>
    <wire loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f1190cde480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f1190cdec60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1190cb0880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1190c8cb70"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1190caf980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f118fe81020"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1190cd5020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f1190cad900"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1190cad900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f118fe80df0"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1190cab760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f118fe7ea80"/></to>
    </wire>
    <wire loc="89:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1190cc9cd0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f11901c5550"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f11901c5550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f11901b7a80"/></to>
    </wire>
    <wire loc="86:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1190cbcb20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1190c9fbb0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1190c9fbb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1190c7e080"/></to>
    </wire>
    <wire loc="81:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1190cd63f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1190caecb0"/></to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1190caecb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f118fe80210"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1190ca8810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1190c7f020"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1190cac020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f118fe7f470"/></to>
    </wire>
    <wire loc="90:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1190cc8dc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f11901c1660"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f11901c1660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f11901b3af0"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1190c8cb70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f118feb2b80"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1190c96d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f118fe7b8b0"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f1190c89d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f118fe7dce0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1190ca1970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1190c80140"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1190c80140"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f11901ca670"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1190c7e080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f118feb2080"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1190c7f020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f11901c76e0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1190c95020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1190c7eb70"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1190c7eb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f118fe9e020"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1190c9ea80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1190c7f9d0"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1190c7f9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f11901c6a70"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f118fe730f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1190c86d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f118fe7a860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1190c83d10"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f1190c83d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f118ff1bc90"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f118fe79690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1190c81a90"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f1190c81a90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f118ff1aa50"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f118fe754d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f11903f0b30"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f118fe79ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f11901ca670"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f11901ca670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f11901bcd20"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f118fe78b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f11901c60c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f11901c60c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f11901b8640"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f118fe77610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f1190bf2dc0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f1190bf2dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f1190be8970"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f118fe741f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1190c78330"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1190c78330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1190c737e0"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f118fe73d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1190fda8d0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f118feb2b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f118feafd90"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f11901c6a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f11901b7020"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f118fe9e020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f118fe9c410"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f118ff1bc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f118ff11a20"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f118feb2080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f118feab2d0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f1190c84820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f118ff1b5e0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f118ff1b5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f118ff11370"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f11901c76e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f11901b9c50"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1190c86d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f118ff1ebe0"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f118ff1ebe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f118ff137b0"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f1190c85a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f118ff1d8e0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f118ff1d8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f118ff124d0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f1190c83020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f118ff19170"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f118ff19170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f118ff0e020"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f118ff1aa50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f118ff0f840"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f118feafd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1190c7a390"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1190c7a390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1190c77e80"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f118ff186b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f118ff6c220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f118ff6c220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f118ff69a20"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f118ff6a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f118fea1350"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f118fea1350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f118fe9ed70"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f118fe9ed70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f118feb7ce0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f118feb7ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f118feb0860"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f118feb0860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1190c7ae80"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1190c7ae80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1190c74990"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f118ff18020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f118feb4980"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f118feb4980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f118feaf690"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f118feaf690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f118ff4faa0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f118ff4faa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f118ff4be30"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f118ff4c950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1190c79b40"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1190c79b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f119024e7c0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f119024e7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1190247020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1190c72640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1190c02950"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1190c02950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1190be9b80"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f1190c69b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f1190bfdbf0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f1190bfdbf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f1190be6740"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f1190c66760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f11903476c0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f1190c66760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f11902515c0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f11902515c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f119024aca0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f11903476c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1190338320"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1190c5e2a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1190344020"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1190344020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1190338bc0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f1190c67060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1190344cb0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1190344cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1190337970"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1190c5c330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f11901ca670"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1190c54920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f11901c60c0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1190c5b420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1190018a20"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1190018a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1190012a20"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f1190c58110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f119001baa0"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f119001baa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1190807280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1190c5bbf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1190fda8d0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f1190c4ab70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f1190c4bba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f1190c4cc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f1190bef0c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f1190be5b40"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f1190bd9d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1190b35220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1190b35220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1190b2f5f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1190bd6060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1190a30690"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1190a30690"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a23520"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f1190bd5380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f1190a2c020"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f1190a2c020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a14710"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f1190bd46a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f1190a2a6a0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f1190a2a6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a0bd70"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f1190bd20e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f11909f2210"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f11909f2210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f11908d6a30"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1190bbc1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1190479e20"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1190479e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f119088a960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1190bbb2b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f11904767b0"/></to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f11904767b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1190bbb9c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f1190475ae0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1190475ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1190bbda40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f1190477ad0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1190477ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1190bbd120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1190474160"/></to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1190474160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1190bc2b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f119046b870"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f119046b870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1190bc93d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f1190469880"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1190469880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1190bc9c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f11904680a0"/></to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f11904680a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1190bc45f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1190470e50"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1190470e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1190bc0020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f119046f670"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f119046f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1190bce520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f119045b500"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f119045b500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1190bc5a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f119045cce0"/></to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f119045cce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1190bc08e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f119046ce50"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f119046ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1190bbf1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f119046fe50"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f119046fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1190bbfa70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f119046de50"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f119046de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f1190bbad90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1190449a80"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1190449a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f119088a960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f1190bba020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f119041c9e0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f119041c9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f119088a960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1190bca810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f11903f0b30"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1190be2020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f11903efd30"/></to>
    </wire>
    <wire loc="23:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f11903efd30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f11903d4310"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f1190bae820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f1190bb0940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1190b397e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1190b30d40"/></to>
    </wire>
    <wire loc="51:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1190b30d40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f118f5dc9d0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1190b2f5f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f118f5da260"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f118f5dc9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f118f5d4a10"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f118f5da260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f118f5cd5f0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f118f5d4a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f118f5b7510"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f118f5c7d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f118f5d32a0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f118f5d32a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f118f5b7da0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f118f5ca9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1190abb020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1190abb020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1190a99ad0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f118f5b3020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f118f5bd1b0"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f118f5bd1b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1190b104d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f118f5b2760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f118f5bc8f0"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f118f5bc8f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1190b0e280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f118f5b1a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f118f5bbc10"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f118f5bbc10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1190b0cba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1190b104d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f11913216c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1190b0e280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f119131f020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1190b0cba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f1191315570"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1190b104d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f11913216c0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1190b0e280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f119131dbe0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1190b0cba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f11913131f0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1190b104d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f11913216c0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1190b0e280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f119131a0c0"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1190b0cba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f1191312020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1190b104d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f11913216c0"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1190b0e280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f11913195a0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1190b0cba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f1191312da0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1190b104d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f11913216c0"/></to>
    </wire>
    <wire loc="79:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1190b0e280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f1191318a50"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1190b0cba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f1191311b80"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1190b104d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f11913216c0"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1190b0e280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f1191316020"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1190b0cba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f1191310a20"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f1190a7b020"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1190ab2020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1190ab2020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1190aad0a0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1190a9e2c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f11913216c0"/></to>
    </wire>
    <wire loc="73:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f1190a2f9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a1d060"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f1190a2ecf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a19b70"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f1190a313e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a28a20"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f1190a2b370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a0f1b0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a27c50"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f1190f95020"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a227a0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f1190f68200"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a1c2f0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f1190f97020"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a18de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f1190fa6020"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a13930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f1190f60200"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a0e480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f1190f6a200"/></to>
    </wire>
    <wire loc="69:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a08020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f1190f62200"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f11909ee5a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f11909d9020"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f11909f2e30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f11908c7a70"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f11909d9ae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f119131e5a0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f11909d8da0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f119130ea20"/></to>
    </wire>
    <wire loc="55:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f11909d7c20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f1190f6a200"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f11908d5610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f11909c8c40"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f11909c8c40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f11909b4a30"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f11908c6610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f11909cae70"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f11909cae70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f11909ba9c0"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f11909bebc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f11909aabc0"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f11909c5bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f11909b1a30"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f11909c3bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f11909afa30"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f11909ced20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f11909b6a30"/></to>
    </wire>
    <wire loc="80:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f11909c0bc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f11909aca30"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f11909c7bc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f11909b3a30"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f11909bcbc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f11909a9bc0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f11909c2bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f11909aea30"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f11909c9c80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f11909b5a30"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f11909bfc40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f11909abbc0"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f11909c6bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f11909b2a30"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f11909c4bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f11909b0a30"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f11909cfdc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f11909b7a30"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f11909c1bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f11909ada30"/></to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1190476160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f119046a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f11904620a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f11904690a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1190456500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1190458500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1190475490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f119045e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f119045a500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1190464880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f11904650a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190478a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190887680"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190887680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190880920"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1190474e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1190472490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f119045dc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1190472be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f119045ace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f119045e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f119046d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f119045f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1190462880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f119045f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1190457ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1190458ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1190465880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f11904610a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f119045bce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1190468880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1190456ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1190885630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1190477480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1190470670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f119046c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f11904630a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1190463880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f119046a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f11904712f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1190470020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f11904747b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f119045c500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1190457500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f11904640a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1190461880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1190476e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f11904670a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1190471940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1190467880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f119045d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f11904559b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1190885630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f1190885630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f119087cbb0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f119087a020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f119087adb0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f119088a960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f119087d810"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190879ba0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f1190874020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f119080c770"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f119080c770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1190807280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1190877400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f11907eac40"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f11907eac40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f118f4d7c30"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1190875080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f11907e98f0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f11907e98f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f118f4d40c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f119086c680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f11904a1020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f11904a1020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f118f4d32b0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1190874df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1190fda8d0"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f1190867120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1190807280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1190803b70"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f118f4d32b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f11907783f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f118f4d40c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1190785c40"/></to>
    </wire>
    <wire loc="105:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f118f4d7c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f11907877f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f118f4d58f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f118f4ca2c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f118f4ca2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f11906048a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1190785c40"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1190700440"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f118f4d46d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f1190779320"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f1190779320"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f1190700a50"/></to>
    </wire>
    <wire loc="111:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1190776510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f118f4d3a50"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f118f4bd760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1190785450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1190777280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f118f4cb640"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f118f4cb640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f11906055c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f11907726a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f118f4c5c10"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f118f4c5c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1190609a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1190785450"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1190701c40"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f11907783f0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f11906ff700"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f11907877f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1190702e80"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f11906fee00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1190776510"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f11906fe060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f1190777280"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f11906f8de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f11907726a0"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f11906fc490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f11906f0860"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f11906f0860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f11906e4020"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f11906f75a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1190fda8d0"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f11906f6c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f11906e68a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f11906df750"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f11906e93b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f11906e0dc0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f11906b0700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f1190f39580"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f11906ae670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f1190f35580"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f11906ac670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f1190f33580"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f11906aa670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f1190f2d580"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f11906a8670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f1190f2f580"/></to>
    </wire>
    <wire loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f11906b55b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f119055e430"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f118f4c4440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f11906069a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f118f4c4a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f119056a880"/></to>
    </wire>
    <wire loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f119056a880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f119055e430"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f118f4c92b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f11906f0860"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f118f4caa60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1190603130"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1190603130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1190571060"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1190601020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f118f4bd760"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f11906048a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1190573bf0"/></to>
    </wire>
    <wire loc="106:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1190573bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f118f44b850"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f1190609a80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f11905ff5c0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f11906055c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1190575e60"/></to>
    </wire>
    <wire loc="105:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1190575e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f118f44c970"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f11906069a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f11905ee020"/></to>
    </wire>
    <wire loc="108:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1190571060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f118f44ac30"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1190571930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1190601020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f11905ed4b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1190571060"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f11905ee690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f11906e93b0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f11905eee70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f11906e68a0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1190572400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f118f44a020"/></to>
    </wire>
    <wire loc="109:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f118f449590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1190571930"/></to>
    </wire>
    <wire loc="111:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f118f449d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f118f44e750"/></to>
    </wire>
    <wire loc="75:../../../..//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f118f445020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f1190557250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f11906e4020"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f1190553d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f1190f39580"/></to>
    </wire>
    <wire loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1190551cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f1190f33580"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f119043cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1190447da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f119043fb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1190439670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1190432e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1190439e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f11904262f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f11904282f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1190444120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f119042e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f11904292f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f119043ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f119043dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1190434670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1190436e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1190438670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190448760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190887680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1190443aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1190442120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f119042da70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1190442870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1190429ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1190444dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f119042fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f119043d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f119043e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1190447750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1190430e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1190431670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f119042f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1190427ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1190428ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1190435670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1190431e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f119042aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1190437670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1190426ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1190885630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1190447100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f119043f370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f119043c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1190434e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1190438e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1190432670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f119043b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1190445450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f119043be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1190441020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1190441cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f119042a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f119042bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1190443450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f119042b2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f11904272f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1190435e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1190430670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1190445aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1190444770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1190437e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1190441670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1190436670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f119042ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f11904247a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1190885630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f119040fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f119041ada0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1190413b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f119040d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1190406e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f119040de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f11903f92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f11903fb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1190418120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1190401670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f11903fd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1190412c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1190410c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1190407670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1190409e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f119040c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f119041b760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190887680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1190416aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1190415120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1190400a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1190415870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f11903fdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1190418dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1190402e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1190410480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1190412480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f119041a750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1190404e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1190405670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1190402670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f11903faad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f11903fbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1190408670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1190405e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f11903fead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f119040b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f11903f9ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1190885630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f119041a100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1190413370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f119040f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1190407e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f119040ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1190406670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f119040e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1190419450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f119040ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1190414020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1190414cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f11903fe2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f11903ffad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1190416450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f11903ff2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f11903fa2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1190408e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1190404670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1190419aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1190418770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f119040be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1190414670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1190409670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1190401e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f11903f87a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1190885630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f11903d1880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f11903c6020"/></to>
    </wire>
    <wire loc="20:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f11903c6020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f11903c1140"/></to>
    </wire>
    <wire loc="16:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f11903bdbd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f11903c5c50"/></to>
    </wire>
    <wire loc="21:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f11903c5c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f11903a8150"/></to>
    </wire>
    <wire loc="17:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f11903c0530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f119035fa20"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f11903ac540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f11903ad590"/></to>
    </wire>
    <wire loc="11:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f11903ad590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f119035d9e0"/></to>
    </wire>
    <wire loc="18:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f11903a3950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f11903aaca0"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f11903aaca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f1190380a90"/></to>
    </wire>
    <wire loc="19:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f11903a89f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f11903ac540"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1190370020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f119036a530"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f119036a530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1190367e50"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1190363020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f1191342060"/></to>
    </wire>
    <wire loc="9:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f119035cc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f1190f85020"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1190340990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1190336900"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f1190342150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f11903340f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f1190334ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1190b35220"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f1190326500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f1190a313e0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1190320820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1190a30690"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f119031fb40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f1190a2b370"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f1190327880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f11909ee5a0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f119031d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1190281c30"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1190281c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f119088a960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f119031dd10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f11902808f0"/></to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f11902808f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190887680"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f11903196d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f119027f2f0"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f119027f2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1190319de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f119027ecc0"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f119027ecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1190318530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f119027d370"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f119027d370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1190318c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f119027bd00"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f119027bd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f119031ae00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f1190275c60"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1190275c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f119031b780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f119025d7a0"/></to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f119025d7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1190885630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f119031a550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f11902622f0"/></to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f11902622f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f11903173e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1190277480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1190277480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f11903165e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f1190273e50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1190273e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1190315020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f1190272670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1190272670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1190317e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f11902797b0"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f11902797b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f11903149c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f119025fad0"/></to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f119025fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1190315890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f11902602f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f11902602f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1190314130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f1190260ad0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1190260ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f119030ed40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f1190251df0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f1190251df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f1190248550"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f119032fd00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f11901ca670"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f119032dbb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f11901c60c0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f119032c950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f11901c5550"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1190321be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f11901bd480"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f11901bd480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f11901af8b0"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f11903126c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1190fda8d0"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1190274c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f119027e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1190278c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f119026be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1190272e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f119025e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1190266670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1190277c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f119026c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f119026ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1190271670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f119027a370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1190265a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f119027aac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1190262ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f119027b060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1190267e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1190275480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f119027f940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1190269e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f119026a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1190267670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f119026d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f119026ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1190263ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1190270670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f119025ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1190885630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1190278490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1190274480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f119026ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1190271e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f119026b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1190273670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f119027e670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1190279160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1190279e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f11902632f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1190264ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f119027b6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f11902642f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f119025f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f119026de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1190269670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f119027d9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1190270e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f119026e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1190266e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f119024d020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f11902477c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1190232150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1190fda8d0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1190246020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1190a30690"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f1190245380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f1190a2f9c0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f11902446b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f1190a2ecf0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1190243a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f11909f2e30"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f11902426e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1190067d00"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1190067d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f119088a960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1190241530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f1190044ad0"/></to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1190044ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1190885630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1190240ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f11900616b0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f11900616b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f11902403a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f1190060370"/></to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1190060370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f119023f330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f11901ca670"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f119023e1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f11901c60c0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f119023cd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f11901c5550"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f119023eb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f1190bf2dc0"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f11902373e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f1190059e50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1190059e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1190237cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f1190057670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1190057670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1190238b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f119005f160"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f119005f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f11902356d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f11900442f0"/></to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f11900442f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1190236590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f11900462f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f11900462f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1190236e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f1190046ad0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1190046ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1190234020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1190047ad0"/></to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1190047ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f11902348b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f1190065300"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1190065300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f11902279d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f11901507c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1190abb020"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f11901aa820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f11901594e0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f11901acb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1190143610"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f1190143610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f11900892b0"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1190148020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1190098150"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1190149130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1190113020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1190113020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f118f3449d0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f1190092640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f11900e72f0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f11900e2850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1190113870"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1190113870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f118f33d5f0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1190088690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1190133b70"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1190133b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f119012a610"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f118f3449d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f118f327360"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f118f337d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f118f342260"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f118f342260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f118f327bf0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f118f3399b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1190133b70"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f118f300dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f118f32c020"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f118f32c020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1190b104d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f118f2fe440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f118f32b760"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f118f32b760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1190b0e280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f118f2fd760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f118f32aa80"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f118f32aa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1190b0cba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f1190128b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1190ab2020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f11900de9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f119008da00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f119007f8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f11900762c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f11900762c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1190148020"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f119005ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1190063020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f119005dc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1190050e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1190057e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1190062370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f119004c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f11900472f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f119005cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f119005bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1190052670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1190054e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1190056670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190066970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190887680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1190061d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f119004ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1190060ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1190061060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f119004de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f119005b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f119005c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1190065950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f119004ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f119004f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f119004d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1190045ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1190053670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f119004fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1190048ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1190055670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f119005d490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f119005a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1190052e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1190056e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1190050670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1190059670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1190063670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f119005fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f11900482f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1190049ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f11900492f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f11900452f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1190053e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f119004e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1190063cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f11900629c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1190055e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f119005f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1190054670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f119004ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f11900427a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1190885630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f1190017920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f1190013940"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f119001d9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1190013080"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f118ff66e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f118ff6a020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f118ff65ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f118ff67690"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f118ff67690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1190807280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f118ff648f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1190018a20"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f118ff63170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f11901c60c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f118ff4c200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f118ff48570"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f118ff473f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f118ff4c950"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f118ff47a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f11901c60c0"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f118ff0ed70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f118ff186b0"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f118ff0db10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f118ff18020"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f118ff0c2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f11901ca670"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f118ff0b170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f11901c60c0"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f118ff0bb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f118febe410"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f118fedfdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f118feb1800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f118fead580"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f118fead580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1190807280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f118fe991c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1190c7f020"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f118fdcec30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1190cd42d0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f118fdc95a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1190cd42d0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f118fb37d70"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f118fd9ab10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f118fb34650"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f118fd962c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f118fbfd1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f118fd9b7c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f118f2282a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f118fb33020"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f118fbfb740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f118f229020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7f118fd972e0"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f118fd8d370"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7f118fd92a70"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7f118fd8a1d0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f118fd962c0"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f118fd8c320"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f118fd9ab10"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f118fd8fd00"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f118fd9b7c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f118fc1a520"/></to>
    </wire>
    <wire loc="98:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f118fc1a520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f118f2119d0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f118fd8aaf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f118fc19b20"/></to>
    </wire>
    <wire loc="100:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f118fc19b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f118f20f020"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f118fd7c8d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f118fca90c0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f118fd766d0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7f1190f4b200"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f118fd74640"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7f1190f49200"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f118fd72540"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7f1190f47200"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f118fd70540"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7f1190f45200"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f118fd6e540"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7f1190f43200"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f118fd6c540"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7f1190f41200"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f118fd6a540"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7f1190f3f200"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f118fd67540"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7f1190f3d200"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f118fd87780"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f1191342060"/></to>
    </wire>
    <wire loc="75:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f118fd7a020"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7f1191332b10"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f118fd79560"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7f11913380c0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f118fd789e0"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7f119132acf0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f118fd77850"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7f119132faa0"/></to>
    </wire>
    <wire loc="99:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f118fc193a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f118f210850"/></to>
    </wire>
    <wire loc="101:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f118f20f910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f118fc18570"/></to>
    </wire>
    <wire loc="103:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f118f205120"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f118f2149c0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f118f205c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7f118fc01d20"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f118fb9ccb0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f118fb97030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7f118fbfd1d0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f118fb94020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f118fbfb740"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f118fb97d80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f118fbf7240"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f118fb969c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f118fbf7e00"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f118fbf4a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f118fb634e0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f118fb634e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f11900762c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f118fbee020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f118fb5c020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f118fb5c020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f11900762c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f118fbe96c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f118fb55b40"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f118fb55b40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f11900762c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f118fbf69a0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f118fca90c0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7f118fb927f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../..//tos/system/MainC.nc">
      <documentation loc="45:../../../..//tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../..//tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../..//tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../..//tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../..//tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../..//tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../..//tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../..//tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../..//tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../..//tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="SendingBufferC" loc="4:SendingBufferC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../..//tos/system/LedsC.nc">
      <documentation loc="34:../../../..//tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../..//tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../..//tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SendingBuffer_AppC.AMSenderC" loc="47(SendingBuffer_AppC.AMSenderC):../../../..//tos/system/AMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.AMSenderC.SenderC" loc="47(SendingBuffer_AppC.AMSenderC.SenderC):../../../..//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SendingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP):../../../..//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../..//tos/system/AMQueueP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../..//tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../..//tos/system/StateImplC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../..//tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../..//tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../..//tos/system/ArbiterP.nc">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../..//tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../..//tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../..//tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../..//tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911dfdf0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f11911de200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911dfdf0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f11911de200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../..//tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../..//tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../..//tos/system/RandomC.nc">
      <documentation loc="33:../../../..//tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../..//tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../..//tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SendingBuffer_AppC.R_A" loc="43(SendingBuffer_AppC.R_A):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.R_B" loc="43(SendingBuffer_AppC.R_B):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.Timer1" loc="44(SendingBuffer_AppC.Timer1):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.Timer2" loc="44(SendingBuffer_AppC.Timer2):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.AutoAdc" loc="43(SendingBuffer_AppC.AutoAdc):../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../..//tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../..//tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../..//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../../..//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../..//tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../..//tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.AutoAdc.Msp430Adc12ConfAlertC" loc="42(SendingBuffer_AppC.AutoAdc.Msp430Adc12ConfAlertC):../../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f1191304890" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f1191304c30" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f1191303020" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f11913033a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f1191303720" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f1191303a90" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f1191303e20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f1191301200" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f11913015d0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f11912c6e70" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f11912c3270" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f1190f039f0" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f1190f03da0" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f1190f021a0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f1190f02550" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f1190f028c0" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../..//tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1190d6de00" loc="47:../../../..//tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../..//tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1190d53020" loc="47:../../../..//tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../..//tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f1190d4eac0" loc="43:../../../..//tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../..//tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f1190d2ac80" loc="45:../../../..//tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1190af09d0" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1190af09d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1190aac120" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1190aac120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../..//tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1190a98270" loc="55:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1190a98270"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1190a98a40" loc="56:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1190a98a40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1190a98e30" loc="57:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1190a98e30"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1190a97650" loc="58:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1190a97650"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1190a97a20" loc="59:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f1190a95290" loc="60:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f1190a95290"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../..//tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1190a75500" loc="52:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1190a75500"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1190a75cd0" loc="53:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1190a75cd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1190a74120" loc="54:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1190a74120"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1190a74900" loc="55:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1190a74900"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1190a74cd0" loc="56:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../..//tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../..//tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f11905e7020" loc="89:../../../..//tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f11905db0d0" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../..//tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f11905c0800" loc="52:../../../..//tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f119037e020" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f119037e020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f119037e7b0" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f119037e7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f119015ba60" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f119015ba60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f119010ecc0" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f119010ecc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f11900d8230" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f11900d8230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f11900d8560" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../..//tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../..//tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f118fdd4390" loc="43:../../../..//tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../..//tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f118fc72850" loc="83:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../..//tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f118fc6a3d0" loc="42:../../../..//tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../..//tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../..//tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f11913b3590" loc="58:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f11913b3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11913b3910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f11913b40d0" loc="57:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f11913b40d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f11913b4450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f11913b6560" loc="42:../../../..//tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f11913b6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11913b68e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f11913ad580" loc="6:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f11913ad580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11913ad900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f11913b1770" loc="4:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f11913b1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11913b1af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f11913b1e80" loc="5:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f11913b1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11913ad220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f11913adc60" loc="7:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f11913adc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11913ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f11913b0a20" loc="2:../../../..//tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f11913b0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11913b0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f11913aebe0" loc="39:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f11913aebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f119138f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f11913852c0" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f11913852c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f119138b1b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f11913857d0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1191385960"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1191385af0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1191385640"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1191385c80"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1191385e10"/>
        <function-ref name="initClocks" scoped="" ref="0x7f119138b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f119138fb60" loc="39:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f119138fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f119138c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f1191375020" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1191375020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1191374020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1191375530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f11913756c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1191375850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f11913753a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f11913759e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1191375b70"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1191375d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f1191374360" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1191374360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f11913746e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1191376940" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1191376940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1191376cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f11913315a0" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f11913315a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1191331920"/>
        <function-ref name="getControl" scoped="" ref="0x7f1191331ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1191331c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1191331dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1191330020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f11913301b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1191330340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f11913304d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1191330660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f119131f020" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f119131f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f119131f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f119131f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119131f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f119131f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f119131f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119131fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f119131fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f119131e020"/>
        <function-ref name="setControl" scoped="" ref="0x7f119131e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f1191328700" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f1191328700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1191328a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1191328c10"/>
        <function-ref name="captured" scoped="" ref="0x7f1191328da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191327020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f11913271b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1191327340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f119130ca20" loc="68:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f119130ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119130cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f119130b020"/>
        <function-ref name="captured" scoped="" ref="0x7f119130b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119130b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119130b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f119130b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f119132faa0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f119132faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119132fe20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f119132e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f119132e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f119132e340"/>
        <function-ref name="fired" scoped="" ref="0x7f119132e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f1191312020" loc="61:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f1191312020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f11913123a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1191312530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f11913126c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1191312850"/>
        <function-ref name="fired" scoped="" ref="0x7f11913129e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f1191309a20" loc="71:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f1191309a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1191309da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1191308020"/>
        <function-ref name="captured" scoped="" ref="0x7f11913081b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191308340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f11913084d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1191308660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f11913195a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f11913195a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1191319920"/>
        <function-ref name="getControl" scoped="" ref="0x7f1191319ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1191319c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1191319dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1191318020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f11913181b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1191318340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f11913184d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1191318660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f1191332b10" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f1191332b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1191339020"/>
        <function-ref name="getControl" scoped="" ref="0x7f11913391b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1191339340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f11913394d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1191339660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f11913397f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1191339980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1191339b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1191339ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f119130ea20" loc="66:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f119130ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119130eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f119130d020"/>
        <function-ref name="captured" scoped="" ref="0x7f119130d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119130d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119130d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f119130d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f11913143e0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f11913143e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1191314760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f11913148f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1191314a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1191314c10"/>
        <function-ref name="fired" scoped="" ref="0x7f1191314da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f119131e5a0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f119131e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f119131ea20"/>
        <function-ref name="getControl" scoped="" ref="0x7f119131ebb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119131ed40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f119131d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f119131d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119131d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f119131d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f119131d660"/>
        <function-ref name="setControl" scoped="" ref="0x7f119131d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f1191327700" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f1191327700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1191327a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1191327c10"/>
        <function-ref name="captured" scoped="" ref="0x7f1191327da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191321020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f11913211b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1191321340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f119130ba20" loc="69:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f119130ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119130bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f119130a020"/>
        <function-ref name="captured" scoped="" ref="0x7f119130a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119130a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119130a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f119130a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f119131dbe0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f119131dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f119131b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f119131b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119131b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f119131b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f119131b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119131b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f119131b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f119131bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f119131bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f119132e890" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f119132e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119132ec10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f119132eda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1191329020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f11913291b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1191329340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f1191342060" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f1191342060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11913423e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1191342570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1191342700"/>
        <function-ref name="get" scoped="" ref="0x7f1191342890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1191342a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191342bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1191342d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1191341020"/>
        <function-ref name="overflow" scoped="" ref="0x7f11913411b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1191341340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f11913414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f1191312da0" loc="62:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f1191312da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1191311180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1191311310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f11913114a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1191311630"/>
        <function-ref name="fired" scoped="" ref="0x7f11913117c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f11913380c0" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f11913380c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1191338440"/>
        <function-ref name="getControl" scoped="" ref="0x7f11913385d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1191338760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f11913388f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1191338a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1191338c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1191338da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1191331020"/>
        <function-ref name="setControl" scoped="" ref="0x7f11913311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f1191318a50" loc="56:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f1191318a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1191318dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1191317020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f11913171b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1191317340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f11913174d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1191317660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f11913177f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1191317980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1191317b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f11913226d0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f11913226d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1191322a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1191322be0"/>
        <function-ref name="captured" scoped="" ref="0x7f1191322d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191328020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f11913281b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1191328340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f119130da20" loc="67:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f119130da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119130dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f119130c020"/>
        <function-ref name="captured" scoped="" ref="0x7f119130c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119130c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119130c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f119130c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f119132acf0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f119132acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119132f0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f119132f230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f119132f3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f119132f550"/>
        <function-ref name="fired" scoped="" ref="0x7f119132f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f11913131f0" loc="60:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f11913131f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1191313570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1191313700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1191313890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1191313a20"/>
        <function-ref name="fired" scoped="" ref="0x7f1191313bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f119130aa20" loc="70:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f119130aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119130ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1191309020"/>
        <function-ref name="captured" scoped="" ref="0x7f11913091b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191309340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f11913094d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1191309660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f119131a0c0" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f119131a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f119131a440"/>
        <function-ref name="getControl" scoped="" ref="0x7f119131a5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119131a760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f119131a8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f119131aa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119131ac10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f119131ada0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1191319020"/>
        <function-ref name="setControl" scoped="" ref="0x7f11913191b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f11913216c0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f11913216c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1191321a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1191321bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1191321d60"/>
        <function-ref name="get" scoped="" ref="0x7f1191320020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f11913201b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191320340"/>
        <function-ref name="getMode" scoped="" ref="0x7f11913204d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1191320660"/>
        <function-ref name="overflow" scoped="" ref="0x7f11913207f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1191320980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1191320b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f1191311b80" loc="63:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f1191311b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1191310020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f11913101b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1191310340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f11913104d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1191310660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f119130fa20" loc="65:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f119130fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119130fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f119130e020"/>
        <function-ref name="captured" scoped="" ref="0x7f119130e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119130e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119130e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f119130e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f1191310a20" loc="64:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f1191310a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119130f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f119130f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f119130f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f119130f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f119130f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f1191315570" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f1191315570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f11913158f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1191315a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1191315c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1191315da0"/>
        <function-ref name="fired" scoped="" ref="0x7f1191314020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f1191316020" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f1191316020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f11913163a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1191316530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f11913166c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1191316850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f11913169e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1191316b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1191316d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1191315020"/>
        <function-ref name="setControl" scoped="" ref="0x7f11913151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f11912d0aa0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f11912d0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11912d0e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f11912d0450" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f11912d0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11912d07d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f11912ce120" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f11912ce120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11912ce4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f11912d1d80" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f11912d1d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11912d0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f11912d2540" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f11912d2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11912d28c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f11912d2a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f11912d2be0"/>
        <function-ref name="get" scoped="" ref="0x7f11912d2d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f11912d1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f11912d11b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f11912d1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f11912d14d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f11912d1660"/>
        <function-ref name="setMode" scoped="" ref="0x7f11912d17f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f11912d1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f11912c8940" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f11912c8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11912c8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f11912c82f0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f11912c82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11912c8670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f11912c7020" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f11912c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11912c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f11912c9bf0" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f11912c9bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11912c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f11912ca3e0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f11912ca3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11912ca760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f11912ca8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f11912caa80"/>
        <function-ref name="get" scoped="" ref="0x7f11912cac10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f11912cada0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f11912c9020"/>
        <function-ref name="getMode" scoped="" ref="0x7f11912c91b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f11912c9340"/>
        <function-ref name="overflow" scoped="" ref="0x7f11912c94d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f11912c9660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f11912c97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f119127ca90" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f119127ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119127ce10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f119127b020"/>
        <function-ref name="captured" scoped="" ref="0x7f119127b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119127b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119127b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f119127b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f11912c49d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f11912c49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f11912c4d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f119127d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119127d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f119127d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f119127d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119127d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f119127d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f119127d980"/>
        <function-ref name="setControl" scoped="" ref="0x7f119127db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1191279020" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1191279020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11912793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f119127dde0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f119127dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119127c180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f119127c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f119127c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f119127c630"/>
        <function-ref name="fired" scoped="" ref="0x7f119127c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f119127b930" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f119127b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f119127bcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f119127be40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119127a020"/>
        <function-ref name="get" scoped="" ref="0x7f119127a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119127a340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119127a4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f119127a660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119127a7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f119127a980"/>
        <function-ref name="setMode" scoped="" ref="0x7f119127ab10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f119127aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1191274160" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1191274160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f11912744e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1191274670"/>
        <function-ref name="captured" scoped="" ref="0x7f1191274800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191274990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1191274b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1191274cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1191276020" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1191276020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f11912763a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1191276530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f11912766c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1191276850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f11912769e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1191276b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1191276d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1191275020"/>
        <function-ref name="setControl" scoped="" ref="0x7f11912751b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f11912717a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f11912717a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1191271b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1191275480" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1191275480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1191275800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1191275990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1191275b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1191275cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f1191275e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1191273020" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1191273020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11912733a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1191273530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f11912736c0"/>
        <function-ref name="get" scoped="" ref="0x7f1191273850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f11912739e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191273b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1191273d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1191271020"/>
        <function-ref name="overflow" scoped="" ref="0x7f11912711b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1191271340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f11912714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f119126c7a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f119126c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119126cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f119126ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7f119126ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119126b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119126b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f119126b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f119126e6d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f119126e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f119126ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7f119126ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119126ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f119126d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f119126d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119126d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f119126d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f119126d660"/>
        <function-ref name="setControl" scoped="" ref="0x7f119126d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f119126ac50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f119126ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1191269020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f119126dac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f119126dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119126de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f119126c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f119126c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f119126c340"/>
        <function-ref name="fired" scoped="" ref="0x7f119126c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f119126b610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f119126b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f119126b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f119126bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119126bcb0"/>
        <function-ref name="get" scoped="" ref="0x7f119126be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119126a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119126a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f119126a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119126a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f119126a660"/>
        <function-ref name="setMode" scoped="" ref="0x7f119126a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f119126a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1191265cb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1191265cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f11912640a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1191264230"/>
        <function-ref name="captured" scoped="" ref="0x7f11912643c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191264550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f11912646e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1191264870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1191267b30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1191267b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1191266020"/>
        <function-ref name="getControl" scoped="" ref="0x7f11912661b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1191266340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f11912664d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1191266660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f11912667f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1191266980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1191266b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1191266ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f11912612f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f11912612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1191261670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1191265020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1191265020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f11912653a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1191265530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f11912656c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1191265850"/>
        <function-ref name="fired" scoped="" ref="0x7f11912659e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1191264b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1191264b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1191262020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f11912621b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1191262340"/>
        <function-ref name="get" scoped="" ref="0x7f11912624d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1191262660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f11912627f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1191262980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1191262b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1191262ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1191262e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1191261020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f119125c2f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f119125c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119125c670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f119125c800"/>
        <function-ref name="captured" scoped="" ref="0x7f119125c990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119125cb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119125ccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f119125ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f119125e220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f119125e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f119125e5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f119125e730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119125e8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f119125ea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f119125ebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119125ed70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f119125d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f119125d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f119125d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f119125a7a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f119125a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f119125ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f119125d610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f119125d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119125d990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f119125db20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f119125dcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f119125de40"/>
        <function-ref name="fired" scoped="" ref="0x7f119125c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f119125b160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f119125b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f119125b4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f119125b670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119125b800"/>
        <function-ref name="get" scoped="" ref="0x7f119125b990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119125bb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119125bcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f119125be40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119125a020"/>
        <function-ref name="overflow" scoped="" ref="0x7f119125a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f119125a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f119125a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f11912557a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f11912557a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1191255b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1191255cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1191255e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191254020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f11912541b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1191254340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f11912576d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f11912576d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1191257a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1191257be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1191257d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1191256020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f11912561b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1191256340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f11912564d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1191256660"/>
        <function-ref name="setControl" scoped="" ref="0x7f11912567f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1191253c50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1191253c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1191251020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1191256ac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1191256ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1191256e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1191255020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f11912551b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1191255340"/>
        <function-ref name="fired" scoped="" ref="0x7f11912554d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1191254610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1191254610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1191254990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1191254b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1191254cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1191254e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1191253020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f11912531b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1191253340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f11912534d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1191253660"/>
        <function-ref name="setMode" scoped="" ref="0x7f11912537f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1191253980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f119124dcb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f119124dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119124c0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f119124c230"/>
        <function-ref name="captured" scoped="" ref="0x7f119124c3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119124c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119124c6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f119124c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f119124fb30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f119124fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f119124e020"/>
        <function-ref name="getControl" scoped="" ref="0x7f119124e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119124e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f119124e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f119124e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119124e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f119124e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f119124eb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f119124eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f119124a2f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f119124a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f119124a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f119124d020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f119124d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119124d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f119124d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f119124d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f119124d850"/>
        <function-ref name="fired" scoped="" ref="0x7f119124d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f119124cb40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f119124cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f119124b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f119124b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119124b340"/>
        <function-ref name="get" scoped="" ref="0x7f119124b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119124b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119124b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f119124b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119124bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f119124bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f119124be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f119124a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f11912452f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f11912452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1191245670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1191245800"/>
        <function-ref name="captured" scoped="" ref="0x7f1191245990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191245b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1191245cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1191245e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1191247220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1191247220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f11912475a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1191247730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f11912478c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1191247a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1191247be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1191247d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1191246020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f11912461b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1191246340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f11912437a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f11912437a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1191243b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1191246610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1191246610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1191246990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1191246b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1191246cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1191246e40"/>
        <function-ref name="fired" scoped="" ref="0x7f1191245020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1191244160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1191244160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11912444e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1191244670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1191244800"/>
        <function-ref name="get" scoped="" ref="0x7f1191244990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1191244b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191244cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1191244e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1191243020"/>
        <function-ref name="overflow" scoped="" ref="0x7f11912431b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1191243340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f11912434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f119123d7a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f119123d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119123db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f119123dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f119123de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119123c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119123c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f119123c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f119123f6d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f119123f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f119123fa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f119123fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119123fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f119123e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f119123e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119123e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f119123e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f119123e660"/>
        <function-ref name="setControl" scoped="" ref="0x7f119123e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f119123bc50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f119123bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f119123a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f119123eac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f119123eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f119123ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f119123d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f119123d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f119123d340"/>
        <function-ref name="fired" scoped="" ref="0x7f119123d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f119123c610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f119123c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f119123c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f119123cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f119123ccb0"/>
        <function-ref name="get" scoped="" ref="0x7f119123ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f119123b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119123b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f119123b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119123b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f119123b660"/>
        <function-ref name="setMode" scoped="" ref="0x7f119123b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f119123b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1191236cb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1191236cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f11912350a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1191235230"/>
        <function-ref name="captured" scoped="" ref="0x7f11912353c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1191235550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f11912356e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1191235870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1191238b30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1191238b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1191237020"/>
        <function-ref name="getControl" scoped="" ref="0x7f11912371b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1191237340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f11912374d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1191237660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f11912377f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1191237980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1191237b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1191237ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f11912332f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f11912332f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1191233670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1191236020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1191236020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f11912363a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1191236530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f11912366c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1191236850"/>
        <function-ref name="fired" scoped="" ref="0x7f11912369e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1191235b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1191235b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1191234020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f11912341b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1191234340"/>
        <function-ref name="get" scoped="" ref="0x7f11912344d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1191234660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f11912347f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1191234980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1191234b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1191234ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1191234e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1191233020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f119122c240" loc="7:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f119122c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f119122c5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f1191230a90" loc="4:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1191230a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1191230e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f119122d260" loc="5:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f119122d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f119122d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f119122d9f0" loc="6:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f119122d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f119122dd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f11914d24c0" loc="55:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f11914d24c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f11914d2840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f11917e63b0" loc="51:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f11917e63b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f11917e6730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f11917e68c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f11917e6a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f119160ebc0" loc="52:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f119160ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f119174a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f119138db40" loc="39:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f119138db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f11911f7b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f11911f71b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f11911f7340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f11911f74d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f11911f7020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f11911f7660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f11911f77f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f11911f7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f11911ebdc0" loc="60:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f11911ebdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11911ea180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f11911f8590" loc="57:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f11911f8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f11911f8910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f11911eb6c0" loc="59:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f11911eb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11911eba40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f11911f8c00" loc="58:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f11911f8c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11911eb020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f11911eb1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f11911eb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1191cdb410" loc="48:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f1191cdb410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1191cdb790"/>
        <function-ref name="runTask" scoped="" ref="0x7f1191cdb920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1191c6c3a0" loc="47:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1191c6c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1191c6c720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1191c6c8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1191c6ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f11913f8040" loc="56:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f11913f8040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f11913f83c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f11913f8550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f11913f4490" loc="57:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f11913f4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f11913f4810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f11913f49a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f11913f4b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f11913fa140" loc="55:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f11913fa140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11913fa4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f11913fa650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f11913fa7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MultiChannel" ref="0x7f119112c3a0" loc="20:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f119112c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f119112c720"/>
        <function-ref name="configure" scoped="" ref="0x7f119112c8b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f119112ca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_A" ref="0x7f1191172220" loc="10:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_A" scoped="" ref="0x7f1191172220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f11911725a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f119115a7a0" loc="16:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f119115a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f119115ab20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f119115acb0"/>
        <function-ref name="start" scoped="" ref="0x7f119115ae40"/>
        <function-ref name="stop" scoped="" ref="0x7f119115f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f11911dcc40" loc="7:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f11911dcc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f11911db020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="getData" ref="0x7f1191012380" loc="586:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="getData" scoped="" ref="0x7f1191012380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1191012700"/>
        <function-ref name="runTask" scoped="" ref="0x7f1191012890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f11911505f0" loc="17:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f11911505f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1191150970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1191150b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1191150c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1191150e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f119115e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f11911768f0" loc="9:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f11911768f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1191176c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1191176e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f11911cf020"/>
        <function-ref name="cancel" scoped="" ref="0x7f11911cf1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f11911cf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="assignFlowstoSlots" ref="0x7f119111b420" loc="63:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7f119111b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f119111b7a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f119111b930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateSchedule" ref="0x7f11911172a0" loc="66:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateSchedule" scoped="" ref="0x7f11911172a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1191117620"/>
        <function-ref name="runTask" scoped="" ref="0x7f11911177b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7f11911699e0" loc="12:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7f11911699e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1191166020"/>
        <function-ref name="fired" scoped="" ref="0x7f1191174510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1191167300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1191174e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f1191166920"/>
        <function-ref name="gett0" scoped="" ref="0x7f11911664a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1191174990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1191183670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1191167910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1191183b40"/>
        <function-ref name="stop" scoped="" ref="0x7f1191174090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_B" ref="0x7f11911728e0" loc="11:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_B" scoped="" ref="0x7f11911728e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1191172c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7f1191125c40" loc="22:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1191125c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f119112b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeFlow" ref="0x7f119111c4a0" loc="62:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeFlow" scoped="" ref="0x7f119111c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f119111c820"/>
        <function-ref name="runTask" scoped="" ref="0x7f119111c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f11911d0590" loc="6:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f11911d0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f11911d0910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f11911d0aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f11911d0c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f11911d0dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f11911dc020"/>
        <function-ref name="get" scoped="" ref="0x7f11911dc1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f11911dc340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f11911dc980"/>
        <function-ref name="set" scoped="" ref="0x7f11911dc4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f11911dc660"/>
        <function-ref name="led2On" scoped="" ref="0x7f11911dc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeSchedule" ref="0x7f119111a370" loc="64:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeSchedule" scoped="" ref="0x7f119111a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f119111a6f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f119111a880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f11911279f0" loc="21:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f11911279f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1191127d70"/>
        <function-ref name="noAck" scoped="" ref="0x7f119114b020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f119114b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f119114c810" loc="19:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f119114c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f119114cb90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f119114cd20"/>
        <function-ref name="request" scoped="" ref="0x7f1191159020"/>
        <function-ref name="granted" scoped="" ref="0x7f11911591b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1191159340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7f1191165020" loc="13:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x7f1191165020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1191161630"/>
        <function-ref name="fired" scoped="" ref="0x7f1191164a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1191162920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f11911624a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1191160020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1191161ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1191162020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1191165c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1191161020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1191164110"/>
        <function-ref name="stop" scoped="" ref="0x7f11911645e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeCluster" ref="0x7f11911182b0" loc="65:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeCluster" scoped="" ref="0x7f11911182b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1191118630"/>
        <function-ref name="runTask" scoped="" ref="0x7f11911187c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PermutateCipher" ref="0x7f11911162a0" loc="67:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PermutateCipher" scoped="" ref="0x7f11911162a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1191116620"/>
        <function-ref name="runTask" scoped="" ref="0x7f11911167b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1190fda8d0" loc="46:../../../..//tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1190fda8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1190fdac50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1190fdade0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1190fd7020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1190fd71b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1190fd7340"/>
        <function-ref name="get" scoped="" ref="0x7f1190fd74d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1190fd7660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1190fd7ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1190fd77f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1190fd7980"/>
        <function-ref name="led2On" scoped="" ref="0x7f1190fd7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f1190fcb910" loc="50:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1190fcb910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190fcbc90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190fcbe20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190fd1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190fd11b0"/>
        <function-ref name="get" scoped="" ref="0x7f1190fd1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190fd14d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190fd1660"/>
        <function-ref name="clr" scoped="" ref="0x7f1190fd17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1190fd6c40" loc="46:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1190fd6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1190fd3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f1190fd1b10" loc="51:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1190fd1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190fd0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190fd01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190fd0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190fd04d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190fd0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190fd07f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190fd0980"/>
        <function-ref name="clr" scoped="" ref="0x7f1190fd0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1190fd32a0" loc="47:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1190fd32a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1190fd3620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1190fd37b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1190fd3940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1190fd3ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1190fd3c60"/>
        <function-ref name="get" scoped="" ref="0x7f1190fd3df0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1190fd2020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1190fd2660"/>
        <function-ref name="set" scoped="" ref="0x7f1190fd21b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1190fd2340"/>
        <function-ref name="led2On" scoped="" ref="0x7f1190fd24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f1190fd0e30" loc="52:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1190fd0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190fca1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190fca370"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190fca500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190fca690"/>
        <function-ref name="get" scoped="" ref="0x7f1190fca820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190fca9b0"/>
        <function-ref name="set" scoped="" ref="0x7f1190fcab40"/>
        <function-ref name="clr" scoped="" ref="0x7f1190fcacd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f1190fae360" loc="41:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1190fae360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190fae6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190fae870"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190faea00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190faeb90"/>
        <function-ref name="get" scoped="" ref="0x7f1190faed20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190fad020"/>
        <function-ref name="set" scoped="" ref="0x7f1190fad1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190fad340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f1190fad6a0" loc="42:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1190fad6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190fada20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190fadbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190fadd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190fac020"/>
        <function-ref name="get" scoped="" ref="0x7f1190fac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190fac340"/>
        <function-ref name="set" scoped="" ref="0x7f1190fac4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190fac660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f1190fabc40" loc="44:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1190fabc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1190faa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f1190fac9c0" loc="43:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1190fac9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190facd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190fab020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190fab1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190fab340"/>
        <function-ref name="get" scoped="" ref="0x7f1190fab4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190fab660"/>
        <function-ref name="set" scoped="" ref="0x7f1190fab7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190fab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1190f95020" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1190f95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f953a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f95530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f956c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f95850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f959e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f95b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f95d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f94020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f941b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f94340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f944d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f94660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f947f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f94a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f94c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1190f81020" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1190f81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f813a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f81530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f816c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f81850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f819e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f81b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f81d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f80020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f801b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f80340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f804d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f80660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f807f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f80a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f80c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f1190f37560" loc="145:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f1190f37560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f378e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f37a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f37c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f37d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f36020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f361b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f36340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f364d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f36660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f367f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f36980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f36b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f36ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f35020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f1190f12570" loc="165:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f1190f12570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f128f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f12a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f12c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f12da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f11020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f11340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f114d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f11660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f117f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f11980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f11b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f11ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f10020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f1190f35580" loc="146:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f1190f35580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f35900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f35a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f35c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f35db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f34020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f341b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f34340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f344d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f34660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f347f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f34980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f34b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f34ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f33020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f1190f7c020" loc="71:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f1190f7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f7c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f7c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f7c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f7c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f7c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f7cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f7cd00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f7b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f7b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f7b340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f7b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f7b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f7b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f7ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f7bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f1190f68200" loc="84:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f1190f68200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f68580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f68710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f688a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f68a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f68bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f68d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f67020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f671b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f67340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f674d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f67660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f677f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f67980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f67c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f67da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f1190f54200" loc="97:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f1190f54200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f54580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f54710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f548a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f54a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f54bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f54d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f53020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f531b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f53340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f534d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f53660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f537f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f53980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f53c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f53da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f1190f43200" loc="108:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f1190f43200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f43580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f43710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f438a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f43a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f43bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f43d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f42020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f421b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f42340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f424d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f42660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f427f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f42980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f42c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f42da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f1190f2f580" loc="149:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f1190f2f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f2f900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f2fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f2fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f2fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f2e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f2e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f2e340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f2e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f2e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f2e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f2e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f2eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f2eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f2d020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f2d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f1190f1f570" loc="159:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f1190f1f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f1f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f1fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f1fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f1fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f1d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f1d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f1d340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f1d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f1d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f1d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f1d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f1db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f1dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f1c020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f1190f0a580" loc="171:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f1190f0a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f0a900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f0aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f0ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f0adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f09020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f09340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f094d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f09660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f097f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f09980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f09b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f09ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f08020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1190f8f020" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1190f8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f8f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f8f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f8f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f8f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f8f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f8fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f8fd00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f8e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f8e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f8e340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f8e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f8e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f8e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f8ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f8ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f1190f2d580" loc="150:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f1190f2d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f2d900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f2da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f2dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f2ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f2c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f2c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f2c340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f2c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f2c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f2c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f2c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f2cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f2cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f2b020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1190f8b020" loc="61:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1190f8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f8b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f8b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f8b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f8b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f8b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f8bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f8bd00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f8a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f8a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f8a340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f8a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f8a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f8a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f8aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f8ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f1190f76020" loc="74:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f1190f76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f763a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f76530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f766c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f76850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f769e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f76b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f76d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f75020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f751b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f75340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f754d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f75660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f757f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f75a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f75c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f1190f62200" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f1190f62200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f62580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f62710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f628a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f62a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f62bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f62d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f61020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f611b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f61340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f614d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f61660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f617f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f61980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f61c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f61da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f1190f4d200" loc="100:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f1190f4d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f4d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f4d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f4d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f4da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f4dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f4dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f4c020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f4c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f4c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f4c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f4c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f4c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f4c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f4cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f4cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f1190f3d200" loc="111:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f1190f3d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f3d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f3d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f3d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f3da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f3dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f3dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f3c020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f3c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f3c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f3c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f3c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f3c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f3c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f3cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f3cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1190f99020" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1190f99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f993a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f99530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f996c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f99850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f999e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f99b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f99d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f98020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f981b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f98340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f984d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f98660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f987f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f98a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f98c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1190f85020" loc="64:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1190f85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f854a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f85630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f857c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f85950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f85ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f85c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f85e00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f84020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f841b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f84340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f844d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f84660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f847f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f84a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f84c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f1190f70020" loc="77:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f1190f70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f703a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f70530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f706c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f70850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f709e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f70b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f70d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f6f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f6f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f6f340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f6f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f6f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f6f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f6fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f6fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f1190f39580" loc="144:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f1190f39580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f39900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f39a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f39c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f39db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f38020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f381b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f38340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f384d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f38660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f387f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f38980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f38b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f38ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f37020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f1190f18570" loc="162:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f1190f18570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f188f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f18a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f18c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f18da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f17020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f171b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f17340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f174d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f17660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f177f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f17980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f17b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f17ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f16020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f1190f0c570" loc="169:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f1190f0c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f0c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f0ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f0cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f0cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f0b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f0b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f0b340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f0b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f0b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f0b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f0b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f0bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f0bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f0a020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f0a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f1190f25580" loc="155:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f1190f25580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f25900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f25a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f25c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f25db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f24020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f241b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f24340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f244d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f24660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f247f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f24980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f24b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f24ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f23020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f1190f6c020" loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f1190f6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f6c5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f6c730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f6c8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f6ca50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f6cbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f6cd70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f6b020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f6b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f6b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f6b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f6b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f6b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f6b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f6bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f6bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f1190f58200" loc="95:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f1190f58200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f58580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f58710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f588a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f58a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f58bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f58d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f57020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f571b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f57340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f574d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f57660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f577f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f57980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f57c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f57da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f1190f47200" loc="106:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f1190f47200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f47580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f47710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f478a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f47a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f47bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f47d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f46020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f461b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f46340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f464d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f46660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f467f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f46980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f46c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f46da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f1190f16570" loc="163:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f1190f16570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f168f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f16a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f16c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f16da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f15020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f151b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f15340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f154d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f15660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f157f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f15980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f15b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f15ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f14020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f1190f2b570" loc="152:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f1190f2b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f2b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f2ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f2bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f2bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f2a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f2a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f2a340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f2a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f2a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f2a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f2a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f2ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f2aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f29020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1190f93020" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1190f93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f933a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f93530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f936c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f93850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f939e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f93b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f93d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f92020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f921b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f92340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f924d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f92660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f927f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f92a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f92c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1190f7f020" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1190f7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f7f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f7f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f7f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f7f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f7f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f7fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f7fd00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f7e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f7e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f7e340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f7e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f7e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f7e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f7ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f7ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f1190f4b200" loc="104:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f1190f4b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f4b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f4b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f4b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f4ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f4bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f4bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f4a020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f4a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f4a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f4a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f4a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f4a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f4a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f4ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f4ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f1190f7a020" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f1190f7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f7a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f7a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f7a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f7a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f7a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f7ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f7ad00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f79020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f791b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f79340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f794d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f79660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f797f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f79a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f79c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f1190f66200" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f1190f66200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f66580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f66710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f668a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f66a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f66bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f66d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f65020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f651b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f65340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f654d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f65660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f657f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f65980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f65c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f65da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f1190f52200" loc="98:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f1190f52200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f52580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f52710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f528a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f52a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f52bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f52d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f51020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f511b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f51340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f514d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f51660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f517f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f51980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f51c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f51da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f1190f41200" loc="109:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f1190f41200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f41580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f41710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f418a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f41a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f41bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f41d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f40020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f401b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f40340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f404d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f40660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f407f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f40980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f40c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f40da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f1190f27580" loc="154:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f1190f27580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f27900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f27a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f27c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f27db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f26020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f261b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f26340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f264d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f26660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f267f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f26980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f26b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f26ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f25020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1190fa6020" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1190fa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190fa63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190fa6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190fa66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190fa6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190fa69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190fa6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190fa6d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190fa5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190fa51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190fa5340"/>
        <function-ref name="set" scoped="" ref="0x7f1190fa54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190fa5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190fa57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190fa5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190fa5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1190f89020" loc="62:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1190f89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f893a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f89530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f896c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f89850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f899e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f89b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f89d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f88020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f881b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f88340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f884d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f88660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f887f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f88a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f88c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f1190f74020" loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f1190f74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f743a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f74530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f746c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f74850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f749e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f74b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f74d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f73020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f731b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f73340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f734d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f73660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f737f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f73a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f73c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f1190f60200" loc="88:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f1190f60200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f60580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f60710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f608a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f60a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f60bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f60d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f5f020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f5f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f5f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f5f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f5f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f5f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f5f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f5fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f5fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f1190f23580" loc="156:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f1190f23580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f23900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f23a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f23c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f23db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f22020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f221b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f22340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f224d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f22660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f227f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f22980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f22b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f22ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f21020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f1190f1c570" loc="160:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f1190f1c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f1c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f1ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f1cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f1cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f1b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f1b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f1b340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f1b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f1b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f1b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f1b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f1bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f1bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f1a020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f1a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f1190f10570" loc="166:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f1190f10570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f108f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f10a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f10c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f10da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f0f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f0f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f0f340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f0f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f0f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f0f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f0f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f0fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f0fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f0e020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f1190f5c200" loc="93:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f1190f5c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f5c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f5c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f5c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f5ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f5cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f5cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f5b020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f5b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f5b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f5b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f5b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f5b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f5b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f5bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f5bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f1190f21580" loc="157:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f1190f21580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f21900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f21a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f21c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f21db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f20020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f201b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f20340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f204d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f20660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f207f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f20980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f20b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f20ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f1f020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f1f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1190f97020" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1190f97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f973a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f97530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f976c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f97850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f979e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f97b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f97d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f96020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f961b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f96340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f964d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f96660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f967f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f96a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f96c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1190f83020" loc="65:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1190f83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f833a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f83530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f836c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f83850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f839e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f83b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f83d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f82020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f821b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f82340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f824d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f82660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f827f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f82a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f82c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f1190f6e020" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f1190f6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f6e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f6e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f6e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f6e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f6e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f6eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f6ed00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f6d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f6d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f6d340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f6d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f6d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f6d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f6da80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f6dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f1190f29580" loc="153:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f1190f29580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f29900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f29a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f29c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f29db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f28020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f281b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f28340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f284d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f28660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f287f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f28980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f28b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f28ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f27020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f1190f14570" loc="164:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f1190f14570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f148f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f14a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f14c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f14da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f13020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f131b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f13340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f134d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f13660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f137f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f13980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f13b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f13ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f12020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f1190f6a200" loc="83:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f1190f6a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f6a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f6a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f6a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f6aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f6abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f6ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f69020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f691b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f69340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f694d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f69660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f697f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f69980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f69c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f69da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f1190f56200" loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f1190f56200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f56580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f56710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f568a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f56a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f56bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f56d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f55020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f551b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f55340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f554d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f55660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f557f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f55980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f55c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f55da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f1190f45200" loc="107:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f1190f45200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f45580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f45710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f458a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f45a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f45bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f45d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f44020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f441b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f44340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f444d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f44660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f447f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f44980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f44c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f44da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1190f91020" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1190f91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f913a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f91530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f916c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f91850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f919e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f91b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f91d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f90020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f901b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f90340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f904d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f90660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f907f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f90a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f90c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f1190f49200" loc="105:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f1190f49200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f49580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f49710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f498a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f49a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f49bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f49d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f48020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f481b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f48340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f484d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f48660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f487f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f48980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f48c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f48da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1190f8d020" loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1190f8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f8d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f8d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f8d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f8d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f8d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f8db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f8dd00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f8c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f8c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f8c340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f8c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f8c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f8c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f8ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f8cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f1190f78020" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f1190f78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f783a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f78530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f786c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f78850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f789e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f78b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f78d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f77020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f771b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f77340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f774d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f77660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f777f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f77a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f77c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f1190f64200" loc="86:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f1190f64200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f64580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f64710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f648a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f64a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f64bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f64d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f63020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f631b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f63340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f634d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f63660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f637f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f63980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f63c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f63da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f1190f50200" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f1190f50200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f50580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f50710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f508a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f50a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f50bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f50d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f4f020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f4f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f4f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f4f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f4f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f4f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f4f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f4fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f4fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f1190f3f200" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f1190f3f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f3f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f3f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f3f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f3fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f3fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f3fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f3e020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f3e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f3e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f3e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f3e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f3e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f3e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f3ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f3eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1190f9b020" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1190f9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f9b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f9b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f9b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f9b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f9b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f9bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f9bd00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f9a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f9a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f9a340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f9a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f9a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f9a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f9aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f9ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1190f87020" loc="63:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1190f87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f873a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f87530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f876c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f87850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f879e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f87b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f87d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f86020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f861b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f86340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f864d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f86660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f867f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f86a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f86c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f1190f72020" loc="76:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f1190f72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f723a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f72530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f726c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f72850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f729e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f72b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f72d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190f71020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f711b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f71340"/>
        <function-ref name="set" scoped="" ref="0x7f1190f714d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f71660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f717f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f71a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f71c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f1190f5e200" loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f1190f5e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f5e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f5e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f5e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f5ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f5ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f5ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f5d020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f5d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f5d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f5d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f5d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f5d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f5d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f5dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f5dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f1190f31560" loc="148:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f1190f31560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f318e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f31a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f31c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f31d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f30020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f301b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f30340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f304d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f30660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f307f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f30980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f30b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f30ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f2f020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f2f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f1190f1a570" loc="161:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f1190f1a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f1a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f1aa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f1ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f1ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f19020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f191b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f19340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f194d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f19660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f197f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f19980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f19b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f19ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f18020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f1190f33580" loc="147:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f1190f33580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f33900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f33a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f33c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f33db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f32020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f32340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f324d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f32660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f327f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f32980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f32b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f32ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f31020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f1190f5a200" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f1190f5a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f5a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f5a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f5a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f5aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f5abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f5ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f59020"/>
        <function-ref name="get" scoped="" ref="0x7f1190f591b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f59340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f594d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f59660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f597f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f59980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f59c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f59da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f1190f0e570" loc="168:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f1190f0e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f0e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f0ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f0ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f0eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f0d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f0d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f0d340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f0d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f0d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f0d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f0d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f0db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f0dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f0c020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f0c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f1190f08580" loc="172:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f1190f08580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f08900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f08a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f08c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f08db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f07020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f071b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f07340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f074d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f07660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f077f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f07980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f07b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f07ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f06020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f1190f3b1f0" loc="143:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f1190f3b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190f3b970"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190f3bb00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190f3bc90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190f3be20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190f3a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190f3a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190f3a340"/>
        <function-ref name="get" scoped="" ref="0x7f1190f3a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190f3a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190f3a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190f3a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190f3ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190f3aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190f39020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190f391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190edd6d0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190edd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190edda50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190eddbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190eddd70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190edc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190edc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190edc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190edc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190edc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190edc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190edc980"/>
        <function-ref name="set" scoped="" ref="0x7f1190edcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190edcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190edce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190edb120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190edb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190ed8100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190ed8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190ed8480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190ed8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190ed87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190ed8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190ed8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190ed8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190ed8de0"/>
        <function-ref name="get" scoped="" ref="0x7f1190ed7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190ed71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190ed7340"/>
        <function-ref name="set" scoped="" ref="0x7f1190ed74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190ed7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190ed77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190ed7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190ed7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190ed4d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190ed4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190ed30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190ed3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190ed3400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190ed3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190ed3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190ed38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190ed3a40"/>
        <function-ref name="get" scoped="" ref="0x7f1190ed3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190ed3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190ed2020"/>
        <function-ref name="set" scoped="" ref="0x7f1190ed21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190ed2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190ed24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190ed2760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190ed28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190ece740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190ece740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190eceac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190ecec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190ecede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190ecd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190ecd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190ecd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190ecd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190ecd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190ecd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190ecd980"/>
        <function-ref name="set" scoped="" ref="0x7f1190ecdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190ecdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190ecde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190ecc120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190ecc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190ec9100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190ec9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190ec9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190ec9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190ec97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190ec9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190ec9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190ec9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190ec9de0"/>
        <function-ref name="get" scoped="" ref="0x7f1190ec8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190ec81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190ec8340"/>
        <function-ref name="set" scoped="" ref="0x7f1190ec84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190ec8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190ec87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190ec8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190ec8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190ec5d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190ec5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190ec40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190ec4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190ec4400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190ec4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190ec4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190ec48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190ec4a40"/>
        <function-ref name="get" scoped="" ref="0x7f1190ec4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190ec4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190ec3020"/>
        <function-ref name="set" scoped="" ref="0x7f1190ec31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190ec3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190ec34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190ec3760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190ec38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190ec0740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190ec0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190ec0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190ec0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190ec0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190ebf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190ebf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190ebf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190ebf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190ebf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190ebf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190ebf980"/>
        <function-ref name="set" scoped="" ref="0x7f1190ebfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190ebfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190ebfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190ebe120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190ebe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190ebb100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190ebb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190ebb480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190ebb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190ebb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190ebb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190ebbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190ebbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190ebbde0"/>
        <function-ref name="get" scoped="" ref="0x7f1190eba020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190eba1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190eba340"/>
        <function-ref name="set" scoped="" ref="0x7f1190eba4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190eba660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190eba7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190ebaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190ebac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190eb7d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190eb7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190eb60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190eb6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190eb6400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190eb6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190eb6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190eb68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190eb6a40"/>
        <function-ref name="get" scoped="" ref="0x7f1190eb6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190eb6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190eb5020"/>
        <function-ref name="set" scoped="" ref="0x7f1190eb51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190eb5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190eb54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190eb5760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190eb58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190eb2740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190eb2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190eb2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190eb2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190eb2de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190eb1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190eb11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190eb1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190eb14d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190eb1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190eb17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190eb1980"/>
        <function-ref name="set" scoped="" ref="0x7f1190eb1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190eb1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190eb1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190eb0120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190eb02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190ead100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190ead100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190ead480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190ead610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190ead7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190ead930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190eadac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190eadc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190eadde0"/>
        <function-ref name="get" scoped="" ref="0x7f1190eab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190eab1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190eab340"/>
        <function-ref name="set" scoped="" ref="0x7f1190eab4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190eab660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190eab7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190eaba80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190eabc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190ea8d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190ea8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190ea70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190ea7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190ea7400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190ea7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190ea7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190ea78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190ea7a40"/>
        <function-ref name="get" scoped="" ref="0x7f1190ea7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190ea7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190ea6020"/>
        <function-ref name="set" scoped="" ref="0x7f1190ea61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190ea6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190ea64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190ea6760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190ea68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190ea3860" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190ea3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190ea3be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190ea3d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190ea2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190ea21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190ea2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190ea24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190ea2660"/>
        <function-ref name="get" scoped="" ref="0x7f1190ea27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190ea2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190ea2b10"/>
        <function-ref name="set" scoped="" ref="0x7f1190ea2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190ea2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190ea1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190ea12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190ea1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e9e270" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e9e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e9e5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e9e780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e9e910"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e9eaa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e9ec30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e9edc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e9d020"/>
        <function-ref name="get" scoped="" ref="0x7f1190e9d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e9d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e9d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190e9d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e9d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e9d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e9dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e9dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e9ad10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e9ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e990e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e99270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e99400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e99590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e99720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e998b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e99a40"/>
        <function-ref name="get" scoped="" ref="0x7f1190e99bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e99d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e98020"/>
        <function-ref name="set" scoped="" ref="0x7f1190e981b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e98340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e984d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e98760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e988f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e95740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e95740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e95ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e95c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e95de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e94020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e941b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e94340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e944d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e94660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e947f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e94980"/>
        <function-ref name="set" scoped="" ref="0x7f1190e94b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e94ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e94e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e93120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e932b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e90100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e90100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e90480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e90610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e907a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e90930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e90ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e90c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e90de0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e8f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e8f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e8f340"/>
        <function-ref name="set" scoped="" ref="0x7f1190e8f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e8f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e8f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e8fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e8fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e8cd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e8cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e8b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e8b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e8b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e8b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e8b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e8b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e8ba40"/>
        <function-ref name="get" scoped="" ref="0x7f1190e8bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e8bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e8a020"/>
        <function-ref name="set" scoped="" ref="0x7f1190e8a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e8a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e8a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e8a760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e8a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e87740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e87740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e87ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e87c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e87de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e85020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e851b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e85340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e854d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e85660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e857f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e85980"/>
        <function-ref name="set" scoped="" ref="0x7f1190e85b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e85ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e85e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e84120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e81100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e81100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e81480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e81610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e817a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e81930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e81ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e81c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e81de0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e80020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e801b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e80340"/>
        <function-ref name="set" scoped="" ref="0x7f1190e804d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e80660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e807f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e80a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e80c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e7dd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e7dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e7c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e7c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e7c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e7c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e7c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e7c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e7ca40"/>
        <function-ref name="get" scoped="" ref="0x7f1190e7cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e7cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e7b020"/>
        <function-ref name="set" scoped="" ref="0x7f1190e7b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e7b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e7b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e7b760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e7b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e78740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e78740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e78ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e78c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e78de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e77020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e771b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e77340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e774d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e77660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e777f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e77980"/>
        <function-ref name="set" scoped="" ref="0x7f1190e77b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e77ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e77e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e76120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e762b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e73100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e73100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e73480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e73610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e737a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e73930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e73ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e73c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e73de0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e72020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e721b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e72340"/>
        <function-ref name="set" scoped="" ref="0x7f1190e724d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e72660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e727f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e72a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e72c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e6fd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e6fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e6e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e6e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e6e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e6e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e6e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e6e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e6ea40"/>
        <function-ref name="get" scoped="" ref="0x7f1190e6ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e6ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e6d020"/>
        <function-ref name="set" scoped="" ref="0x7f1190e6d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e6d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e6d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e6d760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e6d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e6aa60" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e6aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e6ade0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e69020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e691b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e69340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e694d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e69660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e697f0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e69980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e69b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e69ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1190e69e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e68020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e681b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e68440"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e685d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e65460" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e65460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e657e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e65970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e65b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e65c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e65e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e64020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e641b0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e64340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e644d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e64660"/>
        <function-ref name="set" scoped="" ref="0x7f1190e647f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e64980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e64b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e64da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e60e00" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e60e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e5f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e5f350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e5f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e5f670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e5f800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e5f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e5fb20"/>
        <function-ref name="get" scoped="" ref="0x7f1190e5fcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e5fe40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e5e020"/>
        <function-ref name="set" scoped="" ref="0x7f1190e5e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e5e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e5e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e5e760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e5e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e5b740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e5b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e5bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e5bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e5bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e5a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e5a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e5a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e5a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e5a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e5a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e5a980"/>
        <function-ref name="set" scoped="" ref="0x7f1190e5ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e5aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e5ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e59120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e56100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e56100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e56480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e56610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e567a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e56930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e56ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e56c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e56de0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e55020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e55340"/>
        <function-ref name="set" scoped="" ref="0x7f1190e554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e55660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e55a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e55c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e52d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e52d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e510e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e51270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e51400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e51590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e51720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e518b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e51a40"/>
        <function-ref name="get" scoped="" ref="0x7f1190e51bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e51d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e50020"/>
        <function-ref name="set" scoped="" ref="0x7f1190e501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e50340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e504d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e50760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e4d740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e4d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e4dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e4dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e4dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e4c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e4c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e4c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e4c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e4c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e4c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e4c980"/>
        <function-ref name="set" scoped="" ref="0x7f1190e4cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e4cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e4ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e4b120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e4b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e48100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e48100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e48480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e48610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e487a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e48930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e48ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e48c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e48de0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e47020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e471b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e47340"/>
        <function-ref name="set" scoped="" ref="0x7f1190e474d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e47660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e477f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e47a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e47c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e44d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e44d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e430e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e43270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e43400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e43590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e43720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e438b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e43a40"/>
        <function-ref name="get" scoped="" ref="0x7f1190e43bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e43d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e42020"/>
        <function-ref name="set" scoped="" ref="0x7f1190e421b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e42340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e424d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e42760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e428f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e3f740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e3f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e3fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e3fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e3fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e3d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e3d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e3d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e3d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e3d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e3d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e3d980"/>
        <function-ref name="set" scoped="" ref="0x7f1190e3db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e3dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e3de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e3c120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e3c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e39100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e39100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e39480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e39610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e397a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e39930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e39ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e39c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e39de0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e38020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e381b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e38340"/>
        <function-ref name="set" scoped="" ref="0x7f1190e384d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e38660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e387f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e38a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e38c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e35d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e35d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e340e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e34270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e34400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e34590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e34720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e348b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e34a40"/>
        <function-ref name="get" scoped="" ref="0x7f1190e34bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e34d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e33020"/>
        <function-ref name="set" scoped="" ref="0x7f1190e331b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e33340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e334d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e33760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e338f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e30740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e30740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e30ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e30c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e30de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e2f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e2f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e2f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e2f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e2f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e2f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e2f980"/>
        <function-ref name="set" scoped="" ref="0x7f1190e2fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e2fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e2fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e2e120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e2e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e2b100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e2b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e2b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e2b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e2b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e2b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e2bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e2bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e2bde0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e2a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e2a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e2a340"/>
        <function-ref name="set" scoped="" ref="0x7f1190e2a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e2a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e2a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e2aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e2ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e27d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e27d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e260e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e26270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e26400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e26590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e26720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e268b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e26a40"/>
        <function-ref name="get" scoped="" ref="0x7f1190e26bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e26d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e25020"/>
        <function-ref name="set" scoped="" ref="0x7f1190e251b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e25340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e254d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e25760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e258f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e22740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e22740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e22ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e22c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e22de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e21020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e211b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e21340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e214d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e21660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e217f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e21980"/>
        <function-ref name="set" scoped="" ref="0x7f1190e21b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e21ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e21e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e20120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e202b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e1d100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e1d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e1d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e1d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e1d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e1d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e1dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e1dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e1dde0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e1c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e1c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e1c340"/>
        <function-ref name="set" scoped="" ref="0x7f1190e1c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e1c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e1c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e1ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e1cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e19d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e19d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e170e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e17270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e17400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e17590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e17720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e178b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e17a40"/>
        <function-ref name="get" scoped="" ref="0x7f1190e17bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e17d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e16020"/>
        <function-ref name="set" scoped="" ref="0x7f1190e161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e16340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e16760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e13740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e13740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e13ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e13c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e13de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e12020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e121b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e12340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e124d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e12660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e127f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e12980"/>
        <function-ref name="set" scoped="" ref="0x7f1190e12b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e12ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e12e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e11120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e112b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e0e100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e0e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e0e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e0e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e0e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e0e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e0eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e0ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e0ede0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e0d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e0d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e0d340"/>
        <function-ref name="set" scoped="" ref="0x7f1190e0d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e0d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e0d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e0da80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e0dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e0ad10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e0ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e090e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e09270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e09400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e09590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e09720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e098b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e09a40"/>
        <function-ref name="get" scoped="" ref="0x7f1190e09bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e09d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e08020"/>
        <function-ref name="set" scoped="" ref="0x7f1190e081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e08340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e08760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e05740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e05740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e05ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e05c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e05de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e04020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e041b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e04340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e044d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190e04660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190e047f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190e04980"/>
        <function-ref name="set" scoped="" ref="0x7f1190e04b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190e04ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190e04e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190e03120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190e032b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190e00100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190e00100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190e00480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190e00610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190e007a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190e00930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190e00ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190e00c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190e00de0"/>
        <function-ref name="get" scoped="" ref="0x7f1190dff020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190dff1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190dff340"/>
        <function-ref name="set" scoped="" ref="0x7f1190dff4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190dff660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190dff7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190dffa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190dffc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1190dfcd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1190dfcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190dfb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190dfb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190dfb400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190dfb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190dfb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190dfb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190dfba40"/>
        <function-ref name="get" scoped="" ref="0x7f1190dfbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190dfbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190dfa020"/>
        <function-ref name="set" scoped="" ref="0x7f1190dfa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190dfa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190dfa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190dfa760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190dfa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1190d83610" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190d83610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190d83990"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190d83b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190d83cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190d83e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190d81020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190d811b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190d81340"/>
        <function-ref name="get" scoped="" ref="0x7f1190d814d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190d81660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190d817f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190d81980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190d81b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190d81ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190d80020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190d801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1190d94440" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1190d94440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190d947c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190d94950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190d94ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190d94c70"/>
        <function-ref name="get" scoped="" ref="0x7f1190d94e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190d83020"/>
        <function-ref name="set" scoped="" ref="0x7f1190d831b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190d83340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1190d7d2f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190d7d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190d7d670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190d7d800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190d7d990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190d7db20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190d7dcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190d7de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190d7c020"/>
        <function-ref name="get" scoped="" ref="0x7f1190d7c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190d7c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190d7c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190d7c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190d7c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190d7c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190d7cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190d7cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1190d7e020" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1190d7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190d7e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190d7e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190d7e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190d7e850"/>
        <function-ref name="get" scoped="" ref="0x7f1190d7e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190d7eb70"/>
        <function-ref name="set" scoped="" ref="0x7f1190d7ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f1190d7d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1190d79de0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190d79de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190d78180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190d78310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190d784a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190d78630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190d787c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190d78950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190d78ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1190d78c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190d78e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190d77020"/>
        <function-ref name="set" scoped="" ref="0x7f1190d771b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190d77340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190d774d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190d77760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190d778f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1190d7ab90" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1190d7ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190d79020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190d791b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190d79340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190d794d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190d79660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190d797f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190d79980"/>
        <function-ref name="clr" scoped="" ref="0x7f1190d79b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f118fddb020" loc="49:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f118fddb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118fddb3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118fddb530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118fddb6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f118fddb850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118fddb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f118fddbc30" loc="50:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f118fddbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f118fdda020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f118fdda1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118fdda340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118fdda4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f118fdda660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f118fdda8b0" loc="51:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f118fdda8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f118fddac30"/>
        <function-ref name="source" scoped="" ref="0x7f118fddadc0"/>
        <function-ref name="address" scoped="" ref="0x7f118fdd9020"/>
        <function-ref name="destination" scoped="" ref="0x7f118fdd91b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f118fdd9340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f118fdd94d0"/>
        <function-ref name="type" scoped="" ref="0x7f118fdd9660"/>
        <function-ref name="setType" scoped="" ref="0x7f118fdd97f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f118fdd9980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f118fdd9b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f118fdd9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f118fdd8020" loc="52:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f118fdd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f118fdd83a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f118fdd8530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f118fdd86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f118f664b40" loc="49:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f118f664b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118f663020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118f6631b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118f663340"/>
        <function-ref name="cancel" scoped="" ref="0x7f118f6634d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118f663660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f118f6638b0" loc="50:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f118f6638b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f118f663c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f118f663dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118f662020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118f6621b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f118f662340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f118f662590" loc="51:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f118f662590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f118f662910"/>
        <function-ref name="source" scoped="" ref="0x7f118f662aa0"/>
        <function-ref name="address" scoped="" ref="0x7f118f662c30"/>
        <function-ref name="destination" scoped="" ref="0x7f118f662dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f118f660020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f118f6601b0"/>
        <function-ref name="type" scoped="" ref="0x7f118f660340"/>
        <function-ref name="setType" scoped="" ref="0x7f118f6604d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f118f660660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f118f6607f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f118f660980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f118f660c10" loc="52:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f118f660c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f118f65f020"/>
        <function-ref name="noAck" scoped="" ref="0x7f118f65f1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f118f65f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f118f656bc0" loc="44:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f118f656bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118f655020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118f6551b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118f655340"/>
        <function-ref name="cancel" scoped="" ref="0x7f118f6554d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118f655660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f118f655910" loc="46:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f118f655910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118f655c90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118f655e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118f654020"/>
        <function-ref name="cancel" scoped="" ref="0x7f118f6541b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118f654340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f118f654590" loc="47:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f118f654590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f118f654910"/>
        <function-ref name="source" scoped="" ref="0x7f118f654aa0"/>
        <function-ref name="address" scoped="" ref="0x7f118f654c30"/>
        <function-ref name="destination" scoped="" ref="0x7f118f654dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f118f653020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f118f6531b0"/>
        <function-ref name="type" scoped="" ref="0x7f118f653340"/>
        <function-ref name="setType" scoped="" ref="0x7f118f6534d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f118f653660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f118f6537f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f118f653980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1190d2f940" loc="43:../../../..//tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1190d2f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1190d2fcc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1190d2fe50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1190d2c020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1190d2c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1190d2c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1190ce1400" loc="48:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1190ce1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1190ce17a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1190ce1930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1190ce1ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1190ce1c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1190ce1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1190ce24b0" loc="46:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1190ce24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1190ce2850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1190ce29e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1190ce2b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f1190ce2d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1190ce1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1190cdf720" loc="50:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1190cdf720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1190cdfaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1190cdfc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1190cdfdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1190cde020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1190cde1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f1190cde480" loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f1190cde480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1190cde800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1190cde990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f1190cdec60" loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f1190cdec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1190cdd020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1190cdd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1190ce0060" loc="49:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1190ce0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1190ce03e0"/>
        <function-ref name="source" scoped="" ref="0x7f1190ce0570"/>
        <function-ref name="address" scoped="" ref="0x7f1190ce0700"/>
        <function-ref name="destination" scoped="" ref="0x7f1190ce0890"/>
        <function-ref name="setSource" scoped="" ref="0x7f1190ce0a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1190ce0bb0"/>
        <function-ref name="type" scoped="" ref="0x7f1190ce0d40"/>
        <function-ref name="setType" scoped="" ref="0x7f1190cdf020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1190cdf1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1190cdf340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1190cdf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1190cd9140" loc="61:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1190cd9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1190cd94c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1190cd9650"/>
        <function-ref name="start" scoped="" ref="0x7f1190cd97e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1190cd9970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1190cd81d0" loc="63:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1190cd81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1190cd8550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1190cd86e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1190cd8870"/>
        <function-ref name="cancel" scoped="" ref="0x7f1190cd8a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1190cd8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1190cd5020" loc="65:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1190cd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1190cd53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1190cd5630" loc="67:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1190cd5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1190cd59b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1190cd5b40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1190cd5cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1190cd5e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1190cd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1190cc9cd0" loc="70:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1190cc9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1190cd02e0"/>
        <function-ref name="clear" scoped="" ref="0x7f1190cd0a10"/>
        <function-ref name="isValid" scoped="" ref="0x7f1190cd1b60"/>
        <function-ref name="set" scoped="" ref="0x7f1190cc8170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1190cbcb20" loc="72:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1190cbcb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1190cc2020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1190cc21b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1190cc2340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1190cc24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1190cd63f0" loc="64:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1190cd63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1190cd6770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1190cd3990" loc="69:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1190cd3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1190cd3d10"/>
        <function-ref name="noAck" scoped="" ref="0x7f1190cd2020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1190cd21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1190cd42d0" loc="68:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1190cd42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1190cd4650"/>
        <function-ref name="source" scoped="" ref="0x7f1190cd47e0"/>
        <function-ref name="address" scoped="" ref="0x7f1190cd4970"/>
        <function-ref name="destination" scoped="" ref="0x7f1190cd4b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f1190cd4c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1190cd4e20"/>
        <function-ref name="type" scoped="" ref="0x7f1190cd3020"/>
        <function-ref name="setType" scoped="" ref="0x7f1190cd31b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1190cd3340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1190cd34d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1190cd3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1190cc8dc0" loc="71:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1190cc8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1190cc53f0"/>
        <function-ref name="clear" scoped="" ref="0x7f1190cc5b20"/>
        <function-ref name="isValid" scoped="" ref="0x7f1190cc6ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1190cc42a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1190cb0880" loc="55:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1190cb0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1190cb0c00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1190cb0d90"/>
        <function-ref name="start" scoped="" ref="0x7f1190caf020"/>
        <function-ref name="stop" scoped="" ref="0x7f1190caf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1190c96d40" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1190c96d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1190c9f0e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1190c9f270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1190c9f400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1190c9f590"/>
        <function-ref name="setCca" scoped="" ref="0x7f1190c9f720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1190c9f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1190c89d20" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1190c89d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1190c941c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1190cab760" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1190cab760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1190cabae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1190cabc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1190cabe00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1190caa020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1190caa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1190caf980" loc="56:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1190caf980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1190cafd00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1190cae020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1190cae1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1190cae340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1190cae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1190cad900" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1190cad900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1190cadc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1190ca1970" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1190ca1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1190ca1cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1190ca1e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1190ca8030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1190ca81c0"/>
        <function-ref name="getPower" scoped="" ref="0x7f1190ca8350"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1190ca84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1190c9fbb0" loc="65:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1190c9fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1190c9d020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1190c9d1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1190c9d340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1190c9d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1190caecb0" loc="57:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1190caecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1190cad0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1190ca8810" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1190ca8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1190ca8b90"/>
        <function-ref name="noAck" scoped="" ref="0x7f1190ca8d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1190ca7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1190c95020" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1190c95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1190c953a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1190c95530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1190c956c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1190c95850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1190c959e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1190cac020" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1190cac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1190cac3a0"/>
        <function-ref name="source" scoped="" ref="0x7f1190cac530"/>
        <function-ref name="address" scoped="" ref="0x7f1190cac6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f1190cac850"/>
        <function-ref name="setSource" scoped="" ref="0x7f1190cac9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1190cacb70"/>
        <function-ref name="type" scoped="" ref="0x7f1190cacd00"/>
        <function-ref name="setType" scoped="" ref="0x7f1190cab020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1190cab1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1190cab340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1190cab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1190c9ea80" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1190c9ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1190c9ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1190c8cb70" loc="43:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1190c8cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1190c86020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1190c861b0"/>
        <function-ref name="start" scoped="" ref="0x7f1190c86340"/>
        <function-ref name="stop" scoped="" ref="0x7f1190c864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1190c7f9d0" loc="55:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1190c7f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1190c7fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1190c7eb70" loc="57:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1190c7eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1190c7d020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1190c7d1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1190c7d340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1190c7d4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1190c7d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1190c80140" loc="53:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1190c80140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1190c804c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1190c80650"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1190c807e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1190c80970"/>
        <function-ref name="getPower" scoped="" ref="0x7f1190c80b00"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1190c80c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1190c83d10" loc="50:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f1190c83d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1190c810e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1190c81270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1190c81400"/>
        <function-ref name="cancel" scoped="" ref="0x7f1190c81590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1190c81720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1190c7e080" loc="56:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1190c7e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1190c7e400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1190c7e590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1190c7e720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1190c7e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1190c84820" loc="47:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f1190c84820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1190c84ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1190c7f020" loc="54:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1190c7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1190c7f3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1190c7f530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1190c7f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1190c86d00" loc="45:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1190c86d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190c850a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190c85230"/>
        <function-ref name="request" scoped="" ref="0x7f1190c853c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1190c85550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190c856e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1190c85a00" loc="46:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f1190c85a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1190c85d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1190c84020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1190c841b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1190c84340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1190c844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1190c83020" loc="48:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1190c83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1190c833a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1190c83530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1190c836c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1190c83850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1190c839e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1190c81a90" loc="51:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1190c81a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1190c81e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1190c7a390" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1190c7a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1190c7a710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1190c7a8a0"/>
        <function-ref name="start" scoped="" ref="0x7f1190c7aa30"/>
        <function-ref name="stop" scoped="" ref="0x7f1190c7abc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1190c78330" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1190c78330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1190c786b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1190c78840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1190c789d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1190c78b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f1190c78cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1190c78e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1190c7ae80" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1190c7ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1190c79220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1190c793b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1190c79540"/>
        <function-ref name="cancel" scoped="" ref="0x7f1190c796d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1190c79860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1190c79b40" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1190c79b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1190c78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1190c77e80" loc="39:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1190c77e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1190c74220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1190c743b0"/>
        <function-ref name="start" scoped="" ref="0x7f1190c74540"/>
        <function-ref name="stop" scoped="" ref="0x7f1190c746d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1190c737e0" loc="41:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1190c737e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1190c73b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1190c73cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1190c73e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1190c72030"/>
        <function-ref name="setCca" scoped="" ref="0x7f1190c721c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1190c72350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f1190c67060" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f1190c67060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1190c673e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1190c67570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1190c67700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1190c67890"/>
        <function-ref name="setCca" scoped="" ref="0x7f1190c67a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1190c67bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1190c5c330" loc="50:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1190c5c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1190c5c6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1190c5c840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1190c5c9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1190c5cb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f1190c5ccf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1190c5ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f1190c5e2a0" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1190c5e2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1190c5e620"/>
        <function-ref name="cancel" scoped="" ref="0x7f1190c5e7b0"/>
        <function-ref name="modify" scoped="" ref="0x7f1190c5e940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1190c5ead0"/>
        <function-ref name="resend" scoped="" ref="0x7f1190c5ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1190c74990" loc="40:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1190c74990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1190c74d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1190c73020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1190c731b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1190c73340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1190c734d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f1190c5b420" loc="48:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1190c5b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1190c5b7a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1190c5b930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f1190c66760" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f1190c66760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1190c66ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f1190c66c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1190c54920" loc="51:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1190c54920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1190c54ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1190c54e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1190c59020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f1190c69b50" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f1190c69b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1190c70020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1190c701b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f1190c70340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f1190c704d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f1190c70660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f1190c707f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1190c70980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f1190c70b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1190c5bbf0" loc="49:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1190c5bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1190c5d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1190c5d1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1190c5d340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1190c5d4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1190c5d660"/>
        <function-ref name="get" scoped="" ref="0x7f1190c5d7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1190c5d980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1190c5c020"/>
        <function-ref name="set" scoped="" ref="0x7f1190c5db10"/>
        <function-ref name="led0On" scoped="" ref="0x7f1190c5dca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1190c5de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1190c72640" loc="43:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1190c72640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190c729c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190c72b50"/>
        <function-ref name="request" scoped="" ref="0x7f1190c72ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f1190c72e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190c71030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f1190c58110" loc="52:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f1190c58110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1190c58590"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1190c58720"/>
        <function-ref name="isState" scoped="" ref="0x7f1190c588b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1190c58a40"/>
        <function-ref name="requestState" scoped="" ref="0x7f1190c58bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1190c58d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f1190c4ab70" loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f1190c4ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1190c49020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1190c491b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f1190c4bba0" loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f1190c4bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1190c4a020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1190c4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f1190c4cc20" loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f1190c4cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1190c4b020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1190c4b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f1190bf2dc0" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1190bf2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1190bfe180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1190bfe310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1190bfe4a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1190bfe630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1190bfe7c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1190bfe950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1190bfeae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1190bfec70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1190bfee00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1190bfd020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1190bfd1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1190bfd340"/>
        <function-ref name="sync" scoped="" ref="0x7f1190bfd4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1190bfd760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1190bfd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f1190bef0c0" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f1190bef0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190befcb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1190bee170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f1190bfdbf0" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f1190bfdbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1190bf1020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1190bf11b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f1190bf1340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f1190bf14d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f1190bf1660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f1190bf17f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1190bf1980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f1190bf1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1190c02950" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1190c02950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190c02cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190c02e60"/>
        <function-ref name="request" scoped="" ref="0x7f1190bff020"/>
        <function-ref name="granted" scoped="" ref="0x7f1190bff1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190bff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f1190be8970" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1190be8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1190be8cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1190be8e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1190be7030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1190be71c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1190be7350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1190be74e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1190be7670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1190be7800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1190be7990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1190be7b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1190be7cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1190be7e40"/>
        <function-ref name="sync" scoped="" ref="0x7f1190be6020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1190be62b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1190be6440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f1190bc08e0" loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1190bc08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190bc0c60"/>
        <function-ref name="write" scoped="" ref="0x7f1190bc0df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f1190be2020" loc="50:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1190be2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f1190be23a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f1190bd9d90" loc="52:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f1190bd9d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1190bd8670"/>
        <function-ref name="fired" scoped="" ref="0x7f1190bdf5d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1190bd8020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1190bdfa90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1190bd8b30"/>
        <function-ref name="start" scoped="" ref="0x7f1190be1bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f1190bdf110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f1190bc45f0" loc="64:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1190bc45f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190bc4970"/>
        <function-ref name="write" scoped="" ref="0x7f1190bc4b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f1190bd5380" loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f1190bd5380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190bd5700"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190bd5890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190bd5a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190bd5bb0"/>
        <function-ref name="get" scoped="" ref="0x7f1190bd5d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190bd4020"/>
        <function-ref name="set" scoped="" ref="0x7f1190bd41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190bd4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f1190be5b40" loc="48:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f1190be5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190be4750"/>
        <function-ref name="readDone" scoped="" ref="0x7f1190be4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f1190bae820" loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f1190bae820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1190baeba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1190baed30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f1190bbf1c0" loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1190bbf1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190bbf540"/>
        <function-ref name="write" scoped="" ref="0x7f1190bbf6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f1190bbfa70" loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1190bbfa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190bbfdf0"/>
        <function-ref name="write" scoped="" ref="0x7f1190bbe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f1190bc93d0" loc="62:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1190bc93d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190bc9750"/>
        <function-ref name="write" scoped="" ref="0x7f1190bc98e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f1190bca810" loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1190bca810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1190bcab90"/>
        <function-ref name="changed" scoped="" ref="0x7f1190bcad20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1190bd1020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1190bd11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1190bd6060" loc="53:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1190bd6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190bd63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190bd6570"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190bd6700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190bd6890"/>
        <function-ref name="get" scoped="" ref="0x7f1190bd6a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190bd6bb0"/>
        <function-ref name="set" scoped="" ref="0x7f1190bd6d40"/>
        <function-ref name="clr" scoped="" ref="0x7f1190bd5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f1190bbd120" loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1190bbd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190bbd6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f1190bd46a0" loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f1190bd46a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190bd4a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190bd4bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190bd4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190bd3020"/>
        <function-ref name="get" scoped="" ref="0x7f1190bd31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190bd3340"/>
        <function-ref name="set" scoped="" ref="0x7f1190bd34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190bd3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1190be9510" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1190be9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1190be9890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f1190bc0020" loc="65:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1190bc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190bc03a0"/>
        <function-ref name="write" scoped="" ref="0x7f1190bc0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f1190bbda40" loc="72:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1190bbda40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190bbddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1190bbc1d0" loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1190bbc1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190bbc550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190bbc6e0"/>
        <function-ref name="request" scoped="" ref="0x7f1190bbc870"/>
        <function-ref name="granted" scoped="" ref="0x7f1190bbca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190bbcb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f1190bbad90" loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f1190bbad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190bb9180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190bb9310"/>
        <function-ref name="request" scoped="" ref="0x7f1190bb94a0"/>
        <function-ref name="granted" scoped="" ref="0x7f1190bb9630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190bb97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f1190be6740" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f1190be6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1190be6ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1190be6c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f1190be6de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f1190be5020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f1190be51b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f1190be5340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1190be54d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f1190be5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f1190bc9c80" loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1190bc9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190bc40a0"/>
        <function-ref name="write" scoped="" ref="0x7f1190bc4230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f1190bc2b00" loc="61:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1190bc2b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190bc2e80"/>
        <function-ref name="write" scoped="" ref="0x7f1190bc9030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f1190bbb2b0" loc="69:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1190bbb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190bbb630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1190bb9a80" loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1190bb9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1190bb9e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1190bb8020"/>
        <function-ref name="led1On" scoped="" ref="0x7f1190bb81b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1190bb8340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1190bb84d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190bb8660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1190bb87f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1190bb8e30"/>
        <function-ref name="set" scoped="" ref="0x7f1190bb8980"/>
        <function-ref name="led0On" scoped="" ref="0x7f1190bb8b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f1190bb8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f1190bb0940" loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f1190bb0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1190bb0cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1190bb0e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1190be9b80" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1190be9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190be8020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190be81b0"/>
        <function-ref name="request" scoped="" ref="0x7f1190be8340"/>
        <function-ref name="granted" scoped="" ref="0x7f1190be84d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190be8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f1190bce520" loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1190bce520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190bce8a0"/>
        <function-ref name="write" scoped="" ref="0x7f1190bcea30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f1190bc5a90" loc="59:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1190bc5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190bce020"/>
        <function-ref name="write" scoped="" ref="0x7f1190bce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f1190bd20e0" loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f1190bd20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1190bd2460"/>
        <function-ref name="disable" scoped="" ref="0x7f1190bd25f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1190bd2780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1190bd2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f1190bba020" loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f1190bba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190bba3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190bba530"/>
        <function-ref name="request" scoped="" ref="0x7f1190bba6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1190bba850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190bba9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f1190bbb9c0" loc="70:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1190bbb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190bbbd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1190b397e0" loc="45:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1190b397e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1190b39b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f1190b35220" loc="46:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1190b35220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1190b33b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1190b34a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f1190b334e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1190b33020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1190b32020"/>
        <function-ref name="start" scoped="" ref="0x7f1190b34090"/>
        <function-ref name="stop" scoped="" ref="0x7f1190b345a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1190b30d40" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1190b30d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1190b2f0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f1190b2f5f0" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1190b2f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1190a36e50"/>
        <function-ref name="fired" scoped="" ref="0x7f1190a37e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f1190a36800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1190a36340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1190a34340"/>
        <function-ref name="start" scoped="" ref="0x7f1190a37430"/>
        <function-ref name="stop" scoped="" ref="0x7f1190a37940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f118f5da260" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f118f5da260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118f5d8b30"/>
        <function-ref name="fired" scoped="" ref="0x7f118f5d9a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f118f5d84e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118f5d8020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f118f5d7020"/>
        <function-ref name="start" scoped="" ref="0x7f118f5d9090"/>
        <function-ref name="stop" scoped="" ref="0x7f118f5d95a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f118f5dc9d0" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f118f5dc9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f118f5dcd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f118f5d32a0" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f118f5d32a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118f5d1b30"/>
        <function-ref name="fired" scoped="" ref="0x7f118f5d2aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f118f5d14e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118f5d1020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f118f5cf020"/>
        <function-ref name="start" scoped="" ref="0x7f118f5d20d0"/>
        <function-ref name="stop" scoped="" ref="0x7f118f5d25e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f118f5d4a10" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f118f5d4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f118f5d4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f118f5bbc10" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f118f5bbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f118f5b9020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f118f5b91b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f118f5b9340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f118f5b94d0"/>
        <function-ref name="fired" scoped="" ref="0x7f118f5b9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f118f5bd1b0" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f118f5bd1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f118f5bd530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f118f5bd6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f118f5bd850"/>
        <function-ref name="get" scoped="" ref="0x7f118f5bd9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f118f5bdb70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f118f5bdd00"/>
        <function-ref name="getMode" scoped="" ref="0x7f118f5bc020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f118f5bc1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f118f5bc340"/>
        <function-ref name="setMode" scoped="" ref="0x7f118f5bc4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f118f5bc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f118f5bc8f0" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f118f5bc8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f118f5bcc70"/>
        <function-ref name="getControl" scoped="" ref="0x7f118f5bce00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f118f5bb020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f118f5bb1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f118f5bb340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f118f5bb4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f118f5bb660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f118f5bb7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f118f5bb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1190b0cba0" loc="52:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1190b0cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1190b0b020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1190b0b1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1190b0b340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1190b0b4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1190b0b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1190b104d0" loc="50:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1190b104d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1190b10850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1190b109e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1190b10b70"/>
        <function-ref name="get" scoped="" ref="0x7f1190b10d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1190b0f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1190b0f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1190b0f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1190b0f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1190b0f660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1190b0f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1190b0f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1190b0e280" loc="51:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1190b0e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1190b0e600"/>
        <function-ref name="getControl" scoped="" ref="0x7f1190b0e790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1190b0e920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1190b0eab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1190b0ec40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1190b0edd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1190b0c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1190b0c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1190b0c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f118f5b1a80" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f118f5b1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f118f5b1e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f118f5af020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f118f5af1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f118f5af340"/>
        <function-ref name="fired" scoped="" ref="0x7f118f5af4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f118f5b3020" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f118f5b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f118f5b33a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f118f5b3530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f118f5b36c0"/>
        <function-ref name="get" scoped="" ref="0x7f118f5b3850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f118f5b39e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f118f5b3b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f118f5b3d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f118f5b2020"/>
        <function-ref name="overflow" scoped="" ref="0x7f118f5b21b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f118f5b2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f118f5b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f118f5b7da0" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f118f5b7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118f5b4670"/>
        <function-ref name="fired" scoped="" ref="0x7f118f5b5610"/>
        <function-ref name="startAt" scoped="" ref="0x7f118f5b4020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118f5b5ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f118f5b4b30"/>
        <function-ref name="start" scoped="" ref="0x7f118f5b6bf0"/>
        <function-ref name="stop" scoped="" ref="0x7f118f5b5150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f118f5b7510" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f118f5b7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f118f5b7890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f118f5b2760" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f118f5b2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f118f5b2ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f118f5b2c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f118f5b2e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f118f5b1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f118f5b11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f118f5b1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f118f5b14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f118f5b1660"/>
        <function-ref name="setControl" scoped="" ref="0x7f118f5b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1190abb020" loc="43:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1190abb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1190abbe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1190aba800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1190aba340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1190abacc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f1190ab2020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1190ab2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1190ab2e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1190ab1800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1190ab1340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1190ab1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1190a9e2c0" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1190a9e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1190a9e640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1190a9e7d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1190a9e960"/>
        <function-ref name="get" scoped="" ref="0x7f1190a9eaf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1190a9ec80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1190a9ee10"/>
        <function-ref name="getMode" scoped="" ref="0x7f1190a9d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1190a9d1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1190a9d340"/>
        <function-ref name="setMode" scoped="" ref="0x7f1190a9d4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1190a9d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1190aad0a0" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1190aad0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1190aa0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1190aa09a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1190aa04e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1190aa0e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1190a7b020" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f1190a7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1190a7be30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1190a7a800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1190a7a340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1190a7acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1190a99ad0" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1190a99ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1190a7e970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1190a7c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1190a7ee30"/>
        <function-ref name="overflow" scoped="" ref="0x7f1190a7c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f118f5cd5f0" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f118f5cd5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118f5cbe50"/>
        <function-ref name="fired" scoped="" ref="0x7f118f5cce00"/>
        <function-ref name="startAt" scoped="" ref="0x7f118f5cb800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118f5cb340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f118f5ca340"/>
        <function-ref name="start" scoped="" ref="0x7f118f5cc430"/>
        <function-ref name="stop" scoped="" ref="0x7f118f5cc940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f118f5c7d20" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f118f5c7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118f5c4670"/>
        <function-ref name="fired" scoped="" ref="0x7f118f5c5550"/>
        <function-ref name="startAt" scoped="" ref="0x7f118f5c4020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118f5c5a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f118f5c4b30"/>
        <function-ref name="start" scoped="" ref="0x7f118f5c6b60"/>
        <function-ref name="stop" scoped="" ref="0x7f118f5c5090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f118f5ca9b0" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f118f5ca9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f118f5c87e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f118f5c71b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f118f5c8ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f118f5c7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f1190a2f9c0" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f1190a2f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a2fd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a2e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a2e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a2e340"/>
        <function-ref name="get" scoped="" ref="0x7f1190a2e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a2e660"/>
        <function-ref name="set" scoped="" ref="0x7f1190a2e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a2e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f1190a2ecf0" loc="45:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f1190a2ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a2d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a2d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a2d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a2d550"/>
        <function-ref name="get" scoped="" ref="0x7f1190a2d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a2d870"/>
        <function-ref name="set" scoped="" ref="0x7f1190a2da00"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a2db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f1190a2c020" loc="46:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f1190a2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a2c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a2c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a2c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a2c850"/>
        <function-ref name="get" scoped="" ref="0x7f1190a2c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a2cb70"/>
        <function-ref name="set" scoped="" ref="0x7f1190a2cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f1190a30690" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1190a30690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a30a10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a30ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a30d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a2f020"/>
        <function-ref name="get" scoped="" ref="0x7f1190a2f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a2f340"/>
        <function-ref name="set" scoped="" ref="0x7f1190a2f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a2f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f1190a2a6a0" loc="48:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f1190a2a6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a2aa20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a2abb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a2ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a29020"/>
        <function-ref name="get" scoped="" ref="0x7f1190a291b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a29340"/>
        <function-ref name="set" scoped="" ref="0x7f1190a294d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a29660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f1190a313e0" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f1190a313e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a31760"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a318f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a31a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a31c10"/>
        <function-ref name="get" scoped="" ref="0x7f1190a31da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a30020"/>
        <function-ref name="set" scoped="" ref="0x7f1190a301b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a30340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f1190a2b370" loc="47:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f1190a2b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a2b6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a2b880"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a2ba10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a2bba0"/>
        <function-ref name="get" scoped="" ref="0x7f1190a2bd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a2a020"/>
        <function-ref name="set" scoped="" ref="0x7f1190a2a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a2a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1190a27c50" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a27c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a26020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a261b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190a26340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a264d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a26660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190a267f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a26980"/>
        <function-ref name="get" scoped="" ref="0x7f1190a26b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190a26ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190a26e30"/>
        <function-ref name="set" scoped="" ref="0x7f1190a25020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190a251b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190a25340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190a255d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a25760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1190a28a20" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a28a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a28da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a27020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a271b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a27340"/>
        <function-ref name="get" scoped="" ref="0x7f1190a274d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a27660"/>
        <function-ref name="set" scoped="" ref="0x7f1190a277f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a27980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1190a227a0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a227a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a22b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a22cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190a22e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a20020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a201b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190a20340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a204d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190a20660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190a207f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190a20980"/>
        <function-ref name="set" scoped="" ref="0x7f1190a20b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190a20ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190a20e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190a1f120"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a1f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1190a23520" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a23520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a238a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a23a30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a23bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a23d50"/>
        <function-ref name="get" scoped="" ref="0x7f1190a22020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a221b0"/>
        <function-ref name="set" scoped="" ref="0x7f1190a22340"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a224d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1190a1c2f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a1c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a1c670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a1c800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190a1c990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a1cb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a1ccb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190a1ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a1b020"/>
        <function-ref name="get" scoped="" ref="0x7f1190a1b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190a1b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190a1b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190a1b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190a1b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190a1b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190a1bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a1bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1190a1d060" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a1d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a1d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a1d570"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a1d700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a1d890"/>
        <function-ref name="get" scoped="" ref="0x7f1190a1da20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a1dbb0"/>
        <function-ref name="set" scoped="" ref="0x7f1190a1dd40"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a1c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1190a18de0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a18de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a17180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a17310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190a174a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a17630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a177c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190a17950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a17ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1190a17c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190a17e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190a16020"/>
        <function-ref name="set" scoped="" ref="0x7f1190a161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190a16340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190a164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190a16760"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1190a19b70" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a19b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a18020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a181b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a18340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a184d0"/>
        <function-ref name="get" scoped="" ref="0x7f1190a18660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a187f0"/>
        <function-ref name="set" scoped="" ref="0x7f1190a18980"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a18b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1190a13930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a13930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a13cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a13e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190a12020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a121b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a12340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190a124d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a12660"/>
        <function-ref name="get" scoped="" ref="0x7f1190a127f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190a12980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190a12b10"/>
        <function-ref name="set" scoped="" ref="0x7f1190a12ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190a12e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190a11020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190a112b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a11440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1190a14710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a14710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a14a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a14c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a14db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a13020"/>
        <function-ref name="get" scoped="" ref="0x7f1190a131b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a13340"/>
        <function-ref name="set" scoped="" ref="0x7f1190a134d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a13660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1190a0e480" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a0e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a0e800"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a0e990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190a0eb20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a0ecb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a0ee40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190a0d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a0d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1190a0d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190a0d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190a0d660"/>
        <function-ref name="set" scoped="" ref="0x7f1190a0d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190a0d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190a0db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190a0dda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1190a0f1b0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a0f1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a0f530"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a0f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a0f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a0f9e0"/>
        <function-ref name="get" scoped="" ref="0x7f1190a0fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a0fd00"/>
        <function-ref name="set" scoped="" ref="0x7f1190a0e020"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1190a08020" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1190a08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a08530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190a086c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a08850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a089e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190a08b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a08d00"/>
        <function-ref name="get" scoped="" ref="0x7f1190a07020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190a071b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190a07340"/>
        <function-ref name="set" scoped="" ref="0x7f1190a074d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190a07660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1190a077f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190a07a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a07c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1190a0bd70" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1190a0bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190a09180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190a09310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190a094a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190a09630"/>
        <function-ref name="get" scoped="" ref="0x7f1190a097c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190a09950"/>
        <function-ref name="set" scoped="" ref="0x7f1190a09ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190a09c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f11909ee5a0" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f11909ee5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f11909ee920"/>
        <function-ref name="disable" scoped="" ref="0x7f11909eeab0"/>
        <function-ref name="captured" scoped="" ref="0x7f11909eec40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f11909eedd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f11909f2210" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f11909f2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11909f2590"/>
        <function-ref name="disable" scoped="" ref="0x7f11909f2720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f11909f28b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f11909f2a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f11909f2e30" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f11909f2e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11909f11e0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909f1370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f11909f1500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f11909f1690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f11909d8da0" loc="42:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f11909d8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f11909d7180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f11909d7310"/>
        <function-ref name="captured" scoped="" ref="0x7f11909d74a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f11909d7630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f11909d77c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f11909d7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f11909d9020" loc="40:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f11909d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f11909d93a0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909d9530"/>
        <function-ref name="captured" scoped="" ref="0x7f11909d96c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f11909d9850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f11909d9ae0" loc="41:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f11909d9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f11909d9e60"/>
        <function-ref name="getControl" scoped="" ref="0x7f11909d8020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f11909d81b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f11909d8340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f11909d84d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f11909d8660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f11909d87f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f11909d8980"/>
        <function-ref name="setControl" scoped="" ref="0x7f11909d8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f11909d7c20" loc="43:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f11909d7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f11909d6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f11909d61b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f11909d6340"/>
        <function-ref name="toggle" scoped="" ref="0x7f11909d64d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f11909d6660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f11909d67f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f11909d6980"/>
        <function-ref name="get" scoped="" ref="0x7f11909d6b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f11909d6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f11909d6e30"/>
        <function-ref name="set" scoped="" ref="0x7f11909d5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f11909d51b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f11909d5340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f11909d55d0"/>
        <function-ref name="clr" scoped="" ref="0x7f11909d5760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f11909c8c40" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f11909c8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909c7020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909c71b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909c7340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909c74d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909c7660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909c77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f11909bebc0" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f11909bebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909bc020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909bc1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909bc340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909bc4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909bc660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909bc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f11909c5bc0" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f11909c5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909c4020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909c41b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909c4340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909c44d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909c4660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909c47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f11909c3bc0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f11909c3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909c2020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909c21b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909c2340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909c24d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909c2660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909c27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f11909ced20" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f11909ced20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909c90e0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909c9270"/>
        <function-ref name="disable" scoped="" ref="0x7f11909c9400"/>
        <function-ref name="edge" scoped="" ref="0x7f11909c9590"/>
        <function-ref name="enable" scoped="" ref="0x7f11909c9720"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909c98b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f11909c0bc0" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f11909c0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909bf0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909bf230"/>
        <function-ref name="disable" scoped="" ref="0x7f11909bf3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909bf550"/>
        <function-ref name="enable" scoped="" ref="0x7f11909bf6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909bf870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f11909c7bc0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f11909c7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909c6020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909c61b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909c6340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909c64d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909c6660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909c67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f11909bcbc0" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f11909bcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909bb020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909bb1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909bb340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909bb4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909bb660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909bb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f11909cae70" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f11909cae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909cf220"/>
        <function-ref name="fired" scoped="" ref="0x7f11909cf3b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909cf540"/>
        <function-ref name="edge" scoped="" ref="0x7f11909cf6d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909cf860"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909cf9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f11909c2bc0" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f11909c2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909c1020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909c11b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909c1340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909c14d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909c1660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909c17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f11909c9c80" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f11909c9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909c80a0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909c8230"/>
        <function-ref name="disable" scoped="" ref="0x7f11909c83c0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909c8550"/>
        <function-ref name="enable" scoped="" ref="0x7f11909c86e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909c8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f11909bfc40" loc="57:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f11909bfc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909be020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909be1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909be340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909be4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909be660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909be7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f11909c6bc0" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f11909c6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909c5020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909c51b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909c5340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909c54d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909c5660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909c57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f11909c4bc0" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f11909c4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909c3020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909c31b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909c3340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909c34d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909c3660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909c37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f11909cfdc0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f11909cfdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909ce180"/>
        <function-ref name="fired" scoped="" ref="0x7f11909ce310"/>
        <function-ref name="disable" scoped="" ref="0x7f11909ce4a0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909ce630"/>
        <function-ref name="enable" scoped="" ref="0x7f11909ce7c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909ce950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f11909c1bc0" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f11909c1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909c0020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909c01b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909c0340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909c04d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909c0660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909c07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f11909b4a30" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f11909b4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909b4db0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909b3020"/>
        <function-ref name="disable" scoped="" ref="0x7f11909b31b0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909b3340"/>
        <function-ref name="enable" scoped="" ref="0x7f11909b34d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909b3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f11909aabc0" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f11909aabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909a9020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909a91b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909a9340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909a94d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909a9660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909a97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f11909b1a30" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f11909b1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909b1db0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909b0020"/>
        <function-ref name="disable" scoped="" ref="0x7f11909b01b0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909b0340"/>
        <function-ref name="enable" scoped="" ref="0x7f11909b04d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f11909afa30" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f11909afa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909afdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909ae020"/>
        <function-ref name="disable" scoped="" ref="0x7f11909ae1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909ae340"/>
        <function-ref name="enable" scoped="" ref="0x7f11909ae4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909ae660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f11909b6a30" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f11909b6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909b6db0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909b5020"/>
        <function-ref name="disable" scoped="" ref="0x7f11909b51b0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909b5340"/>
        <function-ref name="enable" scoped="" ref="0x7f11909b54d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909b5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f11909aca30" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f11909aca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909ab020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909ab1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909ab340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909ab4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909ab660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909ab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f11909b3a30" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f11909b3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909b3db0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909b2020"/>
        <function-ref name="disable" scoped="" ref="0x7f11909b21b0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909b2340"/>
        <function-ref name="enable" scoped="" ref="0x7f11909b24d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909b2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f11909a9bc0" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f11909a9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909a8020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909a81b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909a8340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909a84d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909a8660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909a87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f11909ba9c0" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f11909ba9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909bad40"/>
        <function-ref name="fired" scoped="" ref="0x7f11909b7020"/>
        <function-ref name="disable" scoped="" ref="0x7f11909b71b0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909b7340"/>
        <function-ref name="enable" scoped="" ref="0x7f11909b74d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f11909aea30" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f11909aea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909aedb0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909ad020"/>
        <function-ref name="disable" scoped="" ref="0x7f11909ad1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909ad340"/>
        <function-ref name="enable" scoped="" ref="0x7f11909ad4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909ad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f11909b5a30" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f11909b5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909b5db0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909b4020"/>
        <function-ref name="disable" scoped="" ref="0x7f11909b41b0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909b4340"/>
        <function-ref name="enable" scoped="" ref="0x7f11909b44d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909b4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f11909abbc0" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f11909abbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909aa020"/>
        <function-ref name="fired" scoped="" ref="0x7f11909aa1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f11909aa340"/>
        <function-ref name="edge" scoped="" ref="0x7f11909aa4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f11909aa660"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909aa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f11909b2a30" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f11909b2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909b2db0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909b1020"/>
        <function-ref name="disable" scoped="" ref="0x7f11909b11b0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909b1340"/>
        <function-ref name="enable" scoped="" ref="0x7f11909b14d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909b1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f11909b0a30" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f11909b0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909b0db0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909af020"/>
        <function-ref name="disable" scoped="" ref="0x7f11909af1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909af340"/>
        <function-ref name="enable" scoped="" ref="0x7f11909af4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909af660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f11909b7a30" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f11909b7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909b7db0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909b6020"/>
        <function-ref name="disable" scoped="" ref="0x7f11909b61b0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909b6340"/>
        <function-ref name="enable" scoped="" ref="0x7f11909b64d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f11909ada30" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f11909ada30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11909addb0"/>
        <function-ref name="fired" scoped="" ref="0x7f11909ac020"/>
        <function-ref name="disable" scoped="" ref="0x7f11909ac1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f11909ac340"/>
        <function-ref name="enable" scoped="" ref="0x7f11909ac4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f11909ac660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f11908d5610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f11908d5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11908d5990"/>
        <function-ref name="fired" scoped="" ref="0x7f11908d5b20"/>
        <function-ref name="disable" scoped="" ref="0x7f11908d5cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f11908d5e40"/>
        <function-ref name="enable" scoped="" ref="0x7f11908c8020"/>
        <function-ref name="getValue" scoped="" ref="0x7f11908c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f11908d6a30" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f11908d6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11908d6db0"/>
        <function-ref name="disable" scoped="" ref="0x7f11908d5020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f11908d51b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f11908d5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f11908c6610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f11908c6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11908c6990"/>
        <function-ref name="fired" scoped="" ref="0x7f11908c6b20"/>
        <function-ref name="disable" scoped="" ref="0x7f11908c6cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f11908c6e40"/>
        <function-ref name="enable" scoped="" ref="0x7f11908c5020"/>
        <function-ref name="getValue" scoped="" ref="0x7f11908c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f11908c7a70" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f11908c7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11908c7df0"/>
        <function-ref name="disable" scoped="" ref="0x7f11908c6020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f11908c61b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f11908c6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f119046ce50" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f119046ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119046b410"/>
        <function-ref name="write" scoped="" ref="0x7f119046b5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1190476160" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1190476160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904764e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1190470e50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1190470e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119046f210"/>
        <function-ref name="write" scoped="" ref="0x7f119046f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f119046a880" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f119046a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119046ac00"/>
        <function-ref name="write" scoped="" ref="0x7f119046ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f11904620a0" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f11904620a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190462420"/>
        <function-ref name="write" scoped="" ref="0x7f11904625b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f11904690a0" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f11904690a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190469420"/>
        <function-ref name="write" scoped="" ref="0x7f11904695b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1190456500" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1190456500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190456880"/>
        <function-ref name="write" scoped="" ref="0x7f1190456a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1190458500" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1190458500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190458880"/>
        <function-ref name="write" scoped="" ref="0x7f1190458a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1190475490" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1190475490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190475810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f119045e880" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f119045e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119045ec00"/>
        <function-ref name="write" scoped="" ref="0x7f119045ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f119045a500" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f119045a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119045a880"/>
        <function-ref name="write" scoped="" ref="0x7f119045aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f119046fe50" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f119046fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119046d210"/>
        <function-ref name="write" scoped="" ref="0x7f119046d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f119046de50" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f119046de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119046c210"/>
        <function-ref name="write" scoped="" ref="0x7f119046c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1190464880" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1190464880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190464c00"/>
        <function-ref name="write" scoped="" ref="0x7f1190464d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f11904650a0" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f11904650a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190465420"/>
        <function-ref name="write" scoped="" ref="0x7f11904655b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1190469880" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1190469880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190469c00"/>
        <function-ref name="write" scoped="" ref="0x7f1190469d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1190478a90" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190478a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1190478e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1190477020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f11904771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1190474e00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1190474e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904721c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1190472490" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1190472490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190472910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f119045dc80" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f119045dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119045c0a0"/>
        <function-ref name="write" scoped="" ref="0x7f119045c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1190472be0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1190472be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190471020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f119045ace0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f119045ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904580a0"/>
        <function-ref name="write" scoped="" ref="0x7f1190458230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1190474160" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1190474160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904744e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f119045e0a0" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f119045e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119045e420"/>
        <function-ref name="write" scoped="" ref="0x7f119045e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f119046d670" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f119046d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119046d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119046db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f119046f670" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f119046f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119046f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119046fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1190477ad0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1190477ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190477e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f119045f0a0" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f119045f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119045f420"/>
        <function-ref name="write" scoped="" ref="0x7f119045f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1190462880" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1190462880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190462c00"/>
        <function-ref name="write" scoped="" ref="0x7f1190462d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f119045f880" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f119045f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119045fc00"/>
        <function-ref name="write" scoped="" ref="0x7f119045fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1190457ce0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1190457ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904560a0"/>
        <function-ref name="write" scoped="" ref="0x7f1190456230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1190458ce0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1190458ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904570a0"/>
        <function-ref name="write" scoped="" ref="0x7f1190457230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1190465880" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1190465880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190465c00"/>
        <function-ref name="write" scoped="" ref="0x7f1190465d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f11904610a0" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f11904610a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190461420"/>
        <function-ref name="write" scoped="" ref="0x7f11904615b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f119045bce0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f119045bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119045a0a0"/>
        <function-ref name="write" scoped="" ref="0x7f119045a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1190468880" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1190468880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190468c00"/>
        <function-ref name="write" scoped="" ref="0x7f1190468d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1190456ce0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1190456ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f11904550a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1190455230"/>
        <function-ref name="write" scoped="" ref="0x7f11904553c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1190455550"/>
        <function-ref name="readDone" scoped="" ref="0x7f11904556e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1190477480" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1190477480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190477800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1190470670" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1190470670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904709f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190470b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f119046c670" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f119046c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119046c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119046cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f11904630a0" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f11904630a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190463420"/>
        <function-ref name="write" scoped="" ref="0x7f11904635b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f11904680a0" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f11904680a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190468420"/>
        <function-ref name="write" scoped="" ref="0x7f11904685b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1190463880" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1190463880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190463c00"/>
        <function-ref name="write" scoped="" ref="0x7f1190463d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f119046b870" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f119046b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119046bbf0"/>
        <function-ref name="write" scoped="" ref="0x7f119046bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f11904767b0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f11904767b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190476b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f119046a0a0" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f119046a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119046a420"/>
        <function-ref name="write" scoped="" ref="0x7f119046a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1190479e20" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1190479e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f11904781c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190478350"/>
        <function-ref name="request" scoped="" ref="0x7f11904784e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1190478670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190478800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f11904712f0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f11904712f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190471670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1190470020" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1190470020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f119045b500" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f119045b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119045b880"/>
        <function-ref name="write" scoped="" ref="0x7f119045ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f119045cce0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f119045cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119045b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f119045b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f11904747b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f11904747b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190474b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f119045c500" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f119045c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119045c880"/>
        <function-ref name="write" scoped="" ref="0x7f119045ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1190457500" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1190457500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190457880"/>
        <function-ref name="write" scoped="" ref="0x7f1190457a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f11904640a0" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f11904640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190464420"/>
        <function-ref name="write" scoped="" ref="0x7f11904645b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1190461880" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1190461880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190461c00"/>
        <function-ref name="write" scoped="" ref="0x7f1190461d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1190476e00" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1190476e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904751c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1190475ae0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1190475ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190475e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f11904670a0" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f11904670a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190467420"/>
        <function-ref name="write" scoped="" ref="0x7f11904675b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1190471940" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1190471940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190471cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1190467880" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1190467880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190467c00"/>
        <function-ref name="write" scoped="" ref="0x7f1190467d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f119045d0a0" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f119045d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119045d820"/>
        <function-ref name="write" scoped="" ref="0x7f119045d9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f11904559b0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f11904559b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1190455d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1190454020"/>
        <function-ref name="write" scoped="" ref="0x7f11904541b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1190454340"/>
        <function-ref name="readDone" scoped="" ref="0x7f11904544d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f1190885630" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f1190885630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f11908859b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1190885b40"/>
        <function-ref name="write" scoped="" ref="0x7f1190885cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1190885e60"/>
        <function-ref name="readDone" scoped="" ref="0x7f1190884020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1190887680" loc="40:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190887680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1190887a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1190887b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1190887d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f11908848c0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f11908848c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190884c40"/>
        <function-ref name="write" scoped="" ref="0x7f1190884dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f11908836f0" loc="43:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f11908836f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190883a70"/>
        <function-ref name="write" scoped="" ref="0x7f1190883c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f119088a960" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f119088a960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f119088ace0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f119088ae70"/>
        <function-ref name="request" scoped="" ref="0x7f1190887030"/>
        <function-ref name="granted" scoped="" ref="0x7f11908871c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190887350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f1190882510" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f1190882510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190882890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f119086c680" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f119086c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f119086ca00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f119086cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f119087cbb0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f119087cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f119087b020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f119087b1b0"/>
        <function-ref name="write" scoped="" ref="0x7f119087b340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f119087b4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f119087b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1190880920" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190880920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1190880ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1190880e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f119087d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f1190875080" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1190875080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1190875400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f1190874020" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f1190874020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f11908743a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1190874530"/>
        <function-ref name="isState" scoped="" ref="0x7f11908746c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1190874850"/>
        <function-ref name="requestState" scoped="" ref="0x7f11908749e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1190874b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1190877400" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1190877400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190877780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190877910"/>
        <function-ref name="request" scoped="" ref="0x7f1190877aa0"/>
        <function-ref name="granted" scoped="" ref="0x7f1190877c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190877dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f119087a020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f119087a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119087a3a0"/>
        <function-ref name="write" scoped="" ref="0x7f119087a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f119087adb0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f119087adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190879180"/>
        <function-ref name="write" scoped="" ref="0x7f1190879310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1190874df0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1190874df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f119086d1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f119086d350"/>
        <function-ref name="led1On" scoped="" ref="0x7f119086d4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f119086d670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f119086d800"/>
        <function-ref name="get" scoped="" ref="0x7f119086d990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f119086db20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f119086b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f119086dcb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f119086de40"/>
        <function-ref name="led2On" scoped="" ref="0x7f119086b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f119087d810" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f119087d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f119087db90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f119087dd20"/>
        <function-ref name="request" scoped="" ref="0x7f119087c020"/>
        <function-ref name="granted" scoped="" ref="0x7f119087c1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f119087c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f1190867120" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f1190867120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f11908674a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1190867630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f1190879ba0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f1190879ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190877020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f119080c770" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f119080c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f119080caf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f119080cc80"/>
        <function-ref name="isState" scoped="" ref="0x7f119080ce10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1190808020"/>
        <function-ref name="requestState" scoped="" ref="0x7f11908081b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1190808340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1190807280" loc="66:../../../..//tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1190807280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1190807600"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1190807790"/>
        <function-ref name="isState" scoped="" ref="0x7f1190807920"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1190807ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1190807c40"/>
        <function-ref name="forceState" scoped="" ref="0x7f1190807dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1190803020" loc="66:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1190803020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11908033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1190803b70" loc="67:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1190803b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1190802020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f11908021b0"/>
        <function-ref name="isState" scoped="" ref="0x7f1190802340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f11908024d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1190802660"/>
        <function-ref name="forceState" scoped="" ref="0x7f11908027f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f11904a1020" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f11904a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f11904a13a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f11904a1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f11907e98f0" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f11907e98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f11907e9c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f11907eac40" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f11907eac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f11907e9020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f11907e91b0"/>
        <function-ref name="request" scoped="" ref="0x7f11907e9340"/>
        <function-ref name="granted" scoped="" ref="0x7f11907e94d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f11907e9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f118f4d58f0" loc="82:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f118f4d58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f118f4d5c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f118f4d5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f118f4d32b0" loc="87:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f118f4d32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118f4d3630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118f4d37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f118f4d3a50" loc="89:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f118f4d3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f118f4d3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f118f4d40c0" loc="83:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f118f4d40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f118f4d4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f118f4d7c30" loc="81:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f118f4d7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118f4d5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118f4d51b0"/>
        <function-ref name="request" scoped="" ref="0x7f118f4d5340"/>
        <function-ref name="granted" scoped="" ref="0x7f118f4d54d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118f4d5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f118f4d46d0" loc="85:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f118f4d46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f118f4d4a50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f118f4d4be0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f118f4d4d70"/>
        <function-ref name="write" scoped="" ref="0x7f118f4d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1190785450" loc="74:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1190785450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f11907857d0"/>
        <function-ref name="configure" scoped="" ref="0x7f1190785960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f11907783f0" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f11907783f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1190778770"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1190778900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f1190776510" loc="80:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1190776510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1190776890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1190785c40" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1190785c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1190779020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1190777280" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1190777280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190777600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190777790"/>
        <function-ref name="request" scoped="" ref="0x7f1190777920"/>
        <function-ref name="granted" scoped="" ref="0x7f1190777ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190777c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f11907877f0" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f11907877f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190787b70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190787d00"/>
        <function-ref name="request" scoped="" ref="0x7f1190786020"/>
        <function-ref name="granted" scoped="" ref="0x7f11907861b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190786340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f1190779320" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f1190779320"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f11907796a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f1190779830"/>
        <function-ref name="splitRead" scoped="" ref="0x7f11907799c0"/>
        <function-ref name="write" scoped="" ref="0x7f1190779b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f11907726a0" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f11907726a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1190772a20"/>
        <function-ref name="txDone" scoped="" ref="0x7f1190772bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1190701c40" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1190701c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1190700020"/>
        <function-ref name="configure" scoped="" ref="0x7f11907001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f11906ff700" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f11906ff700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f11906ffaa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f11906ffc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f11906fee00" loc="82:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f11906fee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f11906fc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1190700440" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1190700440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f11907007c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f11906fc490" loc="83:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f11906fc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f11906fc810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f11906fc9a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f11906fcb30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f11906fccc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f11906fce50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f11906fb020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f11906fb1b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f11906fb340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f11906fb4d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f11906fb660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f11906fb7f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f11906fb980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f11906fbb10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f11906fbda0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f11906fa020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f11906fa1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f11906fa340"/>
        <function-ref name="isUart" scoped="" ref="0x7f11906fa4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f11906fa660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f11906fa7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f11906fa980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f11906fab10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f11906faca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f11906fae30"/>
        <function-ref name="getMode" scoped="" ref="0x7f11906f9020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f11906f93b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f11906f9540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f11906f96d0"/>
        <function-ref name="tx" scoped="" ref="0x7f11906f9860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f11906f99f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f11906f9b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f11906f9d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f11906f8020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f11906f81b0"/>
        <function-ref name="rx" scoped="" ref="0x7f11906f8340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f11906f84d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f11906f8660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f11906f87f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f11906f8980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f11906f8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f11906f75a0" loc="85:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f11906f75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f11906f7920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f11906f7ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f11906f7c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f11906f7dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f11906f6020"/>
        <function-ref name="get" scoped="" ref="0x7f11906f61b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f11906f6340"/>
        <function-ref name="led2On" scoped="" ref="0x7f11906f6980"/>
        <function-ref name="set" scoped="" ref="0x7f11906f6660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f11906f64d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f11906f67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f11906fe060" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f11906fe060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f11906fe400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f11906fe590"/>
        <function-ref name="request" scoped="" ref="0x7f11906fe720"/>
        <function-ref name="granted" scoped="" ref="0x7f11906fe8b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f11906fea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1190702e80" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1190702e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190701240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f11907013d0"/>
        <function-ref name="request" scoped="" ref="0x7f1190701560"/>
        <function-ref name="granted" scoped="" ref="0x7f11907016f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190701880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f1190700a50" loc="78:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f1190700a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f1190700dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f11906ff020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f11906ff1b0"/>
        <function-ref name="write" scoped="" ref="0x7f11906ff340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f11906f8de0" loc="84:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f11906f8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f11906f7180"/>
        <function-ref name="txDone" scoped="" ref="0x7f11906f7310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f11906f6c50" loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f11906f6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f11906f5020"/>
        <function-ref name="runTask" scoped="" ref="0x7f11906f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f11906e68a0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f11906e68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11906e6c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f11906e93b0" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f11906e93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f11906e9730"/>
        <function-ref name="txDone" scoped="" ref="0x7f11906e98c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f11906f0860" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f11906f0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f11906f0be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f11906f0d70"/>
        <function-ref name="setUctl" scoped="" ref="0x7f11906ed020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f11906ed1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f11906ed340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f11906ed4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f11906ed660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f11906ed7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f11906ed980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f11906edb10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f11906edca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f11906ede30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f11906ec020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f11906ec2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f11906ec440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f11906ec5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f11906ec760"/>
        <function-ref name="isUart" scoped="" ref="0x7f11906ec8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f11906eca80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f11906ecc10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f11906ecda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f11906eb020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f11906eb1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f11906eb340"/>
        <function-ref name="getMode" scoped="" ref="0x7f11906eb4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f11906eb860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f11906eb9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f11906ebb80"/>
        <function-ref name="tx" scoped="" ref="0x7f11906ebd10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f11906ea020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f11906ea1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f11906ea340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f11906ea4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f11906ea660"/>
        <function-ref name="rx" scoped="" ref="0x7f11906ea7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f11906ea980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f11906eab10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f11906eaca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f11906eae30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f11906e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f11906ac670" loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f11906ac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f11906ac9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f11906acb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f11906acd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f11906ab020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f11906ab1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f11906ab340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f11906ab4d0"/>
        <function-ref name="get" scoped="" ref="0x7f11906ab660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f11906ab7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f11906ab980"/>
        <function-ref name="set" scoped="" ref="0x7f11906abb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f11906abca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f11906abe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f11906aa120"/>
        <function-ref name="clr" scoped="" ref="0x7f11906aa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f11906e0dc0" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f11906e0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f11906df180"/>
        <function-ref name="txDone" scoped="" ref="0x7f11906df310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f11906aa670" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f11906aa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f11906aa9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f11906aab80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f11906aad10"/>
        <function-ref name="toggle" scoped="" ref="0x7f11906a9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f11906a91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f11906a9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f11906a94d0"/>
        <function-ref name="get" scoped="" ref="0x7f11906a9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f11906a97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f11906a9980"/>
        <function-ref name="set" scoped="" ref="0x7f11906a9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f11906a9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f11906a9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f11906a8120"/>
        <function-ref name="clr" scoped="" ref="0x7f11906a82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f11906a8670" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f11906a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f11906a89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f11906a8b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f11906a8d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f11906a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f11906a71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f11906a7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f11906a74d0"/>
        <function-ref name="get" scoped="" ref="0x7f11906a7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f11906a77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f11906a7980"/>
        <function-ref name="set" scoped="" ref="0x7f11906a7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f11906a7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f11906a7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f11906a6120"/>
        <function-ref name="clr" scoped="" ref="0x7f11906a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f11906e4020" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f11906e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f11906e43a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f11906e4530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f11906e46c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f11906e4850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f11906e49e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f11906e4b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f11906e4d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f11906e3020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f11906e31b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f11906e3340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f11906e34d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f11906e3660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f11906e37f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f11906e3a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f11906e3c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f11906e3da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f11906e2020"/>
        <function-ref name="isUart" scoped="" ref="0x7f11906e21b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f11906e2340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f11906e24d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f11906e2660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f11906e27f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f11906e2980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f11906e2b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f11906e2ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f11906e1220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f11906e13b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f11906e1540"/>
        <function-ref name="tx" scoped="" ref="0x7f11906e16d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f11906e1860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f11906e19f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f11906e1b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f11906e1d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f11906e0020"/>
        <function-ref name="rx" scoped="" ref="0x7f11906e01b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f11906e0340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f11906e04d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f11906e0660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f11906e07f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f11906e0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f11906b55b0" loc="79:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f11906b55b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f11906b5930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f11906b5ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f11906b5c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f11906b5de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f11906dd020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f11906dd1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f11906dd340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f11906dd4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f11906dd660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f11906dd7f0"/>
        <function-ref name="getData" scoped="" ref="0x7f11906dd980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f11906ddb10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f11906ddca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f11906dc020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f11906dc1b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f11906dc340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f11906dc4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f11906dc660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f11906dc7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f11906dc980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f11906dcb10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f11906dcca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f11906dce30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f11906b4020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f11906b41b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f11906b4540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f11906b46d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f11906b4860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f11906b49f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f11906b4b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f11906b4d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f11906b3020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f11906b31b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f11906b3340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f11906b34d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f11906b3660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f11906b37f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f11906b3980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f11906b3b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f11906b3ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f11906b3e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f11906b2020"/>
        <function-ref name="setData" scoped="" ref="0x7f11906b21b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f11906b2340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f11906b24d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f11906b2660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f11906b27f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f11906b2980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f11906b2b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f11906b1420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f11906b15b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f11906b1740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f11906b18d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f11906b1a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f11906b1bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f11906b1d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f11906b0020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f11906b01b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f11906b0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f11906ae670" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f11906ae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f11906ae9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f11906aeb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f11906aed10"/>
        <function-ref name="toggle" scoped="" ref="0x7f11906ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f11906ad1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f11906ad340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f11906ad4d0"/>
        <function-ref name="get" scoped="" ref="0x7f11906ad660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f11906ad7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f11906ad980"/>
        <function-ref name="set" scoped="" ref="0x7f11906adb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f11906adca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f11906ade30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f11906ac120"/>
        <function-ref name="clr" scoped="" ref="0x7f11906ac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f11906df750" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f11906df750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11906dfad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f11906b0700" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f11906b0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f11906b0a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f11906b0c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f11906b0da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f11906af020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f11906af1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f11906af340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f11906af4d0"/>
        <function-ref name="get" scoped="" ref="0x7f11906af660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f11906af7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f11906af980"/>
        <function-ref name="set" scoped="" ref="0x7f11906afb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f11906afca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f11906afe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f11906ae120"/>
        <function-ref name="clr" scoped="" ref="0x7f11906ae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f118f4ca2c0" loc="42:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f118f4ca2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f118f4ca640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f118f4ca7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f118f4c4440" loc="46:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f118f4c4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f118f4c47c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f118f4bd760" loc="51:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f118f4bd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f118f4bdae0"/>
        <function-ref name="configure" scoped="" ref="0x7f118f4bdc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f118f4c4a50" loc="48:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f118f4c4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f118f4c4dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f118f4c3020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f118f4c31b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f118f4c3340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f118f4c34d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f118f4c3660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f118f4c37f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f118f4c3980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f118f4c3b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f118f4c3ca0"/>
        <function-ref name="getData" scoped="" ref="0x7f118f4c3e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f118f4c2020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f118f4c21b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f118f4c2440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f118f4c25d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f118f4c2760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f118f4c28f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f118f4c2a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f118f4c2c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f118f4c2da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f118f4c1020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f118f4c11b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f118f4c1340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f118f4c14d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f118f4c1660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f118f4c19f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f118f4c1b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f118f4c1d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f118f4c0020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f118f4c01b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f118f4c0340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f118f4c04d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f118f4c0660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f118f4c07f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f118f4c0980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f118f4c0b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f118f4c0ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f118f4c0e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f118f4bf020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f118f4bf1b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f118f4bf340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f118f4bf4d0"/>
        <function-ref name="setData" scoped="" ref="0x7f118f4bf660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f118f4bf7f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f118f4bf980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f118f4bfb10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f118f4bfca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f118f4bfe30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f118f4be020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f118f4be5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f118f4be740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f118f4be8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f118f4bea60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f118f4bebf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f118f4bed80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f118f4bd020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f118f4bd1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f118f4bd340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f118f4bd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f118f4c5c10" loc="45:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f118f4c5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f118f4c4020"/>
        <function-ref name="txDone" scoped="" ref="0x7f118f4c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f118f4cb640" loc="41:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f118f4cb640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118f4cb9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118f4cbb50"/>
        <function-ref name="request" scoped="" ref="0x7f118f4cbce0"/>
        <function-ref name="granted" scoped="" ref="0x7f118f4cbe70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118f4ca030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f118f4c92b0" loc="44:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f118f4c92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f118f4c9630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f118f4c97c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f118f4c9950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f118f4c9ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f118f4c9c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f118f4c9e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f118f4c8020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f118f4c81b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f118f4c8340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f118f4c84d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f118f4c8660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f118f4c87f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f118f4c8980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f118f4c8c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f118f4c8da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f118f4c7020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f118f4c71b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f118f4c7340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f118f4c74d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f118f4c7660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f118f4c77f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f118f4c7980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f118f4c7b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f118f4c7ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f118f4c7e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f118f4c6220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f118f4c63b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f118f4c6540"/>
        <function-ref name="tx" scoped="" ref="0x7f118f4c66d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f118f4c6860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f118f4c69f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f118f4c6b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f118f4c6d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f118f4c5020"/>
        <function-ref name="rx" scoped="" ref="0x7f118f4c51b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f118f4c5340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f118f4c54d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f118f4c5660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f118f4c57f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f118f4c5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f118f4caa60" loc="43:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f118f4caa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f118f4cade0"/>
        <function-ref name="userId" scoped="" ref="0x7f118f4c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f11906048a0" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f11906048a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1190604c20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1190604db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1190601020" loc="45:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1190601020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f11906013a0"/>
        <function-ref name="configure" scoped="" ref="0x7f1190601530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1190609a80" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1190609a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1190609e00"/>
        <function-ref name="txDone" scoped="" ref="0x7f1190606020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f11906055c0" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f11906055c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190605940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190605ad0"/>
        <function-ref name="request" scoped="" ref="0x7f1190605c60"/>
        <function-ref name="granted" scoped="" ref="0x7f1190605df0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190604020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f11906069a0" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f11906069a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1190606d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1190603130" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1190603130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f11906034b0"/>
        <function-ref name="userId" scoped="" ref="0x7f1190603640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f11905ed4b0" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f11905ed4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f11905ed830"/>
        <function-ref name="userId" scoped="" ref="0x7f11905ed9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f11905ff5c0" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f11905ff5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f11905ff960"/>
        <function-ref name="txDone" scoped="" ref="0x7f11905ffaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f11905eee70" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f11905eee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11905ed220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f11905ee020" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f11905ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f11905ee3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f11905ee690" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f11905ee690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f11905eea10"/>
        <function-ref name="txDone" scoped="" ref="0x7f11905eeba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1190573bf0" loc="92:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1190573bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1190572020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f11905721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1190571930" loc="96:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1190571930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1190571cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f1190571e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1190572400" loc="93:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1190572400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190572780"/>
        <function-ref name="requested" scoped="" ref="0x7f1190572910"/>
        <function-ref name="granted" scoped="" ref="0x7f1190572aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190572c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1190572dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1190575e60" loc="91:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1190575e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190573230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f11905733c0"/>
        <function-ref name="request" scoped="" ref="0x7f1190573550"/>
        <function-ref name="granted" scoped="" ref="0x7f11905736e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190573870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1190571060" loc="94:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1190571060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f11905713e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1190571570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f118f44e140" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f118f44e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f118f44e4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f118f44e750" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f118f44e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f118f44ead0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f118f44ec60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f118f44edf0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f118f44d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f118f44b850" loc="55:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f118f44b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f118f44bbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f118f44bd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f118f449590" loc="60:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f118f449590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f118f449930"/>
        <function-ref name="configure" scoped="" ref="0x7f118f449ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f118f449d50" loc="61:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f118f449d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f118f447100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f118f447290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f118f447420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f118f4475b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f118f44a020" loc="56:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f118f44a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118f44a3a0"/>
        <function-ref name="requested" scoped="" ref="0x7f118f44a530"/>
        <function-ref name="granted" scoped="" ref="0x7f118f44a6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118f44a850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f118f44a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f118f447800" loc="62:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f118f447800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f118f447b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f118f447d10"/>
        <function-ref name="led1On" scoped="" ref="0x7f118f446020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f118f4461b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f118f446340"/>
        <function-ref name="get" scoped="" ref="0x7f118f4464d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f118f446660"/>
        <function-ref name="led0On" scoped="" ref="0x7f118f446ca0"/>
        <function-ref name="set" scoped="" ref="0x7f118f446980"/>
        <function-ref name="led2On" scoped="" ref="0x7f118f4467f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f118f446b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f118f44c970" loc="54:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f118f44c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118f44cd10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118f44b020"/>
        <function-ref name="request" scoped="" ref="0x7f118f44b1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f118f44b340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118f44b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f118f44ac30" loc="57:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f118f44ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f118f449020"/>
        <function-ref name="userId" scoped="" ref="0x7f118f4491b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f118f445020" loc="75:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f118f445020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f118f4453a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f118f445530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f119056a880" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f119056a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f119056ac00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f119056ad90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1190567020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f11905671b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1190567340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f11905674d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1190567660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f11905677f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1190567980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1190567b10"/>
        <function-ref name="getData" scoped="" ref="0x7f1190567ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1190567e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1190566020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f11905662b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1190566440"/>
        <function-ref name="getIV" scoped="" ref="0x7f11905665d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1190566760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f11905668f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1190566a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1190566c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1190566da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1190565020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f11905651b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1190565340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f11905654d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1190565860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f11905659f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1190565b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1190565d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1190564020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f11905641b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1190564340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f11905644d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1190564660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f11905647f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1190564980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1190564b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1190564ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1190564e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1190563020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f11905631b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1190563340"/>
        <function-ref name="setData" scoped="" ref="0x7f11905634d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1190563660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f11905637f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1190563980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1190563b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1190563ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1190563e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1190562420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f11905625b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1190562740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f11905628d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1190562a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1190562bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1190562d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1190561020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f11905611b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1190561340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f1190557250" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f1190557250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f11905575d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1190557760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f11905578f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1190557a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1190557c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1190557da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1190556020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f11905561b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1190556340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f11905564d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1190556660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f11905567f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1190556980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1190556c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1190556da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1190555020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f11905551b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1190555340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f11905554d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1190555660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f11905557f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1190555980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1190555b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1190555ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1190555e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1190554220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f11905543b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1190554540"/>
        <function-ref name="tx" scoped="" ref="0x7f11905546d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1190554860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f11905549f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1190554b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1190554d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1190553020"/>
        <function-ref name="rx" scoped="" ref="0x7f11905531b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1190553340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f11905534d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1190553660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f11905537f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1190553980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1190551cb0" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1190551cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f11905500a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190550230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f11905503c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190550550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f11905506e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1190550870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190550a00"/>
        <function-ref name="get" scoped="" ref="0x7f1190550b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190550d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f119054f020"/>
        <function-ref name="set" scoped="" ref="0x7f119054f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f119054f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f119054f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f119054f760"/>
        <function-ref name="clr" scoped="" ref="0x7f119054f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f119055e430" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f119055e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f119055e7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f119055e940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f119055ead0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f119055ec60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f119055edf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f119055d020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f119055d1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f119055d340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f119055d4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f119055d660"/>
        <function-ref name="getData" scoped="" ref="0x7f119055d7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f119055d980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f119055db10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f119055dda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f119055c020"/>
        <function-ref name="getIV" scoped="" ref="0x7f119055c1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f119055c340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f119055c4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f119055c660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f119055c7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f119055c980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f119055cb10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f119055cca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f119055ce30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f119055b020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f119055b3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f119055b540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f119055b6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f119055b860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f119055b9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f119055bb80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f119055bd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f119055a020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f119055a1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f119055a340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f119055a4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f119055a660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f119055a7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f119055a980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f119055ab10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f119055aca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f119055ae30"/>
        <function-ref name="setData" scoped="" ref="0x7f1190559020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f11905591b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1190559340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f11905594d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1190559660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f11905597f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1190559980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1190558020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f11905581b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1190558340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f11905584d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1190558660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f11905587f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1190558980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1190558b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1190558ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1190558e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1190553d40" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1190553d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f11905520e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190552270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1190552400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190552590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190552720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f11905528b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190552a40"/>
        <function-ref name="get" scoped="" ref="0x7f1190552bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1190552d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1190551020"/>
        <function-ref name="set" scoped="" ref="0x7f11905511b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1190551340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f11905514d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1190551760"/>
        <function-ref name="clr" scoped="" ref="0x7f11905518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f119043cc60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f119043cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119043b210"/>
        <function-ref name="write" scoped="" ref="0x7f119043b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1190447da0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1190447da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190445180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f119043fb50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f119043fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119043e020"/>
        <function-ref name="write" scoped="" ref="0x7f119043e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1190439670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1190439670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904399f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190439b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1190432e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1190432e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190431210"/>
        <function-ref name="write" scoped="" ref="0x7f11904313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1190439e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1190439e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190438210"/>
        <function-ref name="write" scoped="" ref="0x7f11904383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f11904262f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f11904262f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190426670"/>
        <function-ref name="write" scoped="" ref="0x7f1190426800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f11904282f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f11904282f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190428670"/>
        <function-ref name="write" scoped="" ref="0x7f1190428800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1190444120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1190444120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904444a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f119042e670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f119042e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119042e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119042eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f11904292f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f11904292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190429670"/>
        <function-ref name="write" scoped="" ref="0x7f1190429800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f119043ec60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f119043ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119043d020"/>
        <function-ref name="write" scoped="" ref="0x7f119043d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f119043dc60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f119043dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119043c020"/>
        <function-ref name="write" scoped="" ref="0x7f119043c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1190434670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1190434670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904349f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190434b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1190436e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1190436e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190435210"/>
        <function-ref name="write" scoped="" ref="0x7f11904353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1190438670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1190438670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904389f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190438b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1190448760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190448760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1190448ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1190448c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1190448e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1190443aa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1190443aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190443e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1190442120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1190442120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904425a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f119042da70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f119042da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119042ddf0"/>
        <function-ref name="write" scoped="" ref="0x7f119042b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1190442870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1190442870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190442bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1190429ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1190429ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190429e50"/>
        <function-ref name="write" scoped="" ref="0x7f1190428020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1190444dc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1190444dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190443180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f119042fe50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f119042fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119042e210"/>
        <function-ref name="write" scoped="" ref="0x7f119042e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f119043d480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f119043d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119043d800"/>
        <function-ref name="write" scoped="" ref="0x7f119043d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f119043e480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f119043e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119043e800"/>
        <function-ref name="write" scoped="" ref="0x7f119043e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1190447750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1190447750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190447ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1190430e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1190430e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119042f210"/>
        <function-ref name="write" scoped="" ref="0x7f119042f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1190431670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1190431670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904319f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190431b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f119042f670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f119042f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119042f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119042fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1190427ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1190427ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190427e50"/>
        <function-ref name="write" scoped="" ref="0x7f1190426020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1190428ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1190428ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190428e50"/>
        <function-ref name="write" scoped="" ref="0x7f1190427020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1190435670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1190435670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904359f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190435b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1190431e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1190431e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190430210"/>
        <function-ref name="write" scoped="" ref="0x7f11904303a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f119042aad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f119042aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119042ae50"/>
        <function-ref name="write" scoped="" ref="0x7f1190429020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1190437670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1190437670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904379f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190437b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1190426ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1190426ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1190426e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1190424020"/>
        <function-ref name="write" scoped="" ref="0x7f11904241b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1190424340"/>
        <function-ref name="readDone" scoped="" ref="0x7f11904244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1190447100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1190447100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190447480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f119043f370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f119043f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119043f6f0"/>
        <function-ref name="write" scoped="" ref="0x7f119043f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f119043c480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f119043c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119043c800"/>
        <function-ref name="write" scoped="" ref="0x7f119043c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1190434e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1190434e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190432210"/>
        <function-ref name="write" scoped="" ref="0x7f11904323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1190438e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1190438e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190437210"/>
        <function-ref name="write" scoped="" ref="0x7f11904373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1190432670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1190432670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904329f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190432b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f119043b670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f119043b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119043b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119043bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1190445450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1190445450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904457d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f119043be50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f119043be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190439210"/>
        <function-ref name="write" scoped="" ref="0x7f11904393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1190449a80" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1190449a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190449e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190448020"/>
        <function-ref name="request" scoped="" ref="0x7f11904481b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1190448340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f11904484d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1190441020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1190441020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1190441cc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1190441cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119043f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f119042a2f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f119042a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119042a670"/>
        <function-ref name="write" scoped="" ref="0x7f119042a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f119042bad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f119042bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119042be50"/>
        <function-ref name="write" scoped="" ref="0x7f119042a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1190443450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1190443450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904437d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f119042b2f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f119042b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119042b670"/>
        <function-ref name="write" scoped="" ref="0x7f119042b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f11904272f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f11904272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190427670"/>
        <function-ref name="write" scoped="" ref="0x7f1190427800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1190435e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1190435e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190434210"/>
        <function-ref name="write" scoped="" ref="0x7f11904343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1190430670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1190430670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904309f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190430b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1190445aa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1190445aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190445e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1190444770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1190444770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190444af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1190437e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1190437e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190436210"/>
        <function-ref name="write" scoped="" ref="0x7f11904363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1190441670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1190441670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904419f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1190436670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1190436670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904369f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190436b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f119042ee50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f119042ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119042d610"/>
        <function-ref name="write" scoped="" ref="0x7f119042d7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f11904247a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f11904247a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1190424b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1190424cb0"/>
        <function-ref name="write" scoped="" ref="0x7f1190424e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1190423020"/>
        <function-ref name="readDone" scoped="" ref="0x7f11904231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f119040fc60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f119040fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119040e210"/>
        <function-ref name="write" scoped="" ref="0x7f119040e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f119041ada0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f119041ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190419180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1190413b50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1190413b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190412020"/>
        <function-ref name="write" scoped="" ref="0x7f11904121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f119040d670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f119040d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119040d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119040db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1190406e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1190406e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190405210"/>
        <function-ref name="write" scoped="" ref="0x7f11904053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f119040de50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f119040de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119040c210"/>
        <function-ref name="write" scoped="" ref="0x7f119040c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f11903f92f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f11903f92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903f9670"/>
        <function-ref name="write" scoped="" ref="0x7f11903f9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f11903fb2f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f11903fb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903fb670"/>
        <function-ref name="write" scoped="" ref="0x7f11903fb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1190418120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1190418120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904184a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1190401670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1190401670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904019f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190401b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f11903fd2f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f11903fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903fd670"/>
        <function-ref name="write" scoped="" ref="0x7f11903fd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1190412c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1190412c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190410020"/>
        <function-ref name="write" scoped="" ref="0x7f11904101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1190410c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1190410c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119040f020"/>
        <function-ref name="write" scoped="" ref="0x7f119040f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1190407670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1190407670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904079f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190407b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1190409e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1190409e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190408210"/>
        <function-ref name="write" scoped="" ref="0x7f11904083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f119040c670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f119040c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119040c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119040cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f119041b760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f119041b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f119041bae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f119041bc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f119041be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1190416aa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1190416aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190416e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1190415120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1190415120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904155a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1190400a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1190400a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190400df0"/>
        <function-ref name="write" scoped="" ref="0x7f11903ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1190415870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1190415870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190415bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f11903fdad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f11903fdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903fde50"/>
        <function-ref name="write" scoped="" ref="0x7f11903fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1190418dc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1190418dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190416180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1190402e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1190402e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190401210"/>
        <function-ref name="write" scoped="" ref="0x7f11904013a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1190410480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1190410480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190410800"/>
        <function-ref name="write" scoped="" ref="0x7f1190410990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1190412480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1190412480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190412800"/>
        <function-ref name="write" scoped="" ref="0x7f1190412990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f119041a750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f119041a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119041aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1190404e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1190404e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190402210"/>
        <function-ref name="write" scoped="" ref="0x7f11904023a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1190405670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1190405670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904059f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190405b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1190402670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1190402670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904029f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190402b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f11903faad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f11903faad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903fae50"/>
        <function-ref name="write" scoped="" ref="0x7f11903f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f11903fbad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f11903fbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903fbe50"/>
        <function-ref name="write" scoped="" ref="0x7f11903fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1190408670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1190408670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904089f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190408b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1190405e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1190405e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190404210"/>
        <function-ref name="write" scoped="" ref="0x7f11904043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f11903fead0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f11903fead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903fee50"/>
        <function-ref name="write" scoped="" ref="0x7f11903fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f119040b670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f119040b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119040b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119040bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f11903f9ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f11903f9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f11903f9e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f11903f8020"/>
        <function-ref name="write" scoped="" ref="0x7f11903f81b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f11903f8340"/>
        <function-ref name="readDone" scoped="" ref="0x7f11903f84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f119041a100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f119041a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119041a480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1190413370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1190413370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904136f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190413880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f119040f480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f119040f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119040f800"/>
        <function-ref name="write" scoped="" ref="0x7f119040f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1190407e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1190407e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190406210"/>
        <function-ref name="write" scoped="" ref="0x7f11904063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f119040ce50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f119040ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119040b210"/>
        <function-ref name="write" scoped="" ref="0x7f119040b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1190406670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1190406670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904069f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190406b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f119040e670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f119040e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119040e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119040eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1190419450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1190419450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904197d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f119040ee50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f119040ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119040d210"/>
        <function-ref name="write" scoped="" ref="0x7f119040d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f119041c9e0" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f119041c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f119041cd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f119041b020"/>
        <function-ref name="request" scoped="" ref="0x7f119041b1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f119041b340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f119041b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1190414020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1190414020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1190414cc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1190414cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904130a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f11903fe2f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f11903fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903fe670"/>
        <function-ref name="write" scoped="" ref="0x7f11903fe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f11903ffad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f11903ffad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903ffe50"/>
        <function-ref name="write" scoped="" ref="0x7f11903fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1190416450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1190416450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904167d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f11903ff2f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f11903ff2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903ff670"/>
        <function-ref name="write" scoped="" ref="0x7f11903ff800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f11903fa2f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f11903fa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903fa670"/>
        <function-ref name="write" scoped="" ref="0x7f11903fa800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1190408e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1190408e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190407210"/>
        <function-ref name="write" scoped="" ref="0x7f11904073a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1190404670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1190404670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904049f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190404b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1190419aa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1190419aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190419e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1190418770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1190418770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190418af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f119040be50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f119040be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190409210"/>
        <function-ref name="write" scoped="" ref="0x7f11904093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1190414670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1190414670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11904149f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1190409670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1190409670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11904099f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190409b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1190401e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1190401e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190400610"/>
        <function-ref name="write" scoped="" ref="0x7f11904007a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f11903f87a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f11903f87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f11903f8b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f11903f8cb0"/>
        <function-ref name="write" scoped="" ref="0x7f11903f8e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f11903f7020"/>
        <function-ref name="readDone" scoped="" ref="0x7f11903f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f11903f0b30" loc="54:../../../..//tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f11903f0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f11903ed020"/>
        <function-ref name="changed" scoped="" ref="0x7f11903ed1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f11903ed340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f11903ed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f11903efd30" loc="13:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f11903efd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f11903d80e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f11903d4310" loc="5:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f11903d4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f11903d4690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f11903d1880" loc="8:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f11903d1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903d1c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f11903c6020" loc="8:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f11903c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903c63a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f11903bdbd0" loc="14:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f11903bdbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903c0020"/>
        <function-ref name="write" scoped="" ref="0x7f11903c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f11903c0530" loc="15:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f11903c0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f11903c08b0"/>
        <function-ref name="stop" scoped="" ref="0x7f11903c0a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f11903c1140" loc="11:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f11903c1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903c14c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f11903c5c50" loc="8:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f11903c5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903ac020"/>
        <function-ref name="write" scoped="" ref="0x7f11903ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f11903ac540" loc="11:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f11903ac540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f11903ac8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f11903aca50"/>
        <function-ref name="toggle" scoped="" ref="0x7f11903acbe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f11903acd70"/>
        <function-ref name="get" scoped="" ref="0x7f11903ab020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f11903ab1b0"/>
        <function-ref name="set" scoped="" ref="0x7f11903ab340"/>
        <function-ref name="clr" scoped="" ref="0x7f11903ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f11903a3950" loc="15:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f11903a3950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911dfdf0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f11911de200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f11903a6780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f11903a8150" loc="11:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f11903a8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903a84d0"/>
        <function-ref name="write" scoped="" ref="0x7f11903a8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f11903a89f0" loc="14:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f11903a89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f11903a8d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f11903a7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f11903a71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f11903a7340"/>
        <function-ref name="get" scoped="" ref="0x7f11903a74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f11903a7660"/>
        <function-ref name="set" scoped="" ref="0x7f11903a77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f11903a7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f11903aaca0" loc="41:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f11903aaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911dfdf0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f11911de200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1190383ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f1190380a90" loc="54:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1190380a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911dfdf0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f11911de200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f11903718d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1190370020" loc="55:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1190370020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911dfdf0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f11911de200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1190370e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119036f800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119036f340"/>
        <function-ref name="overflow" scoped="" ref="0x7f119036fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f119036a530" loc="46:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f119036a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911dfdf0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f11911de200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f11903693d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1190369d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1190369890"/>
        <function-ref name="overflow" scoped="" ref="0x7f1190368260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1190363020" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1190363020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11903633a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1190363530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f11903636c0"/>
        <function-ref name="get" scoped="" ref="0x7f1190363850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f11903639e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1190363b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1190363d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1190362020"/>
        <function-ref name="overflow" scoped="" ref="0x7f11903621b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1190362340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f11903624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1190367e50" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1190367e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911dfdf0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f11911de200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1190365ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1190364670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f11903641b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1190364b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f11903ad590" loc="3:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f11903ad590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f11903ad910"/>
        <function-ref name="isInput" scoped="" ref="0x7f11903adaa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f11903adc30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f11903addc0"/>
        <function-ref name="get" scoped="" ref="0x7f119035e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f119035e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f119035e340"/>
        <function-ref name="clr" scoped="" ref="0x7f119035e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f119035cc50" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f119035cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f119035b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f119035b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f119035b340"/>
        <function-ref name="toggle" scoped="" ref="0x7f119035b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f119035b660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f119035b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f119035b980"/>
        <function-ref name="get" scoped="" ref="0x7f119035bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f119035bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f119035be30"/>
        <function-ref name="set" scoped="" ref="0x7f119035a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f119035a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f119035a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f119035a5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f119035a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f119035d9e0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f119035d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f119035dd60"/>
        <function-ref name="isInput" scoped="" ref="0x7f119035c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f119035c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f119035c340"/>
        <function-ref name="get" scoped="" ref="0x7f119035c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f119035c660"/>
        <function-ref name="set" scoped="" ref="0x7f119035c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f119035c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f119035fa20" loc="14:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f119035fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f119035fda0"/>
        <function-ref name="stop" scoped="" ref="0x7f1190353020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1190344cb0" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1190344cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f11903430a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1190343230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f11903433c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1190343550"/>
        <function-ref name="setCca" scoped="" ref="0x7f11903436e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1190343870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f1190340990" loc="47:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1190340990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1190340d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f1190344020" loc="45:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1190344020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f11903443a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1190344530"/>
        <function-ref name="modify" scoped="" ref="0x7f11903446c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1190344850"/>
        <function-ref name="resend" scoped="" ref="0x7f11903449e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f11903476c0" loc="44:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f11903476c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1190347a40"/>
        <function-ref name="stop" scoped="" ref="0x7f1190347bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f1190342150" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f1190342150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f11903424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1190337970" loc="51:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1190337970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1190337cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1190337e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1190336030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f11903361c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f1190336350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f11903364e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f119032c950" loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f119032c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f119032a020"/>
        <function-ref name="clear" scoped="" ref="0x7f119032a750"/>
        <function-ref name="isValid" scoped="" ref="0x7f119032b780"/>
        <function-ref name="set" scoped="" ref="0x7f119032ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f1190315020" loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1190315020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903153a0"/>
        <function-ref name="write" scoped="" ref="0x7f1190315530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f1190315890" loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1190315890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190315c10"/>
        <function-ref name="write" scoped="" ref="0x7f1190315da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f1190336900" loc="52:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1190336900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1190336c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f1190318530" loc="72:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1190318530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11903188b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f1190327880" loc="60:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f1190327880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1190327c00"/>
        <function-ref name="disable" scoped="" ref="0x7f1190327d90"/>
        <function-ref name="captured" scoped="" ref="0x7f1190326020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f11903261b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f1190334ae0" loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f1190334ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f119032f390"/>
        <function-ref name="fired" scoped="" ref="0x7f1190330360"/>
        <function-ref name="startAt" scoped="" ref="0x7f1190330ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1190330820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f119032f850"/>
        <function-ref name="start" scoped="" ref="0x7f1190333970"/>
        <function-ref name="stop" scoped="" ref="0x7f1190333e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f119032fd00" loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f119032fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f119032d0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f119032d230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f119032d3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f119032d550"/>
        <function-ref name="getPower" scoped="" ref="0x7f119032d6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f119032d870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f119031a550" loc="68:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f119031a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119031a8d0"/>
        <function-ref name="write" scoped="" ref="0x7f119031aa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f119031ae00" loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f119031ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903191c0"/>
        <function-ref name="write" scoped="" ref="0x7f1190319350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f119030ed40" loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f119030ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f11903120e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1190312270"/>
        <function-ref name="sfd" scoped="" ref="0x7f1190312400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1190338bc0" loc="50:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1190338bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1190337020"/>
        <function-ref name="cancel" scoped="" ref="0x7f11903371b0"/>
        <function-ref name="modify" scoped="" ref="0x7f1190337340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f11903374d0"/>
        <function-ref name="resend" scoped="" ref="0x7f1190337660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f119031dd10" loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f119031dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f119031b0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f119031b270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f119031b400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f1190318c60" loc="73:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1190318c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190317020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1190320820" loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1190320820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190320ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190320d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f119031f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f119031f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f119031f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f119031f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f119031f660"/>
        <function-ref name="clr" scoped="" ref="0x7f119031f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1190339c60" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1190339c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1190338020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f119032dbb0" loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f119032dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f119032c020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f119032c1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f119032c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f1190321be0" loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1190321be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1190327020"/>
        <function-ref name="isSet" scoped="" ref="0x7f11903271b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1190327340"/>
        <function-ref name="set" scoped="" ref="0x7f11903274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f11903173e0" loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f11903173e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190317960"/>
        <function-ref name="write" scoped="" ref="0x7f1190317af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f119031d020" loc="65:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f119031d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f119031d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f119031d530"/>
        <function-ref name="request" scoped="" ref="0x7f119031d6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f119031d850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f119031d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f1190326500" loc="61:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f1190326500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190326980"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190326b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190326ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190326e30"/>
        <function-ref name="get" scoped="" ref="0x7f1190320020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f11903201b0"/>
        <function-ref name="set" scoped="" ref="0x7f1190320340"/>
        <function-ref name="clr" scoped="" ref="0x7f11903204d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f1190314130" loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1190314130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11903144b0"/>
        <function-ref name="write" scoped="" ref="0x7f1190314640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f11903149c0" loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f11903149c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190314d40"/>
        <function-ref name="write" scoped="" ref="0x7f1190313020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f11903196d0" loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f11903196d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190319a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f119031fb40" loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f119031fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f119031e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f119031e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f119031e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f119031e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f119031e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f119031e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f119031e980"/>
        <function-ref name="clr" scoped="" ref="0x7f119031eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f11903126c0" loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f11903126c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1190312a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1190312bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1190312d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1190311020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f11903111b0"/>
        <function-ref name="get" scoped="" ref="0x7f1190311340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f11903114d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1190311b10"/>
        <function-ref name="set" scoped="" ref="0x7f1190311660"/>
        <function-ref name="led0On" scoped="" ref="0x7f11903117f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1190311980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f11903165e0" loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f11903165e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190316960"/>
        <function-ref name="write" scoped="" ref="0x7f1190316af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1190338320" loc="49:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1190338320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f11903386a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1190338830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f119031b780" loc="67:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f119031b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f119031bb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f119031bc90"/>
        <function-ref name="write" scoped="" ref="0x7f119031be20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f119031a020"/>
        <function-ref name="readDone" scoped="" ref="0x7f119031a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f1190319de0" loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1190319de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190318180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f1190317e80" loc="76:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1190317e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190316220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f11903340f0" loc="53:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f11903340f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1190334470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1190274c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1190274c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190273210"/>
        <function-ref name="write" scoped="" ref="0x7f11902733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f119027e020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f119027e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119027e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1190278c70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1190278c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190277020"/>
        <function-ref name="write" scoped="" ref="0x7f11902771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1190272670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1190272670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11902729f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190272b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f119026be50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f119026be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119026a210"/>
        <function-ref name="write" scoped="" ref="0x7f119026a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1190272e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1190272e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190271210"/>
        <function-ref name="write" scoped="" ref="0x7f11902713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f119025e2f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f119025e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119025e670"/>
        <function-ref name="write" scoped="" ref="0x7f119025e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f11902602f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f11902602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190260670"/>
        <function-ref name="write" scoped="" ref="0x7f1190260800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f119027d370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f119027d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119027d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1190266670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1190266670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11902669f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190266b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f11902622f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f11902622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190262670"/>
        <function-ref name="write" scoped="" ref="0x7f1190262800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1190277c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1190277c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190275020"/>
        <function-ref name="write" scoped="" ref="0x7f11902751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1190275c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1190275c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190274020"/>
        <function-ref name="write" scoped="" ref="0x7f11902741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f119026c670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f119026c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119026c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119026cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f119026ee50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f119026ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119026d210"/>
        <function-ref name="write" scoped="" ref="0x7f119026d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1190271670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1190271670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11902719f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190271b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f11902808f0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f11902808f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1190280c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1190280e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f119027f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f119027bd00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f119027bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119027a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f119027a370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f119027a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119027a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1190265a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1190265a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190265df0"/>
        <function-ref name="write" scoped="" ref="0x7f1190264020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f119027aac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f119027aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119027ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1190262ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1190262ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190262e50"/>
        <function-ref name="write" scoped="" ref="0x7f1190260020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f119027b060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f119027b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119027b3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1190267e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1190267e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190266210"/>
        <function-ref name="write" scoped="" ref="0x7f11902663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1190275480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1190275480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190275800"/>
        <function-ref name="write" scoped="" ref="0x7f1190275990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1190277480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1190277480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190277800"/>
        <function-ref name="write" scoped="" ref="0x7f1190277990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f119027f940" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f119027f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119027fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1190269e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1190269e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190267210"/>
        <function-ref name="write" scoped="" ref="0x7f11902673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f119026a670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f119026a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119026a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119026ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1190267670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1190267670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11902679f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190267b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f119025fad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f119025fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119025fe50"/>
        <function-ref name="write" scoped="" ref="0x7f119025e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1190260ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1190260ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190260e50"/>
        <function-ref name="write" scoped="" ref="0x7f119025f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f119026d670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f119026d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119026d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119026db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f119026ae50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f119026ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190269210"/>
        <function-ref name="write" scoped="" ref="0x7f11902693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1190263ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1190263ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190263e50"/>
        <function-ref name="write" scoped="" ref="0x7f1190262020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1190270670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1190270670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11902709f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190270b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f119025ead0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f119025ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f119025ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f119025d020"/>
        <function-ref name="write" scoped="" ref="0x7f119025d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f119025d340"/>
        <function-ref name="readDone" scoped="" ref="0x7f119025d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f119027f2f0" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f119027f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119027f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1190278490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1190278490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190278810"/>
        <function-ref name="write" scoped="" ref="0x7f11902789a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1190274480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1190274480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190274800"/>
        <function-ref name="write" scoped="" ref="0x7f1190274990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f119026ce50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f119026ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119026b210"/>
        <function-ref name="write" scoped="" ref="0x7f119026b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1190271e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1190271e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190270210"/>
        <function-ref name="write" scoped="" ref="0x7f11902703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f119026b670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f119026b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119026b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119026bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1190273670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1190273670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11902739f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190273b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f119027e670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f119027e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119027e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1190273e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1190273e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190272210"/>
        <function-ref name="write" scoped="" ref="0x7f11902723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1190281c30" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1190281c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190280020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f11902801b0"/>
        <function-ref name="request" scoped="" ref="0x7f1190280340"/>
        <function-ref name="granted" scoped="" ref="0x7f11902804d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1190280660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1190279160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1190279160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11902794e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1190279e00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1190279e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11902781c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f11902632f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f11902632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190263670"/>
        <function-ref name="write" scoped="" ref="0x7f1190263800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1190264ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1190264ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190264e50"/>
        <function-ref name="write" scoped="" ref="0x7f1190263020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f119027b6b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f119027b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119027ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f11902642f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f11902642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190264670"/>
        <function-ref name="write" scoped="" ref="0x7f1190264800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f119025f2f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f119025f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119025f670"/>
        <function-ref name="write" scoped="" ref="0x7f119025f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f119026de50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f119026de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119026c210"/>
        <function-ref name="write" scoped="" ref="0x7f119026c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1190269670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1190269670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11902699f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190269b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f119027ecc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f119027ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119027d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f119027d9c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f119027d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119027dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1190270e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1190270e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119026e210"/>
        <function-ref name="write" scoped="" ref="0x7f119026e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f11902797b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f11902797b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190279b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f119026e670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f119026e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119026e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119026eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1190266e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1190266e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190265610"/>
        <function-ref name="write" scoped="" ref="0x7f11902657a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f119025d7a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f119025d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f119025db20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f119025dcb0"/>
        <function-ref name="write" scoped="" ref="0x7f119025de40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f119025c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f119025c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f1190251df0" loc="42:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1190251df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f119024e1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f119024e350"/>
        <function-ref name="sfd" scoped="" ref="0x7f119024e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f119024e7c0" loc="43:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f119024e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f119024eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f119024d020" loc="44:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f119024d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f119024d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f11902515c0" loc="41:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f11902515c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1190251940"/>
        <function-ref name="stop" scoped="" ref="0x7f1190251ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f1190245380" loc="54:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f1190245380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190245700"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190245890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190245a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190245bb0"/>
        <function-ref name="get" scoped="" ref="0x7f1190245d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190244020"/>
        <function-ref name="set" scoped="" ref="0x7f11902441b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190244340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f119023eb90" loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f119023eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f119023d020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f119023d1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f119023d340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f119023d4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f119023d660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f119023d7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f119023d980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f119023db10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f119023dca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f119023de30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f119023c020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f119023c1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f119023c340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f119023c5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f119023c760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f11902279d0" loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f11902279d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1190227d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f1190226020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f119023cd70" loc="65:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f119023cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1190239330"/>
        <function-ref name="clear" scoped="" ref="0x7f1190239a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f119023bba0"/>
        <function-ref name="set" scoped="" ref="0x7f1190238210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f11902446b0" loc="55:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f11902446b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1190244a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190244bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1190244d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190243020"/>
        <function-ref name="get" scoped="" ref="0x7f11902431b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190243340"/>
        <function-ref name="set" scoped="" ref="0x7f11902434d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1190243660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f1190237cb0" loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1190237cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11902360a0"/>
        <function-ref name="write" scoped="" ref="0x7f1190236230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f1190236590" loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1190236590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190236910"/>
        <function-ref name="write" scoped="" ref="0x7f1190236aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f11902356d0" loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f11902356d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190235a50"/>
        <function-ref name="write" scoped="" ref="0x7f1190235be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f119023f330" loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f119023f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f119023f6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f119023f840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f119023f9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f119023fb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f119023fcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f119023fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f1190248550" loc="49:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1190248550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f11902488d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1190248a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f1190248bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f11902403a0" loc="60:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f11902403a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190240720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1190246020" loc="53:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1190246020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f11902463a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1190246530"/>
        <function-ref name="toggle" scoped="" ref="0x7f11902466c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1190246850"/>
        <function-ref name="get" scoped="" ref="0x7f11902469e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1190246b70"/>
        <function-ref name="set" scoped="" ref="0x7f1190246d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1190245020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f1190234020" loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1190234020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11902343a0"/>
        <function-ref name="write" scoped="" ref="0x7f1190234530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f119024a620" loc="47:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f119024a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f119024a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f119023e1e0" loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f119023e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f119023e560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f119023e6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f119023e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1190247020" loc="50:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1190247020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f11902473a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f11902426e0" loc="58:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f11902426e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1190242a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190242bf0"/>
        <function-ref name="request" scoped="" ref="0x7f1190242d80"/>
        <function-ref name="granted" scoped="" ref="0x7f1190241020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f11902411b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f1190236e00" loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1190236e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11902351c0"/>
        <function-ref name="write" scoped="" ref="0x7f1190235350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f1190241530" loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1190241530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f11902418b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1190241a40"/>
        <function-ref name="write" scoped="" ref="0x7f1190241bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1190241d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f1190240020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f11902348b0" loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f11902348b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190234e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f11902477c0" loc="51:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f11902477c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1190247b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1190232150" loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1190232150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f11902324d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1190232660"/>
        <function-ref name="led1On" scoped="" ref="0x7f11902327f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1190232980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1190232b10"/>
        <function-ref name="get" scoped="" ref="0x7f1190232ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1190232e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f11902314d0"/>
        <function-ref name="set" scoped="" ref="0x7f1190231020"/>
        <function-ref name="led0On" scoped="" ref="0x7f11902311b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1190231340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f11902373e0" loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f11902373e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190237760"/>
        <function-ref name="write" scoped="" ref="0x7f11902378f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f1190238b10" loc="67:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1190238b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190237020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f1190243a50" loc="56:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1190243a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1190243dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f1190242020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f11902421b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1190242340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f1190240ad0" loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1190240ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119023f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f119024aca0" loc="48:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f119024aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f11902480a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1190248230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f11901c6a70" loc="44:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f11901c6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f11901c6df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f11901ca670" loc="41:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f11901ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f11901ca9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f11901cab80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f11901cad10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f11901c7020"/>
        <function-ref name="getPower" scoped="" ref="0x7f11901c71b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f11901c7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f11901c5550" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f11901c5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f11901c4b00"/>
        <function-ref name="clear" scoped="" ref="0x7f11901c22a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f11901c43d0"/>
        <function-ref name="set" scoped="" ref="0x7f11901c29d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f11901c60c0" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f11901c60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f11901c6440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f11901c65d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f11901c6760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f11901bd480" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f11901bd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f11901bd800"/>
        <function-ref name="isSet" scoped="" ref="0x7f11901bd990"/>
        <function-ref name="cancel" scoped="" ref="0x7f11901bdb20"/>
        <function-ref name="set" scoped="" ref="0x7f11901bdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f11901c1660" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f11901c1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f11901c0ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f11901be460"/>
        <function-ref name="isValid" scoped="" ref="0x7f11901c05b0"/>
        <function-ref name="set" scoped="" ref="0x7f11901beb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f11901c76e0" loc="42:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f11901c76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f11901c7a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f11901c7bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f11901c7d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f11901b7020" loc="49:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f11901b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f11901b73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f11901bcd20" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f11901bcd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f11901b90e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f11901b9270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f11901b9400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f11901b9590"/>
        <function-ref name="getPower" scoped="" ref="0x7f11901b9720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f11901b98b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f11901ae4a0" loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f11901ae4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f11901ae820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f11901ae9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f11901aeb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f11901aecd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f11901aee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f11901b7a80" loc="51:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f11901b7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f11901b4020"/>
        <function-ref name="clear" scoped="" ref="0x7f11901b4750"/>
        <function-ref name="isValid" scoped="" ref="0x7f11901b68d0"/>
        <function-ref name="set" scoped="" ref="0x7f11901b4e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f11901b8640" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f11901b8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f11901b89c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f11901b8b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f11901b8ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f11901af8b0" loc="53:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f11901af8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f11901afc30"/>
        <function-ref name="isSet" scoped="" ref="0x7f11901afdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f11901ae020"/>
        <function-ref name="set" scoped="" ref="0x7f11901ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f11901aa820" loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f11901aa820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f11901ac4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f11901acb80" loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f11901acb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f11901ab7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f11901b3af0" loc="52:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f11901b3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f11901b00d0"/>
        <function-ref name="clear" scoped="" ref="0x7f11901b0800"/>
        <function-ref name="isValid" scoped="" ref="0x7f11901b2970"/>
        <function-ref name="set" scoped="" ref="0x7f11901af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f11901b9c50" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f11901b9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f11901b8020"/>
        <function-ref name="noAck" scoped="" ref="0x7f11901b81b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f11901b8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f11901594e0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f11901594e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1190150150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f11901507c0" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f11901507c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f119014e620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119014d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119014eae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f119014d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1190148020" loc="46:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1190148020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1190144630"/>
        <function-ref name="fired" scoped="" ref="0x7f1190147a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1190145920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f11901454a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1190143020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1190144ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1190145020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1190148c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1190144020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1190147110"/>
        <function-ref name="stop" scoped="" ref="0x7f11901475e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1190143610" loc="47:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1190143610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f11901413d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1190149130" loc="45:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1190149130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11901494b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1190113870" loc="44:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1190113870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f119010f090"/>
        <function-ref name="fired" scoped="" ref="0x7f1190111090"/>
        <function-ref name="startAt" scoped="" ref="0x7f1190111a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1190111550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f119010f550"/>
        <function-ref name="start" scoped="" ref="0x7f11901126a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1190112bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1190113020" loc="43:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1190113020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f11901133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f118f342260" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f118f342260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118f340b30"/>
        <function-ref name="fired" scoped="" ref="0x7f118f341a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f118f3404e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118f340020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f118f33f020"/>
        <function-ref name="start" scoped="" ref="0x7f118f341090"/>
        <function-ref name="stop" scoped="" ref="0x7f118f3415a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f118f3449d0" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f118f3449d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f118f344d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f118f32aa80" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f118f32aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f118f32ae00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f118f329020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f118f3291b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f118f329340"/>
        <function-ref name="fired" scoped="" ref="0x7f118f3294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f118f32c020" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f118f32c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f118f32c3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f118f32c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f118f32c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f118f32c850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f118f32c9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f118f32cb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f118f32cd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f118f32b020"/>
        <function-ref name="overflow" scoped="" ref="0x7f118f32b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f118f32b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f118f32b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f118f32b760" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f118f32b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f118f32bae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f118f32bc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f118f32be00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f118f32a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f118f32a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f118f32a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f118f32a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f118f32a660"/>
        <function-ref name="setControl" scoped="" ref="0x7f118f32a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f118f2fd760" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f118f2fd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f118f2fdae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f118f2fdc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f118f2fde00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f118f2fc020"/>
        <function-ref name="fired" scoped="" ref="0x7f118f2fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f118f300dd0" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f118f300dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f118f2ff180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f118f2ff310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f118f2ff4a0"/>
        <function-ref name="get" scoped="" ref="0x7f118f2ff630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f118f2ff7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f118f2ff950"/>
        <function-ref name="getMode" scoped="" ref="0x7f118f2ffae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f118f2ffc70"/>
        <function-ref name="overflow" scoped="" ref="0x7f118f2ffe00"/>
        <function-ref name="setMode" scoped="" ref="0x7f118f2fe020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f118f2fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f118f327bf0" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f118f327bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118f3004e0"/>
        <function-ref name="fired" scoped="" ref="0x7f118f3254e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f118f325e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118f3259a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f118f3009a0"/>
        <function-ref name="start" scoped="" ref="0x7f118f326a80"/>
        <function-ref name="stop" scoped="" ref="0x7f118f325020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f118f327360" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f118f327360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f118f3276e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f118f2fe440" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f118f2fe440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f118f2fe7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f118f2fe950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f118f2feae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f118f2fec70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f118f2fee00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f118f2fd020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f118f2fd1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f118f2fd340"/>
        <function-ref name="setControl" scoped="" ref="0x7f118f2fd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1190133b70" loc="43:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1190133b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f119012f9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f119012e360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f119012fe70"/>
        <function-ref name="overflow" scoped="" ref="0x7f119012e820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1190128b90" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f1190128b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f11901269d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f11901254e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1190125020"/>
        <function-ref name="overflow" scoped="" ref="0x7f11901259a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f119012a610" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f119012a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f11901295b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1190128020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1190129a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f11901284e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f118f33d5f0" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f118f33d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118f33ae50"/>
        <function-ref name="fired" scoped="" ref="0x7f118f33ce00"/>
        <function-ref name="startAt" scoped="" ref="0x7f118f33a800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118f33a340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f118f339340"/>
        <function-ref name="start" scoped="" ref="0x7f118f33c430"/>
        <function-ref name="stop" scoped="" ref="0x7f118f33c940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f118f337d20" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f118f337d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911df640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f11911df9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118f333670"/>
        <function-ref name="fired" scoped="" ref="0x7f118f334550"/>
        <function-ref name="startAt" scoped="" ref="0x7f118f333020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118f334a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f118f333b30"/>
        <function-ref name="start" scoped="" ref="0x7f118f336b60"/>
        <function-ref name="stop" scoped="" ref="0x7f118f334090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f118f3399b0" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f118f3399b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f118f3387e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f118f3371b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f118f338ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f118f337670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f11900de9c0" loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f11900de9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f11900ded40"/>
        <function-ref name="runTask" scoped="" ref="0x7f11900dd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f11900e2850" loc="49:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f11900e2850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f11900de090"/>
        <function-ref name="fired" scoped="" ref="0x7f11900df090"/>
        <function-ref name="startAt" scoped="" ref="0x7f11900dfa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f11900df550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f11900de550"/>
        <function-ref name="start" scoped="" ref="0x7f11900e06a0"/>
        <function-ref name="stop" scoped="" ref="0x7f11900e0bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f11900e72f0" loc="48:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f11900e72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f11900e3870"/>
        <function-ref name="fired" scoped="" ref="0x7f11900e6e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f11900e4c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f11900e4780"/>
        <function-ref name="getdt" scoped="" ref="0x7f11900e21e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f11900e3cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f11900e4300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f11900e6020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f11900e3260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f11900e64f0"/>
        <function-ref name="stop" scoped="" ref="0x7f11900e69c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f119008da00" loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f119008da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f119008dd80"/>
        <function-ref name="runTask" scoped="" ref="0x7f119008b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f1190092640" loc="49:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f1190092640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f119008ec40"/>
        <function-ref name="fired" scoped="" ref="0x7f119008f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f119008e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f119008fae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f119008d590"/>
        <function-ref name="gett0" scoped="" ref="0x7f119008d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f119008f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1190090390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f119008e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1190090860"/>
        <function-ref name="stop" scoped="" ref="0x7f1190090d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1190098150" loc="48:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1190098150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1190093700"/>
        <function-ref name="fired" scoped="" ref="0x7f1190096c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1190095a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f11900955b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1190092090"/>
        <function-ref name="gett0" scoped="" ref="0x7f1190093ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1190095110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1190098d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f11900930d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f11900962a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1190096790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f11900892b0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f11900892b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1190088020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1190088690" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1190088690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f11900875b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1190085020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1190087a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f11900854e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f119007f8c0" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f119007f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f119006bcf0"/>
        <function-ref name="fired" scoped="" ref="0x7f119006d320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f119006b0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f119006dc20"/>
        <function-ref name="getdt" scoped="" ref="0x7f119006a660"/>
        <function-ref name="gett0" scoped="" ref="0x7f119006a1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f119006d7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f119006e4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f119006b6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f119006e9b0"/>
        <function-ref name="stop" scoped="" ref="0x7f119006ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f11900762c0" loc="49:../../../..//tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f11900762c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1190072870"/>
        <function-ref name="fired" scoped="" ref="0x7f1190075e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1190074c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1190074780"/>
        <function-ref name="getdt" scoped="" ref="0x7f11900711e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1190072cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1190074300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1190075020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1190072260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f11900754f0"/>
        <function-ref name="stop" scoped="" ref="0x7f11900759c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f119005ac60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f119005ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190059210"/>
        <function-ref name="write" scoped="" ref="0x7f11900593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1190063020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1190063020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11900633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f119005dc70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f119005dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119005c020"/>
        <function-ref name="write" scoped="" ref="0x7f119005c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1190057670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1190057670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11900579f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190057b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1190050e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1190050e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119004f210"/>
        <function-ref name="write" scoped="" ref="0x7f119004f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1190057e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1190057e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190056210"/>
        <function-ref name="write" scoped="" ref="0x7f11900563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f11900442f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f11900442f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190044670"/>
        <function-ref name="write" scoped="" ref="0x7f1190044800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f11900462f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f11900462f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190046670"/>
        <function-ref name="write" scoped="" ref="0x7f1190046800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1190062370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1190062370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11900626f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f119004c670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f119004c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119004c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119004cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f11900472f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f11900472f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190047670"/>
        <function-ref name="write" scoped="" ref="0x7f1190047800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f119005cc60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f119005cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119005b020"/>
        <function-ref name="write" scoped="" ref="0x7f119005b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f119005bc60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f119005bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119005a020"/>
        <function-ref name="write" scoped="" ref="0x7f119005a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1190052670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1190052670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11900529f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190052b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1190054e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1190054e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190053210"/>
        <function-ref name="write" scoped="" ref="0x7f11900533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1190056670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1190056670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11900569f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190056b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1190066970" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1190066970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1190066cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1190066e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1190065030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1190061d00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1190061d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11900600a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1190060370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1190060370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11900607f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f119004ba70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f119004ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119004bdf0"/>
        <function-ref name="write" scoped="" ref="0x7f1190049020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1190060ac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1190060ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190060e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1190047ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1190047ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190047e50"/>
        <function-ref name="write" scoped="" ref="0x7f1190046020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1190061060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1190061060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11900613e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f119004de50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f119004de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119004c210"/>
        <function-ref name="write" scoped="" ref="0x7f119004c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f119005b480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f119005b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119005b800"/>
        <function-ref name="write" scoped="" ref="0x7f119005b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f119005c480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f119005c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119005c800"/>
        <function-ref name="write" scoped="" ref="0x7f119005c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1190065950" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1190065950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190065cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f119004ee50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f119004ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119004d210"/>
        <function-ref name="write" scoped="" ref="0x7f119004d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f119004f670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f119004f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119004f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119004fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f119004d670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f119004d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119004d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119004db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1190045ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1190045ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190045e50"/>
        <function-ref name="write" scoped="" ref="0x7f1190044020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1190046ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1190046ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190046e50"/>
        <function-ref name="write" scoped="" ref="0x7f1190045020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1190053670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1190053670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11900539f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190053b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f119004fe50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f119004fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119004e210"/>
        <function-ref name="write" scoped="" ref="0x7f119004e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1190048ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1190048ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190048e50"/>
        <function-ref name="write" scoped="" ref="0x7f1190047020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1190055670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1190055670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11900559f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190055b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1190044ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1190044ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1190044e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1190042020"/>
        <function-ref name="write" scoped="" ref="0x7f11900421b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1190042340"/>
        <function-ref name="readDone" scoped="" ref="0x7f11900424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1190065300" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1190065300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190065680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f119005d490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f119005d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119005d810"/>
        <function-ref name="write" scoped="" ref="0x7f119005d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f119005a480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f119005a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119005a800"/>
        <function-ref name="write" scoped="" ref="0x7f119005a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1190052e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1190052e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190050210"/>
        <function-ref name="write" scoped="" ref="0x7f11900503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1190056e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1190056e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190055210"/>
        <function-ref name="write" scoped="" ref="0x7f11900553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1190050670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1190050670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11900509f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190050b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1190059670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1190059670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11900599f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190059b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1190063670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1190063670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11900639f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1190059e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1190059e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190057210"/>
        <function-ref name="write" scoped="" ref="0x7f11900573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1190067d00" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1190067d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f11900660a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1190066230"/>
        <function-ref name="request" scoped="" ref="0x7f11900663c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1190066550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f11900666e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f119005f160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f119005f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119005f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f119005fe00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f119005fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119005d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f11900482f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f11900482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190048670"/>
        <function-ref name="write" scoped="" ref="0x7f1190048800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1190049ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1190049ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190049e50"/>
        <function-ref name="write" scoped="" ref="0x7f1190048020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f11900616b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f11900616b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190061a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f11900492f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f11900492f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190049670"/>
        <function-ref name="write" scoped="" ref="0x7f1190049800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f11900452f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f11900452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190045670"/>
        <function-ref name="write" scoped="" ref="0x7f1190045800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1190053e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1190053e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190052210"/>
        <function-ref name="write" scoped="" ref="0x7f11900523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f119004e670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f119004e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119004e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f119004eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1190063cc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1190063cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f11900620a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f11900629c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f11900629c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1190062d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1190055e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1190055e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1190054210"/>
        <function-ref name="write" scoped="" ref="0x7f11900543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f119005f7b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f119005f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f119005fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1190054670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1190054670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f11900549f0"/>
        <function-ref name="write" scoped="" ref="0x7f1190054b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f119004ce50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f119004ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f119004b610"/>
        <function-ref name="write" scoped="" ref="0x7f119004b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f11900427a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f11900427a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1190042b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1190042cb0"/>
        <function-ref name="write" scoped="" ref="0x7f1190042e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1190041020"/>
        <function-ref name="readDone" scoped="" ref="0x7f11900411b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f1190018a20" loc="46:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1190018a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1190018da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1190016020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f1190017920" loc="45:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f1190017920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1190018560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f119001d9a0" loc="44:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f119001d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f119001dd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f1190012a20" loc="48:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1190012a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1190012da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1190011020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f1190013940" loc="47:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f1190013940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1190012560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1190013080" loc="46:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1190013080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1190013400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f119001baa0" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f119001baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f119001be20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1190014020"/>
        <function-ref name="isState" scoped="" ref="0x7f11900141b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1190014340"/>
        <function-ref name="requestState" scoped="" ref="0x7f11900144d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1190014660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f118ff6a020" loc="44:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f118ff6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118ff6a3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff6a530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118ff6a6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f118ff6a850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118ff6a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f118ff6c220" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f118ff6c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118ff6c5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff6c730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118ff6c8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f118ff6ca50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118ff6cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f118ff66e60" loc="45:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f118ff66e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118ff65210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff653a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118ff65530"/>
        <function-ref name="cancel" scoped="" ref="0x7f118ff656c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118ff65850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f118ff69a20" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f118ff69a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118ff69da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff66020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118ff661b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f118ff66340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118ff664d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f118ff648f0" loc="47:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f118ff648f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f118ff64c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f118ff64e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f118ff66750" loc="41:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f118ff66750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f118ff66ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f118ff63170" loc="48:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f118ff63170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff634f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f118ff63680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f118ff63810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f118ff65ae0" loc="46:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f118ff65ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f118ff65e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f118ff64020"/>
        <function-ref name="isState" scoped="" ref="0x7f118ff641b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f118ff64340"/>
        <function-ref name="requestState" scoped="" ref="0x7f118ff644d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f118ff64660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f118ff67690" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f118ff67690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f118ff67a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f118ff67ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f118ff67d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f118ff52020"/>
        <function-ref name="requestState" scoped="" ref="0x7f118ff521b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f118ff52340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f118ff4c950" loc="47:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f118ff4c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118ff4ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f118ff4faa0" loc="42:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f118ff4faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118ff4fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f118ff4c200" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f118ff4c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118ff4c580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f118ff473f0" loc="49:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f118ff473f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118ff47770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f118ff48b70" loc="45:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f118ff48b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f118ff47020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f118ff4be30" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f118ff4be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118ff481e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f118ff47a70" loc="50:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f118ff47a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff47df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f118ff46020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f118ff461b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f118ff48570" loc="44:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f118ff48570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118ff488f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f118ff18020" loc="75:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f118ff18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118ff183a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f118ff186b0" loc="76:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f118ff186b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118ff18a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff18bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118ff18d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f118ff17020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118ff171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f118ff1d8e0" loc="65:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f118ff1d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118ff1dc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff1ddf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118ff1b020"/>
        <function-ref name="cancel" scoped="" ref="0x7f118ff1b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118ff1b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f118ff1bc90" loc="68:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f118ff1bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118ff1a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff1a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118ff1a3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f118ff1a550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118ff1a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f118ff1b5e0" loc="66:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f118ff1b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118ff1b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f118ff1ebe0" loc="64:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f118ff1ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118ff1d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118ff1d1b0"/>
        <function-ref name="request" scoped="" ref="0x7f118ff1d340"/>
        <function-ref name="granted" scoped="" ref="0x7f118ff1d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118ff1d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f118ff1aa50" loc="69:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f118ff1aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118ff1add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f118ff19170" loc="71:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f118ff19170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f118ff194f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f118ff19680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff19810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118ff199a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f118ff19b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f118ff0ed70" loc="58:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f118ff0ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118ff0d180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff0d310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118ff0d4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f118ff0d630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118ff0d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f118ff0db10" loc="59:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f118ff0db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118ff0c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f118fedfdb0" loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f118fedfdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f118fede180"/>
        <function-ref name="runTask" scoped="" ref="0x7f118fede310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f118ff0c2f0" loc="60:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f118ff0c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f118ff0c670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f118ff0c800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f118ff0c990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f118ff0cb20"/>
        <function-ref name="getPower" scoped="" ref="0x7f118ff0ccb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f118ff0ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f118ff11a20" loc="51:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f118ff11a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118ff11da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff0f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118ff0f1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f118ff0f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118ff0f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f118ff0bb70" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f118ff0bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f118ff0a020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f118ff0a1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f118ff0a340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f118ff0a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f118ff0b170" loc="61:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f118ff0b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff0b4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f118ff0b680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f118ff0b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f118ff11370" loc="49:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f118ff11370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118ff116f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f118ff137b0" loc="46:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f118ff137b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118ff13b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118ff13cc0"/>
        <function-ref name="request" scoped="" ref="0x7f118ff13e50"/>
        <function-ref name="granted" scoped="" ref="0x7f118ff12020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118ff121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f118ff124d0" loc="48:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f118ff124d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118ff12850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff129e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118ff12b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f118ff12d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118ff11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f118ff0f840" loc="52:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f118ff0f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118ff0fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f118ff0e020" loc="54:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f118ff0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f118ff0e3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f118ff0e530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118ff0e6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118ff0e850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f118ff0e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f118febfdd0" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f118febfdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f118febe180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f118febe410" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f118febe410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f118febe790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f118febe920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f118febeab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f118febec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f118feb2b80" loc="46:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f118feb2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f118feb1020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f118feb11b0"/>
        <function-ref name="start" scoped="" ref="0x7f118feb1340"/>
        <function-ref name="stop" scoped="" ref="0x7f118feb14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f118feb0860" loc="51:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f118feb0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118feb0be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118feb0d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118feaf020"/>
        <function-ref name="cancel" scoped="" ref="0x7f118feaf1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118feaf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f118feaf690" loc="52:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f118feaf690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118feafa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f118feb7ce0" loc="43:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f118feb7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118feb40a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118feb4230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118feb43c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f118feb4550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118feb46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f118feb2080" loc="45:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f118feb2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f118feb2400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f118feb2590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f118feb2720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f118feb28b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f118feb1800" loc="47:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f118feb1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f118feb1b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f118feb1d10"/>
        <function-ref name="isState" scoped="" ref="0x7f118feb0020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f118feb01b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f118feb0340"/>
        <function-ref name="forceState" scoped="" ref="0x7f118feb04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f118feafd90" loc="53:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f118feafd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f118feae180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f118feae310"/>
        <function-ref name="start" scoped="" ref="0x7f118feae4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f118feae630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f118feb4980" loc="44:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f118feb4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118feb4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f118feab2d0" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f118feab2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f118feab650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f118feab7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f118feab970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f118feabb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f118fead580" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f118fead580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f118fead900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f118feada90"/>
        <function-ref name="isState" scoped="" ref="0x7f118feadc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f118feaddb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f118feac020"/>
        <function-ref name="forceState" scoped="" ref="0x7f118feac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f118fe9ed70" loc="45:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f118fe9ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118fe9d180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118fe9d310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118fe9d4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f118fe9d630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118fe9d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f118fea1350" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f118fea1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118fea16d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118fea1860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118fea19f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f118fea1b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118fea1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f118fe9e020" loc="41:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f118fe9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f118fe9e3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f118fe9e530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f118fe9e6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f118fe9e850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f118fe9e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f118fe991c0" loc="44:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f118fe991c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f118fe99540"/>
        <function-ref name="noAck" scoped="" ref="0x7f118fe996d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f118fe99860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f118fe9c410" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f118fe9c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f118fe9c790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f118fe9c920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f118fe9cab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f118fe9cc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f118fe9cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f118fe79690" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f118fe79690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118fe79a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f118fe7a860" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f118fe7a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118fe7abe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118fe7ad70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118fe79020"/>
        <function-ref name="cancel" scoped="" ref="0x7f118fe791b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118fe79340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f118fe77610" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f118fe77610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f118fe77990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f118fe77b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f118fe77cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f118fe77e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f118fe76020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f118fe761b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f118fe76340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f118fe764d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f118fe76660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f118fe767f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f118fe76980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f118fe76b10"/>
        <function-ref name="sync" scoped="" ref="0x7f118fe76ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f118fe75020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f118fe751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f118fe7b8b0" loc="54:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f118fe7b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f118fe7bc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f118fe7bdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f118fe7a020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f118fe7a1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f118fe7a340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f118fe7a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f118fe7dce0" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f118fe7dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f118fe7b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f118fe741f0" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f118fe741f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f118fe74570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f118fe74700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f118fe74890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f118fe74a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f118fe74bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f118fe74d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f118fe7ea80" loc="52:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f118fe7ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f118fe7ee00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f118fe7d020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118fe7d1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118fe7d340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f118fe7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f118fe81020" loc="48:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f118fe81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f118fe813a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118fe81530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118fe816c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f118fe81850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f118fe819e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f118fe80df0" loc="50:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f118fe80df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118fe7f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f118fe79ce0" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f118fe79ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f118fe780a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f118fe78230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f118fe783c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f118fe78550"/>
        <function-ref name="getPower" scoped="" ref="0x7f118fe786e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f118fe78870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f118fe754d0" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f118fe754d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f118fe75950"/>
        <function-ref name="changed" scoped="" ref="0x7f118fe75ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f118fe75c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f118fe75e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f118fe78b70" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f118fe78b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f118fe77020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f118fe771b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f118fe77340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f118fe80210" loc="49:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f118fe80210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118fe80590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f118fe73d30" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f118fe73d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f118fe720e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f118fe72270"/>
        <function-ref name="led1On" scoped="" ref="0x7f118fe72400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f118fe72590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f118fe72720"/>
        <function-ref name="get" scoped="" ref="0x7f118fe728b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f118fe72a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f118fe711b0"/>
        <function-ref name="set" scoped="" ref="0x7f118fe72bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f118fe72d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f118fe71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f118fe7f470" loc="51:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f118fe7f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f118fe7f7f0"/>
        <function-ref name="source" scoped="" ref="0x7f118fe7f980"/>
        <function-ref name="address" scoped="" ref="0x7f118fe7fb10"/>
        <function-ref name="destination" scoped="" ref="0x7f118fe7fca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f118fe7fe30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f118fe7e020"/>
        <function-ref name="type" scoped="" ref="0x7f118fe7e1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f118fe7e340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f118fe7e4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f118fe7e660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f118fe7e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f118fe730f0" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f118fe730f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118fe73470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118fe73600"/>
        <function-ref name="request" scoped="" ref="0x7f118fe73790"/>
        <function-ref name="granted" scoped="" ref="0x7f118fe73920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118fe73ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f118fdce020" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="SendingBuffer_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f118fdce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f118fdce3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f118fdce530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118fdce6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118fdce850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f118fdce9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f118fdd5910" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="SendingBuffer_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f118fdd5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118fdd5c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f118fdcec30" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="SendingBuffer_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f118fdcec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f118fdcd020"/>
        <function-ref name="source" scoped="" ref="0x7f118fdcd1b0"/>
        <function-ref name="address" scoped="" ref="0x7f118fdcd340"/>
        <function-ref name="destination" scoped="" ref="0x7f118fdcd4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f118fdcd660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f118fdcd7f0"/>
        <function-ref name="type" scoped="" ref="0x7f118fdcd980"/>
        <function-ref name="setType" scoped="" ref="0x7f118fdcdb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f118fdcdca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f118fdcde30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f118fdcc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f118fdca970" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="SendingBuffer_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f118fdca970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f118fdcacf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f118fdcae80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f118fdc9030"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f118fdc91c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f118fdc9350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f118fdca3a0" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="SendingBuffer_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f118fdca3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f118fdca720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f118fdc95a0" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="SendingBuffer_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f118fdc95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f118fdc9920"/>
        <function-ref name="source" scoped="" ref="0x7f118fdc9ab0"/>
        <function-ref name="address" scoped="" ref="0x7f118fdc9c40"/>
        <function-ref name="destination" scoped="" ref="0x7f118fdc9dd0"/>
        <function-ref name="setSource" scoped="" ref="0x7f118fdc7020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f118fdc71b0"/>
        <function-ref name="type" scoped="" ref="0x7f118fdc7340"/>
        <function-ref name="setType" scoped="" ref="0x7f118fdc74d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f118fdc7660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f118fdc77f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f118fdc7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f118fdc5830" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="SendingBuffer_AppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f118fdc5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118fdc2cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f118fdc3300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f118fdc20d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f118fdc3c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f118fdc1660"/>
        <function-ref name="gett0" scoped="" ref="0x7f118fdc11e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118fdc3780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f118fdc4480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f118fdc26e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f118fdc4950"/>
        <function-ref name="stop" scoped="" ref="0x7f118fdc4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f118fdbe140" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="SendingBuffer_AppC.Timer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f118fdbe140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118fdbb630"/>
        <function-ref name="fired" scoped="" ref="0x7f118fdbdb70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f118fdbc920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f118fdbc4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f118fdb9020"/>
        <function-ref name="gett0" scoped="" ref="0x7f118fdbbab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118fdbc020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f118fdbed30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f118fdbb020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f118fdbd220"/>
        <function-ref name="stop" scoped="" ref="0x7f118fdbd6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f118fb35d30" loc="48:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f118fb35d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f118fb340e0"/>
        <function-ref name="configure" scoped="" ref="0x7f118fb34270"/>
        <function-ref name="dataReady" scoped="" ref="0x7f118fb34400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f118fb37d70" loc="47:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f118fb37d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f118fb35180"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f118fb35310"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f118fb354a0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f118fb35630"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f118fb357c0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f118fb35950"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f118fb35ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f118fb34650" loc="49:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f118fb34650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f118fb349d0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f118fb34b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f118fb33020" loc="51:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f118fb33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f118fb33c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f118fb37160" loc="46:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f118fb37160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118fb374e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118fb37670"/>
        <function-ref name="request" scoped="" ref="0x7f118fb37800"/>
        <function-ref name="granted" scoped="" ref="0x7f118fb37990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118fb37b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f118fd972e0" loc="42:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f118fd972e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f118fd97660"/>
        <function-ref name="configure" scoped="" ref="0x7f118fd977f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f118fd97980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f118fd92a70" loc="44:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f118fd92a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f118fd92df0"/>
        <function-ref name="stop" scoped="" ref="0x7f118fd95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f118fd962c0" loc="43:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f118fd962c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f118fd96640"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f118fd967d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f118fd9ab10" loc="41:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f118fd9ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f118fd99020"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f118fd991b0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f118fd99340"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f118fd994d0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f118fd99660"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f118fd997f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f118fd99980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f118fd9b7c0" loc="40:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f118fd9b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118fd9bb40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118fd9bcd0"/>
        <function-ref name="request" scoped="" ref="0x7f118fd9be60"/>
        <function-ref name="granted" scoped="" ref="0x7f118fd9a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118fd9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f118fd8d370" loc="42:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f118fd8d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f118fd8d6f0"/>
        <function-ref name="configure" scoped="" ref="0x7f118fd8d880"/>
        <function-ref name="dataReady" scoped="" ref="0x7f118fd8da10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f118fd7c8d0" loc="48:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f118fd7c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f118fd7cc50"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f118fd7cde0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f118fd88020"/>
        <function-ref name="isBusy" scoped="" ref="0x7f118fd881b0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f118fd88340"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f118fd884d0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f118fd88660"/>
        <function-ref name="startConversion" scoped="" ref="0x7f118fd887f0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f118fd88980"/>
        <function-ref name="getMem" scoped="" ref="0x7f118fd88b10"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f118fd88ca0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f118fd88e30"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f118fd87020"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f118fd872b0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f118fd87440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7f118fd6e540" loc="58:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f118fd6e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f118fd6e8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f118fd6ea50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f118fd6ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f118fd6ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f118fd6d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f118fd6d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f118fd6d340"/>
        <function-ref name="get" scoped="" ref="0x7f118fd6d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f118fd6d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f118fd6d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f118fd6d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f118fd6db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f118fd6dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f118fd6c020"/>
        <function-ref name="clr" scoped="" ref="0x7f118fd6c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7f118fd77850" loc="53:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f118fd77850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f118fd77bd0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f118fd77d60"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f118fd76020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f118fd761b0"/>
        <function-ref name="fired" scoped="" ref="0x7f118fd76340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7f118fd7a020" loc="50:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f118fd7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f118fd7a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f118fd7a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f118fd7a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f118fd7a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f118fd7a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f118fd7ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f118fd7ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f118fd79020"/>
        <function-ref name="setControl" scoped="" ref="0x7f118fd791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f118fd8a1d0" loc="44:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f118fd8a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f118fd8a550"/>
        <function-ref name="stop" scoped="" ref="0x7f118fd8a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7f118fd72540" loc="56:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f118fd72540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f118fd728c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f118fd72a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f118fd72be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f118fd72d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f118fd71020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f118fd711b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f118fd71340"/>
        <function-ref name="get" scoped="" ref="0x7f118fd714d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f118fd71660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f118fd717f0"/>
        <function-ref name="set" scoped="" ref="0x7f118fd71980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f118fd71b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f118fd71ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f118fd70020"/>
        <function-ref name="clr" scoped="" ref="0x7f118fd701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f118fd8c320" loc="43:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f118fd8c320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f118fd8c6a0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f118fd8c830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7f118fd67540" loc="61:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f118fd67540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f118fd678c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f118fd67a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f118fd67be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f118fd67d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f118fd66020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f118fd661b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f118fd66340"/>
        <function-ref name="get" scoped="" ref="0x7f118fd664d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f118fd66660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f118fd667f0"/>
        <function-ref name="set" scoped="" ref="0x7f118fd66980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f118fd66b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f118fd66ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f118fd65020"/>
        <function-ref name="clr" scoped="" ref="0x7f118fd651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7f118fd766d0" loc="54:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f118fd766d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f118fd76b50"/>
        <function-ref name="isInput" scoped="" ref="0x7f118fd76ce0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f118fd76e70"/>
        <function-ref name="toggle" scoped="" ref="0x7f118fd75030"/>
        <function-ref name="isOutput" scoped="" ref="0x7f118fd751c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f118fd75350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f118fd754e0"/>
        <function-ref name="get" scoped="" ref="0x7f118fd75670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f118fd75800"/>
        <function-ref name="getRaw" scoped="" ref="0x7f118fd75990"/>
        <function-ref name="set" scoped="" ref="0x7f118fd75b20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f118fd75cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f118fd75e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f118fd74120"/>
        <function-ref name="clr" scoped="" ref="0x7f118fd742b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f118fd8f020" loc="40:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f118fd8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f118fd8f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7f118fd6c540" loc="59:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f118fd6c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f118fd6c8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f118fd6ca50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f118fd6cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f118fd6cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f118fd6b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f118fd6b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f118fd6b340"/>
        <function-ref name="get" scoped="" ref="0x7f118fd6b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f118fd6b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f118fd6b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f118fd6b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f118fd6bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f118fd6bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f118fd6a020"/>
        <function-ref name="clr" scoped="" ref="0x7f118fd6a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7f118fd87780" loc="49:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f118fd87780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f118fd87b00"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f118fd87c90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f118fd87e20"/>
        <function-ref name="get" scoped="" ref="0x7f118fd7b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f118fd7b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f118fd7b340"/>
        <function-ref name="getMode" scoped="" ref="0x7f118fd7b4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f118fd7b660"/>
        <function-ref name="overflow" scoped="" ref="0x7f118fd7b7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f118fd7b980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f118fd7bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7f118fd8aaf0" loc="47:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f118fd8aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f118fd8ae70"/>
        <function-ref name="userId" scoped="" ref="0x7f118fd89030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7f118fd79560" loc="51:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f118fd79560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f118fd798e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f118fd79a70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f118fd79c00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f118fd79d90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f118fd78020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f118fd781b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f118fd78340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f118fd784d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f118fd78660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f118fd8fd00" loc="41:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f118fd8fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f118fd8e0a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f118fd8e230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f118fd8e3c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f118fd8e550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f118fd8e6e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f118fd8e870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f118fd8ea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7f118fd70540" loc="57:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f118fd70540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f118fd708c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f118fd70a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f118fd70be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f118fd70d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f118fd6f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f118fd6f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f118fd6f340"/>
        <function-ref name="get" scoped="" ref="0x7f118fd6f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f118fd6f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f118fd6f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f118fd6f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f118fd6fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f118fd6fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f118fd6e020"/>
        <function-ref name="clr" scoped="" ref="0x7f118fd6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7f118fd789e0" loc="52:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f118fd789e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f118fd78d60"/>
        <function-ref name="setEvent" scoped="" ref="0x7f118fd77020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f118fd771b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f118fd77340"/>
        <function-ref name="fired" scoped="" ref="0x7f118fd774d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7f118fd74640" loc="55:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f118fd74640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f118fd749c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f118fd74b50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f118fd74ce0"/>
        <function-ref name="toggle" scoped="" ref="0x7f118fd74e70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f118fd73030"/>
        <function-ref name="getResistor" scoped="" ref="0x7f118fd731c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f118fd73350"/>
        <function-ref name="get" scoped="" ref="0x7f118fd734e0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f118fd73670"/>
        <function-ref name="getRaw" scoped="" ref="0x7f118fd73800"/>
        <function-ref name="set" scoped="" ref="0x7f118fd73990"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f118fd73b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f118fd73cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f118fd72020"/>
        <function-ref name="clr" scoped="" ref="0x7f118fd721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7f118fd6a540" loc="60:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f118fd6a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f118fd6a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f118fd6aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f118fd6abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f118fd6ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f118fd68020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f118fd681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f118fd68340"/>
        <function-ref name="get" scoped="" ref="0x7f118fd684d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f118fd68660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f118fd687f0"/>
        <function-ref name="set" scoped="" ref="0x7f118fd68980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f118fd68b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f118fd68ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f118fd67020"/>
        <function-ref name="clr" scoped="" ref="0x7f118fd671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7f118fca90c0" loc="46:../../../..//tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f118fca90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f118fca9440"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f118fca95d0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f118fca9760"/>
        <function-ref name="isBusy" scoped="" ref="0x7f118fca98f0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f118fca9a80"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f118fca9c10"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f118fca9da0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f118fca8020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f118fca81b0"/>
        <function-ref name="getMem" scoped="" ref="0x7f118fca8340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f118fca84d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f118fca8660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f118fca87f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f118fca8a80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f118fca8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f118fc193a0" loc="86:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f118fc193a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f118fc19740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f118fc198d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f118fc18570" loc="89:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f118fc18570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f118fc18910"/>
        <function-ref name="configure" scoped="" ref="0x7f118fc18aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f118fc1a520" loc="85:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f118fc1a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118fc1a8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118fc1aa50"/>
        <function-ref name="request" scoped="" ref="0x7f118fc1abe0"/>
        <function-ref name="granted" scoped="" ref="0x7f118fc1ad70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118fc19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f118fc19b20" loc="87:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f118fc19b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f118fc18020"/>
        <function-ref name="userId" scoped="" ref="0x7f118fc181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f118f2143b0" loc="44:../../../..//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f118f2143b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f118f214730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f118f2149c0" loc="45:../../../..//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f118f2149c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f118f214d40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f118f212020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f118f2121b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f118f212340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f118f210850" loc="52:../../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f118f210850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f118f210bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f118f210d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f118f20f910" loc="56:../../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f118f20f910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f118f20fcb0"/>
        <function-ref name="configure" scoped="" ref="0x7f118f20fe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f118f205120" loc="57:../../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f118f205120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f118f2054a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f118f205630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f118f2057c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f118f205950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f118f2119d0" loc="51:../../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f118f2119d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118f211d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118f210020"/>
        <function-ref name="request" scoped="" ref="0x7f118f2101b0"/>
        <function-ref name="granted" scoped="" ref="0x7f118f210340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118f2104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f118f20f020" loc="53:../../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f118f20f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f118f20f3a0"/>
        <function-ref name="userId" scoped="" ref="0x7f118f20f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f118f205c20" loc="68:../../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f118f205c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f118f204020"/>
        <function-ref name="runTask" scoped="" ref="0x7f118f2041b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f118fbfb740" loc="55:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f118fbfb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f118fbfa3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f118fbfd1d0" loc="54:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f118fbfd1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118fbfd550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118fbfd6e0"/>
        <function-ref name="request" scoped="" ref="0x7f118fbfd870"/>
        <function-ref name="granted" scoped="" ref="0x7f118fbfda00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118fbfdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f118fc01d20" loc="52:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f118fc01d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118fbfe0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118fbfe270"/>
        <function-ref name="request" scoped="" ref="0x7f118fbfe400"/>
        <function-ref name="granted" scoped="" ref="0x7f118fbfe590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118fbfe720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f118fbf69a0" loc="43:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f118fbf69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f118fbf6d20"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f118fbf5020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f118fbf51b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f118fbf5340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f118fbf54d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f118fbf5660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f118fbf57f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f118fbf5980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f118fbf5b10"/>
        <function-ref name="getMem" scoped="" ref="0x7f118fbf5ca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f118fbf5e30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f118fbf4020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f118fbf41b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f118fbf4440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f118fbf45d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7f118fbee020" loc="45:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f118fbee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118fbea630"/>
        <function-ref name="fired" scoped="" ref="0x7f118fbeda60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f118fbeb920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f118fbeb4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f118fbe9020"/>
        <function-ref name="gett0" scoped="" ref="0x7f118fbeaab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118fbeb020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f118fbeec10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f118fbea020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f118fbed110"/>
        <function-ref name="stop" scoped="" ref="0x7f118fbed5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7f118fbf7e00" loc="39:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f118fbf7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f118fbf61c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f118fbf6350"/>
        <function-ref name="start" scoped="" ref="0x7f118fbf64e0"/>
        <function-ref name="stop" scoped="" ref="0x7f118fbf6670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7f118fbe96c0" loc="46:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f118fbe96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118fbe5c40"/>
        <function-ref name="fired" scoped="" ref="0x7f118fbe61e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f118fbe5020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f118fbe6ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f118fbe4590"/>
        <function-ref name="gett0" scoped="" ref="0x7f118fbe4110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118fbe6660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f118fbe8390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f118fbe5630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f118fbe8860"/>
        <function-ref name="stop" scoped="" ref="0x7f118fbe8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7f118fbf7240" loc="38:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f118fbf7240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f118fbf75c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f118fbf7750"/>
        <function-ref name="start" scoped="" ref="0x7f118fbf78e0"/>
        <function-ref name="stop" scoped="" ref="0x7f118fbf7a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7f118fbf4a90" loc="44:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f118fbf4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118fbef020"/>
        <function-ref name="fired" scoped="" ref="0x7f118fbf2510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f118fbf0300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f118fbf2e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f118fbef920"/>
        <function-ref name="gett0" scoped="" ref="0x7f118fbef4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118fbf2990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f118fbf36b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f118fbf0910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f118fbf3b80"/>
        <function-ref name="stop" scoped="" ref="0x7f118fbf2090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f118fb94020" loc="43:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f118fb94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f118fb94c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7f118fb969c0" loc="42:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f118fb969c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f118fb96d40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f118fb95020"/>
        <function-ref name="start" scoped="" ref="0x7f118fb951b0"/>
        <function-ref name="stop" scoped="" ref="0x7f118fb95340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f118fb97030" loc="40:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f118fb97030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118fb973b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118fb97540"/>
        <function-ref name="request" scoped="" ref="0x7f118fb976d0"/>
        <function-ref name="granted" scoped="" ref="0x7f118fb97860"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118fb979f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f118fb9ccb0" loc="38:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f118fb9ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f118fb990a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f118fb99230"/>
        <function-ref name="request" scoped="" ref="0x7f118fb993c0"/>
        <function-ref name="granted" scoped="" ref="0x7f118fb99550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f118fb996e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7f118fb927f0" loc="52:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7f118fb927f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f118fb92b70"/>
        <function-ref name="runTask" scoped="" ref="0x7f118fb92d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7f118fb97d80" loc="41:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f118fb97d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f118fb96180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f118fb96310"/>
        <function-ref name="start" scoped="" ref="0x7f118fb964a0"/>
        <function-ref name="stop" scoped="" ref="0x7f118fb96630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f118fb634e0" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f118fb634e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118fb5fa20"/>
        <function-ref name="fired" scoped="" ref="0x7f118fb60020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f118fb60da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f118fb60920"/>
        <function-ref name="getdt" scoped="" ref="0x7f118fb5e4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f118fb5e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118fb604a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f118fb62110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f118fb5f410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f118fb625e0"/>
        <function-ref name="stop" scoped="" ref="0x7f118fb62ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f118fb5c020" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f118fb5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118fb58630"/>
        <function-ref name="fired" scoped="" ref="0x7f118fb5aa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f118fb59920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f118fb594a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f118fb57020"/>
        <function-ref name="gett0" scoped="" ref="0x7f118fb58ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118fb59020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f118fb5cc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f118fb58020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f118fb5a110"/>
        <function-ref name="stop" scoped="" ref="0x7f118fb5a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f118fb55b40" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f118fb55b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11913b8e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f11911df200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f118fb51110"/>
        <function-ref name="fired" scoped="" ref="0x7f118fb535b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f118fb524a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f118fb52020"/>
        <function-ref name="getdt" scoped="" ref="0x7f118fb51a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f118fb51590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f118fb53a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f118fb54750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f118fb52ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f118fb54c20"/>
        <function-ref name="stop" scoped="" ref="0x7f118fb53130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f118f229020" loc="44:../../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f118f229020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f118f229c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f118f2282a0" loc="45:../../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f118f2282a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f118f227020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../..//tos/interfaces/Init.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f11913b30e0" loc="62:../../../..//tos/interfaces/Init.nc">
        <documentation loc="53:../../../..//tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../..//tos/interfaces/Boot.nc">
      <documentation loc="42:../../../..//tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f11913b7cb0" loc="60:../../../..//tos/interfaces/Boot.nc">
        <documentation loc="51:../../../..//tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f1191385020" loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f1191387270" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f1191386840" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f1191389b00" loc="42:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f11913879e0" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f119138cd10" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f1191389420" loc="41:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f1191386120" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../..//tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f11914d2020" loc="62:../../../..//tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../..//tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f1191797c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f1191333020" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1191334cc0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f1191337390" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f119137eb60"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f119137c650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1191333890" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f11913327b0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f1191334560" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1191332020" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f1191337b30" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f1191336350" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f1191336da0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f119137eb60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f119137c650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1191336b20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f119137eb60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f119137c650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f11913260e0" loc="44:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f1191323730" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f11913234b0" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f11913222e0" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1191322060" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1191324ca0" loc="73:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f11913243e0" loc="68:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f1191326a90" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1191326810" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f119132d3e0" loc="40:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f119132dd60" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f119132dae0" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f119132b790" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f119132b510" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f119132a2a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f119132a020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f119132a990" loc="45:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f119133d810" loc="52:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f119133a2a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f119133a020" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f119133b020" loc="53:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1191343ab0" loc="45:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f119133b760" loc="54:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f119133f9b0" loc="47:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f119133d120" loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f119133f270" loc="46:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f119133e0e0" loc="48:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f119133e9f0" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f119133e770" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f119133acb0" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f119133aa30" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f11912fc1f0" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../..//tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../..//tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f11913f5a80" loc="85:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f11913f41f0" loc="86:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f11913f52b0" loc="79:../../../..//tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../..//tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../..//tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f119160e810" loc="52:../../../..//tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../..//tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../..//tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../..//tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1191c6d020" loc="57:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f1191c6c020" loc="72:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../..//tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f1191c6d790" loc="65:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../..//tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f1191c61270" loc="67:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f1191c61ac0" loc="75:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <function command="" provided="0" name="getData" ref="0x7f119112fd00" loc="102:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="95:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f119112f020" loc="86:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1191147d30"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f1191146230"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1191131a50" loc="86:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7f1191131e40" loc="87:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1191147d30"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f1191146230"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7f1191130200" loc="87:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7f11911305a0" loc="87:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f1191130950" loc="88:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f1191130cc0" loc="88:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f119112ed40" loc="112:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="104:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f119112e720" loc="112:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f119112eab0" loc="112:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../..//tos/interfaces/Receive.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f11911779c0" loc="78:../../../..//tos/interfaces/Receive.nc">
        <documentation loc="58:../../../..//tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
              <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1191177060" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f11911773b0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f11911776e0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../..//tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f119115ddf0" loc="113:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../..//tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f119115db70" loc="113:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f119115a350" loc="138:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f119115a0d0" loc="138:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f119115d190" loc="104:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f119115b680" loc="130:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../..//tos/interfaces/Packet.nc">
      <documentation loc="42:../../../..//tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1191158020" loc="65:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="58:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f119115fca0" loc="65:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f1191157110" loc="78:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="67:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1191158e10" loc="78:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1191153490" loc="126:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="109:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1191154e50" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f11911531c0" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1191154560" loc="106:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="96:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f11911555e0" loc="94:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="80:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1191155020" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1191155350" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../..//tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f119117e2c0" loc="80:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f119117f940" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f119117fcc0" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f119117e020" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f119117a970" loc="135:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f119117a370" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f119117a6a0" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1191179a60" loc="123:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f119117c630" loc="96:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f119117c3b0" loc="96:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f119117bb80" loc="110:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f119117b5a0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f119117b8f0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../..//tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f11911ce6f0" loc="53:../../../..//tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f11911ce6f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f119116a420" loc="136:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f119116fd60" loc="83:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f119116db10" loc="114:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f119116d540" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f119116d880" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f119116ed60" loc="98:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f1191169460" loc="151:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f119116abb0" loc="144:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f119116e570" loc="92:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f11911702a0" loc="64:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1191170020" loc="64:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f119116baa0" loc="129:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f119116b4d0" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f119116b810" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f1191170d60" loc="73:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1191170ae0" loc="73:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f119116f650" loc="78:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../..//tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../..//tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7f119114bad0" loc="45:../../../..//tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f119114bad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7f11911254d0" loc="58:../../../..//tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../..//tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f119114bad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../..//tos/interfaces/Leds.nc">
      <documentation loc="33:../../../..//tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f11911d65b0" loc="61:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="58:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f11911d6d60" loc="67:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="63:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f11911d55a0" loc="72:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="69:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f11911d4510" loc="83:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="79:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f11911d3c60" loc="100:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="96:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f11911d14d0" loc="117:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="103:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f11911d5d30" loc="77:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="74:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f11911d00b0" loc="134:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="120:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f11911d1dc0" loc="134:../../../..//tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f11911d8df0" loc="56:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="53:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f11911d4cf0" loc="89:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="86:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f11911d34b0" loc="94:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="91:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../..//tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f1191151b80" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1191151900" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f1191129d70" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1191129af0" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f1191127020" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f119112ace0" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../..//tos/interfaces/Resource.nc">
      <documentation loc="63:../../../..//tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f119114e9c0" loc="120:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="104:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f119114f990" loc="97:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="90:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f119114f020" loc="88:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="78:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f119114e1f0" loc="102:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="99:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f119114c470" loc="128:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="122:../../../..//tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../..//tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../..//tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1190fcc020" loc="44:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1190fcc750" loc="45:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1190fce0e0" loc="42:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1190fcb5e0" loc="47:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1190fce7e0" loc="43:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1190fcce70" loc="46:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1190fcf2b0" loc="40:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1190fcf980" loc="41:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1190fa1020" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1190fa1770" loc="80:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f1190f9c2e0" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1190f9c060" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1190fa4770" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1190fa0780" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f1190f9cbd0" loc="117:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1190fa0020" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1190fa3820" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f1190f9e020" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f1190fa3020" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1190fa78b0" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f1190f9f020" loc="92:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f1190f9e7c0" loc="101:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f1190f9f7e0" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1190fa4020" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../..//tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../..//tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f1190d5a840" loc="177:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1191191180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1190d5a5c0" loc="177:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f1190d63400" loc="88:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1190d63180" loc="88:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f1190d66840" loc="68:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1190d65350" loc="78:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1190d650d0" loc="78:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f1190d5fd00" loc="121:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1190d5f720" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1190d5fa70" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f1190d62800" loc="103:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1190d62220" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1190d62570" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f1190d5d2e0" loc="147:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1190d5d060" loc="147:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f1190d5b680" loc="162:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1190d5b0d0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f1190d5b3f0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1191192d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f1190d5e0b0" loc="136:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1190d61e00" loc="136:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f1190d57d00" loc="187:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1191191180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1190d57720" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f1190d57a70" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1191191180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f1190d56b50" loc="195:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1191191180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../..//tos/interfaces/Send.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1190d47020" loc="75:../../../..//tos/interfaces/Send.nc">
        <documentation loc="57:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190d4aa30" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1190d4ad60" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1190d43660" loc="125:../../../..//tos/interfaces/Send.nc">
        <documentation loc="115:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190d43060" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1190d43390" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1190d42790" loc="112:../../../..//tos/interfaces/Send.nc">
        <documentation loc="102:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1190d46350" loc="89:../../../..//tos/interfaces/Send.nc">
        <documentation loc="77:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190d460d0" loc="89:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1190d45870" loc="100:../../../..//tos/interfaces/Send.nc">
        <documentation loc="91:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190d45290" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1190d455e0" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f1190cd2920" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1190cd2920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1190cd2b60" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190cd2b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f1190ccd970" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190cd2b60"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190ccd6f0" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f1190ccbb40" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190ccb8c0" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f1190ccf750" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190ccf4d0" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1190cc9020" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190cd2b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190cca8a0" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f1190ccac00" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190cd2b60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../..//tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../..//tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f1190cbe030" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190cbf9e0" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f1190cbfd70" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f1190cbc2a0" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190cbc020" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f1190cbf1f0" loc="57:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f1190cc07f0" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f1190cc0570" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f1190c96430" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190c961b0" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f1190c99720" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190c994a0" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f1190c9bdc0" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f1190c9bb40" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f1190c9b2a0" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f1190c9b020" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f1190c9a880" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f1190c9a600" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f1190c985e0" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190c98360" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../..//tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../..//tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f1190c8be60" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../..//tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f1190c8b850" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1190c8bbd0" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f1190ca50c0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1190ca6aa0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f1190ca6df0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f1190ca16d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1190ca10d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f1190ca1440" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f1190ca5ba0" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1191f83110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1190ca5920" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f1190ca3600" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1190ca3380" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f1190ca62a0" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1190ca6020" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f1190ca4720" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1190ca44a0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../..//tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../..//tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f1190c8f630" loc="65:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190c8f3b0" loc="65:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f1190c936f0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190c930d0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f1190c93460" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f1190c905f0" loc="59:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../..//tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190c90370" loc="59:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f1190c91af0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190c914d0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f1190c91860" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f1190c8d630" loc="71:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190c8d3b0" loc="71:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../..//tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f1190c9e0b0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../..//tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190ca7de0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1190c633a0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1190c68dc0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f1190c63110" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1190c626a0" loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f1190c5fe70" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f1190c5f060" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f1190c5f8a0" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1190c5fbd0" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1190c61840" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1190c61260" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1190c615b0" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f1190c63e30" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f1190c63bb0" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../..//tos/interfaces/Random.nc">
      <documentation loc="34:../../../..//tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f1190c5b0e0" loc="52:../../../..//tos/interfaces/Random.nc">
        <documentation loc="48:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f1190c64870" loc="46:../../../..//tos/interfaces/Random.nc">
        <documentation loc="42:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../..//tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1190c6ea40" loc="95:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1190c66270" loc="105:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f1190c552e0" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190c55020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f1190c56710" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f11911cc720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f11911c9090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190c56410" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f1190c54620" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f11911c9b90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f11911c74f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190c54320" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f1190c6b6e0" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f1190c69840" loc="97:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f1190c69070" loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f1190c71e20" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f1190c6de80" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f1190c6a020" loc="76:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f1190c6a840" loc="83:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f1190c6d6c0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../..//tos/interfaces/State.nc">
      <documentation loc="33:../../../..//tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f1190c4fd00" loc="71:../../../..//tos/interfaces/State.nc">
        <documentation loc="68:../../../..//tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f1190c50350" loc="56:../../../..//tos/interfaces/State.nc">
        <documentation loc="53:../../../..//tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f1190c4f530" loc="66:../../../..//tos/interfaces/State.nc">
        <documentation loc="63:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f1190c4f2b0" loc="66:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f1190c50ac0" loc="61:../../../..//tos/interfaces/State.nc">
        <documentation loc="58:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f1190c51020" loc="45:../../../..//tos/interfaces/State.nc">
        <documentation loc="40:../../../..//tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f1190c59c90" loc="45:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f1190c51ad0" loc="51:../../../..//tos/interfaces/State.nc">
        <documentation loc="47:../../../..//tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f1190c51850" loc="51:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f1190bf3870" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f1190bf3290" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f1190bf35e0" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f1190bf51f0" loc="93:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f1190bf6880" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f1190bf6210" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f1190bf65f0" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f1190bfcc10" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1190bfc990" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f1190bf5a70" loc="98:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f1190bf8730" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f1190bf84b0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f1190bfbd30" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1190bfbab0" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f1190bf2ae0" loc="117:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f1190bf79c0" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f1190bf7740" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f1190bf22b0" loc="112:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f1190bfa4d0" loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f1190cba670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f1190cbadd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f1190bfacc0" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f1190bfc1f0" loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f1190bfb390" loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f1190bf7020" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../..//tos/interfaces/Read.nc">
      <documentation loc="33:../../../..//tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f1190bf04b0" loc="49:../../../..//tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1190bf04b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f1190bf0d70" loc="55:../../../..//tos/interfaces/Read.nc">
        <documentation loc="50:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1190bedae0" loc="63:../../../..//tos/interfaces/Read.nc">
        <documentation loc="57:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1190bf04b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1190bed530" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1190bed850" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1190bf04b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1190bc3c10" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f11911db8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1190bc3990" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1190bc2710" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f11911db8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1190bc2490" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../..//tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f1190be3c20" loc="48:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../..//tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f1190cba670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f1190cbadd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../..//tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1190bde020" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1190bde020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1190bde260" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190bde260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1190bdbe00" loc="109:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190bde260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1190bdde40" loc="78:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f1190bdb460" loc="103:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190bde260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190bde260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1190bdce60" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190bde260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f1190bdb1d0" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190bde260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1190bdc640" loc="88:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f1190bd9620" loc="116:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190bde260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1190bdedc0" loc="66:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190bde260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1190bdeb40" loc="66:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190bde260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1190bdd680" loc="73:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../..//tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f1190bcb560" loc="50:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f1190bca4f0" loc="60:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f1190bcbd40" loc="55:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1191191180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f1190bcdcd0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1191191180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f1190bcd6f0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1191191180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1190bcda40" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1191191560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f1190bbee40" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f11911db8b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1190bc8e80" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f11911db8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f1190bc8020" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1190bc8890" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1190bc8be0" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1190bc5610" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f11911db8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f1190bc6770" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1190bc5020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1190bc5370" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../..//tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../..//tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1190bcfc30" loc="68:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1190bcf470" loc="61:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f1190bd0ce0" loc="54:../../../..//tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f1190bd0420" loc="53:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../..//tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1190ab94f0" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1190ab94f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1190ab9730" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190ab9730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1190ab8070" loc="64:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1190ab9730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1190ab7190" loc="76:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1190ab88f0" loc="71:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1190ab78f0" loc="82:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../..//tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f11909ef020" loc="54:../../../..//tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f11909ee1f0" loc="66:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f11909ef9c0" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f11909ef740" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f11909f0770" loc="53:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../..//tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f11909cc020" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f11909caac0" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f11909cd7c0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f11909ca2a0" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f11909ca020" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f11909cd020" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f11909cc820" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f11908b9270" loc="24:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f11908b9ac0" loc="31:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f11908b7350" loc="39:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f1190891b60" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1190891580" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f11908918d0" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f119088cdd0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f119088c490" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f119088c7e0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f119088cb30" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f119088e6b0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f11911db8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f119088e0d0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f119088e420" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f1190893730" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f11911db8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1190893150" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f11908934a0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f119088f2c0" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1190890930" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1190890c80" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f119088f020" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../..//tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1190872df0" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f1190872480" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f1190872810" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1190872b50" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f11908703c0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f119086e6a0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f119086ea30" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f119086ed70" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1190870110" loc="89:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../..//tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f1190876c90" loc="45:../../../..//tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../..//tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f1190876a10" loc="45:../../../..//tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../..//tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f11907926f0" loc="53:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1190790070" loc="61:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f119078a460" loc="39:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f11907c4020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f11907c4440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../..//tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../..//tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f119078e2a0" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f119078e020" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f119078d680" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f119078d400" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f119078eb10" loc="68:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f119078c110" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f119078de20" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../..//tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../..//tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f119077ab70" loc="65:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f119077a350" loc="59:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f11907722a0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1190772020" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f1190773720" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f119074eaf0" loc="213:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f119075a790" loc="143:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f1190766610" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f11907e1080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f11907e18c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1190766390" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f11907e1080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f11907e18c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f119075c870" loc="123:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f1190764a90" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f11907dc080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f11907dc8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1190764810" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f11907dc080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f11907dc8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f1190753e70" loc="180:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f119074f480" loc="197:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f1190764070" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f11907de020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f11907de7b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f11907622b0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f11907dc080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f11907dc8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f119075f020" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f1190760d30" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f1190760610" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f1190753740" loc="179:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f1190765840" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f11907de020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f11907de7b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f11907655c0" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f11907de020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f11907de7b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f1190761420" loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f11907525d0" loc="181:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f1190761e00" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f1190761b80" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f119075d910" loc="113:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f119075c0e0" loc="118:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f1190754840" loc="177:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f1190757790" loc="163:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f119075b7e0" loc="133:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f1190753020" loc="178:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f1190758020" loc="148:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f1190752cf0" loc="182:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f119075f800" loc="103:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f11907e7dd0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f11907e3680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f11907514c0" loc="187:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f119074e350" loc="207:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f1190762c50" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f11907629d0" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f119074d4d0" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f119074d250" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f1190766df0" loc="55:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f11907e1080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f11907e18c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f119075b020" loc="128:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f1190758770" loc="153:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f1190754020" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f11907b3e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f11907b12b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1190756cf0" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f11907b3e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f11907b12b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f11907562a0" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f11907c4020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f11907c4440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1190756020" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f11907c4020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f11907c4440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f119074dd90" loc="231:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f1190751cb0" loc="192:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f119075d070" loc="108:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f119074fbe0" loc="202:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f1190757020" loc="158:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f119075a020" loc="138:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f11906e6600" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f11906be070" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f11906d1b10" loc="31:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f11906c6d50" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f11906c6ad0" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f11906d9270" loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f11906c2350" loc="71:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f11906cbcf0" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f11906d3c50" loc="28:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f11906d09c0" loc="34:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f11906d4c00" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f11906d4980" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f11906d5120" loc="21:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f11906cd790" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f11906c5c80" loc="66:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f11906c08f0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f11906c6390" loc="61:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f11906bbb60" loc="91:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f11906b5270" loc="100:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f11906d80e0" loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f11906cd020" loc="38:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f11906cc910" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f11906d3500" loc="27:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f11906da020" loc="7:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f11906c7ba0" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f11906c7920" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f11906de7e0" loc="6:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f11906c3b80" loc="69:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f11906be7d0" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f11906b8350" loc="94:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f11906b7a90" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f11906c1270" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f11906bd020" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f11906c5520" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f11906bcbb0" loc="87:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f11906d8800" loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f11906c8020" loc="53:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f11906bc020" loc="86:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f11906c0190" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f11906cb520" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f11906cb2a0" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f11906b8af0" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f11906c71f0" loc="57:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f11906c2ac0" loc="72:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f11906daaa0" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f119079eb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f119079d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f11906da820" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f119079eb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f119079d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f11906cf870" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f11906d6980" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f11906d6700" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f11906cc120" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f11906cde70" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f11906bb3b0" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f11906d4270" loc="24:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f11906d6020" loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f11906c89e0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f11906c8760" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f11906d99a0" loc="12:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f11906bd740" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f11906c19e0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f11906c3420" loc="68:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f11906ca740" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f11906ca4c0" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f11906cf120" loc="35:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f11906d13b0" loc="29:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f11906b72b0" loc="96:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f11906d5aa0" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f11906d5820" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f11906b9350" loc="92:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f11906d0270" loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f11906b9b10" loc="93:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../..//tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../..//tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f119061a780" loc="90:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f1190619020" loc="98:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f11905e2900" loc="56:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f11905e0a20" loc="73:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f11905e2070" loc="46:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f11905e01f0" loc="65:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f11905df390" loc="81:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../..//tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f11905d5b50" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f11905deb30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f11905d58d0" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f11905deb30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f11905dab80" loc="53:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f11905d66b0" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f11905deb30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f11905d6430" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f11905deb30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f11905d5020" loc="70:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f11905deb30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../..//tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../..//tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f11903d15e0" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f11903d1360" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f11903beb00" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f11903be1c0" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f11903be530" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f11903be860" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f11903bd880" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f11903bd2c0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f11903bd5f0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f11903a4530" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f11903a4530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f11903a4770" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f11903a4770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f11903a32e0" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../..//tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f11903a4770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f11903a3060" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f11903a4770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f1190340580" loc="43:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f119030e9e0" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f119030e020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f119030e750" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f11903107f0" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f1190310020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1190313d30" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f11903243d0" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190324150" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f11903253d0" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190325150" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1190321350" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f11903210d0" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1190323390" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1190323110" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1191182ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f119117f180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../..//tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f11901ad910" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f11901ad910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f11901aa270" loc="61:../../../..//tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../..//tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1191f82920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f119001a5e0" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f119001a5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f11900172a0" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../..//tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f119001a5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f1190017020" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f119001a5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f118fda5df0" loc="189:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7f118fdae740" loc="84:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f118fdae4c0" loc="84:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7f118fdadc40" loc="106:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f118fdad640" loc="106:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7f118fdad9b0" loc="106:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7f118fda79c0" loc="177:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f118fda8700" loc="177:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f118fda7020" loc="177:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f118fda73a0" loc="177:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f118fda7710" loc="177:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7f118fda2770" loc="227:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f118fda20d0" loc="227:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f118fda2460" loc="227:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7f118fda92d0" loc="138:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f118fdaa020" loc="138:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1191147020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1191148610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f118fdaa8c0" loc="138:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f118fdaac50" loc="138:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f118fda9020" loc="138:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7f118fda4ad0" loc="206:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f118fda4850" loc="206:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7f118fd9f2b0" loc="49:../../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7f118fd9fad0" loc="54:../../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../..//tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f118fd937b0" loc="95:../../../..//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../..//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f118fd92030" loc="105:../../../..//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../..//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1191c68c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7f118fd852d0" loc="63:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911355f0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7f1191134090"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7f118fd823f0" loc="82:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1191147d30"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7f1191146230"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f118fd82170" loc="82:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7f118fd80b10" loc="106:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7f118fd7fd70" loc="118:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1191c71090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7f118fd7f5b0" loc="112:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7f118fd7f330" loc="112:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7f118fd85af0" loc="68:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1191133710"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7f1191131020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7f118fd848d0" loc="75:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1191147d30"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f1191146230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f118fd84280" loc="75:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7f118fd84640" loc="75:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1191147d30"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f1191146230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f118fd7de00" loc="128:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7f118fd86020" loc="51:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911355f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f1191134090"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7f118fd89d60" loc="51:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f11911355f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f1191134090"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7f118fd81020" loc="89:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f118fd82c40" loc="89:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1191f82160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7f118fd81aa0" loc="95:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f118fd81820" loc="95:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7f118fd80350" loc="101:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1191f82520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7f118fd7d570" loc="123:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7f118fd7c5d0" loc="133:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7f118fd86a80" loc="57:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1191133710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f1191131020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7f118fd86800" loc="57:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1191133710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f1191131020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
