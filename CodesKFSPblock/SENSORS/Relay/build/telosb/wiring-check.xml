<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="18:Relay_AppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f102cb5ac40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f102cd36020"/></to>
    </wire>
    <wire loc="72:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f102cd36020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f102cb76590"/></to>
    </wire>
    <wire loc="20:Relay_AppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f102caf48f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f102b827020"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f102b827020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f102b33e420"/></to>
    </wire>
    <wire loc="21:Relay_AppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f102cae2140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f102c698140"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f102c698140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f102c66e880"/></to>
    </wire>
    <wire loc="22:Relay_AppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f102cb4e500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f102c99e380"/></to>
    </wire>
    <wire loc="51:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f102c99e380"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f102c99adc0"/></to>
    </wire>
    <wire loc="23:Relay_AppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7f102cae79e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102b8115a0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f102b8115a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f102ba392c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:Relay_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f102cae1020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f102b827c30"/></to>
    </wire>
    <wire loc="33:Relay_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f102cae1020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f102b81a020"/></to>
    </wire>
    <wire loc="34:Relay_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f102cae1020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f102b815780"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f102b815780"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f102c695630"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f102b81a020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f102c695630"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f102b827c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f102b33d060"/></to>
    </wire>
    <wire loc="31:Relay_AppC.nc">
      <from><interface-ref name="R_A" scoped="" ref="0x7f102caf0220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f102b820910"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f102b820910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f102c6963f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:Relay_AppC.nc">
      <from><interface-ref name="R_B" scoped="" ref="0x7f102caf08e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f102b8151b0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f102b8151b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f102c6963f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cd334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102b90ddd0"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cd334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102b996b70"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cd334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102b9b5750"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cd334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102b9d6080"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cd334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102bb0b130"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cd334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102bc0b620"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cd334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102bcfcc60"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cd334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102c4f27e0"/></to>
    </wire>
    <wire loc="103:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cd334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102b12c140"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cd334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102c1bc020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cd334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102c5a34a0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f102cb76c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f102d1cf3a0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f102d1cf3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f102cd7a140"/></to>
    </wire>
    <wire loc="68:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f102cb696c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102cd35480"/></to>
    </wire>
    <wire loc="48:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f102cd35480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102cd31690"/></to>
    </wire>
    <wire loc="71:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cb69dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cd334d0"/></to>
    </wire>
    <wire loc="49:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f102cd31da0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f102cd2ebe0"/></to>
    </wire>
    <wire loc="46:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f102cd2ebe0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102cd0fb60"/></to>
    </wire>
    <wire loc="50:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f102cd2d4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102cd30a20"/></to>
    </wire>
    <wire loc="56:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f102cd2dbc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102c96f920"/></to>
    </wire>
    <wire loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f102cd0fb60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102ccf6940"/></to>
    </wire>
    <wire loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f102cd052c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f102ccf5020"/></to>
    </wire>
    <wire loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f102ce524c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f102ccf4360"/></to>
    </wire>
    <wire loc="113:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f102ccb15a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f102cbee6d0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f102cc9f020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f102cbe7b30"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f102cca8700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f102cbf4160"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f102cc8ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f102cbcdcb0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f102ccafaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f102cbf5480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f102cc92020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f102cbcd020"/></to>
    </wire>
    <wire loc="170:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f102cc89a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f102cbb6cb0"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f102cc995a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f102cbc7220"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f102ccb2b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f102cc449d0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f102cc8ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f102cbdc2f0"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f102cc943e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f102cbdd610"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f102cc9e5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f102cbde220"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f102cca7700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f102cbec7a0"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f102cc8ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f102cbc52f0"/></to>
    </wire>
    <wire loc="140:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f102cc9dbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f102cbd76d0"/></to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f102ccae890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f102cbedac0"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f102ccc2060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102cc52540"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f102cc92da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f102cbc6610"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f102ccb80c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f102cbf6020"/></to>
    </wire>
    <wire loc="161:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f102cc98a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f102cbbf6d0"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f102cca26d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f102cbfca90"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f102cc8da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f102cbd57a0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f102ccaacf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f102cbfdde0"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f102cc931f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f102cbd6ac0"/></to>
    </wire>
    <wire loc="163:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f102cc8aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f102cbbd7a0"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f102cc9a0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f102cbcfb30"/></to>
    </wire>
    <wire loc="120:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f102cca16c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102cc4a3e0"/></to>
    </wire>
    <wire loc="162:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f102cc91b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f102cbbeac0"/></to>
    </wire>
    <wire loc="128:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f102cc8fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f102cbe5cb0"/></to>
    </wire>
    <wire loc="169:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f102cc90a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f102cbb6020"/></to>
    </wire>
    <wire loc="127:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f102cc95570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f102cbe5020"/></to>
    </wire>
    <wire loc="168:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f102cc96020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f102cbb8b30"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f102cc50450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f102cc51d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f102cc50aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f102cbb0a90"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f102cc4e120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f102cbad260"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f102cbfb930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102cc52540"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f102cbf9020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f102cc51d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f102cbf3020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102cc52540"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f102cbf17a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f102cc51d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f102cbeb610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102cc52540"/></to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f102cbeac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f102cc51d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f102cc482f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f102cc49bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f102cc48940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f102cbad9f0"/></to>
    </wire>
    <wire loc="123:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f102cc47020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f102cbac240"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f102cbe4b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102cc4a3e0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f102cbe12f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f102cc49bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f102cbdb160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102cc4a3e0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f102cbda7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f102cc49bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f102cbd4610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102cc4a3e0"/></to>
    </wire>
    <wire loc="144:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f102cbd3c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f102cc49bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f102cbccb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102cc4a3e0"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f102cbca2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f102cc49bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f102cbc4160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102cc4a3e0"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f102cbc37a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f102cc49bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f102cbbc610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102cc4a3e0"/></to>
    </wire>
    <wire loc="165:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f102cbbbc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f102cc49bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f102cbb5b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102cc4a3e0"/></to>
    </wire>
    <wire loc="172:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f102cbb32f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f102cc49bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102cd78040"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f102cd74490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f102d1663b0"/></to>
    </wire>
    <wire loc="55:RelayC.nc">
      <from><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7f102cacc080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:RelayC.nc">
      <from><interface-ref name="updateSchedule" scoped="" ref="0x7f102cac92a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:RelayC.nc">
      <from><interface-ref name="initializeFlow" scoped="" ref="0x7f102cace100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:RelayC.nc">
      <from><interface-ref name="initializeSchedule" scoped="" ref="0x7f102cacb020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:RelayC.nc">
      <from><interface-ref name="initializeCluster" scoped="" ref="0x7f102cac8300"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:RelayC.nc">
      <from><interface-ref name="PermutateCipher" scoped="" ref="0x7f102caca310"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f102c96f920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102c99a7c0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f102c98f3a0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f102c972060"/></to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f102c972060"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f102c757020"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f102c995660"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f102c971380"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f102c971380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f102c743b90"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f102c98e980"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f102c9706a0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f102c9706a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f102c73e710"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c7462f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f102c9179a0"/></to>
    </wire>
    <wire loc="486:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f102c9179a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7f4d10"/></to>
    </wire>
    <wire loc="62:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c742de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f102c9159a0"/></to>
    </wire>
    <wire loc="487:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f102c9159a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7ef740"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c73d930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f102c9139a0"/></to>
    </wire>
    <wire loc="488:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f102c9139a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7e9100"/></to>
    </wire>
    <wire loc="442:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f102c959810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c88d740"/></to>
    </wire>
    <wire loc="455:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f102c944810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c85d100"/></to>
    </wire>
    <wire loc="531:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f102c8fbca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c84e100"/></to>
    </wire>
    <wire loc="551:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f102c8d6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7c3740"/></to>
    </wire>
    <wire loc="532:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f102c8f8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c84ad10"/></to>
    </wire>
    <wire loc="460:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f102c940810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c853740"/></to>
    </wire>
    <wire loc="473:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f102c92c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c823460"/></to>
    </wire>
    <wire loc="497:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f102c9079a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7cd100"/></to>
    </wire>
    <wire loc="535:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f102c8f2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c840100"/></to>
    </wire>
    <wire loc="545:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f102c8e2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7e0740"/></to>
    </wire>
    <wire loc="557:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f102c8cecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7be100"/></to>
    </wire>
    <wire loc="445:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f102c952810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c87e740"/></to>
    </wire>
    <wire loc="536:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f102c8f0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c83cd10"/></to>
    </wire>
    <wire loc="450:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f102c94e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c875d10"/></to>
    </wire>
    <wire loc="463:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f102c93a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c845740"/></to>
    </wire>
    <wire loc="476:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f102c9259a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c815100"/></to>
    </wire>
    <wire loc="489:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f102c9119a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7e5d10"/></to>
    </wire>
    <wire loc="500:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f102c9019a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7be100"/></to>
    </wire>
    <wire loc="440:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f102c95d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c896100"/></to>
    </wire>
    <wire loc="453:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f102c948810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c867d80"/></to>
    </wire>
    <wire loc="466:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f102c934810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c836740"/></to>
    </wire>
    <wire loc="530:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f102c8fdcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c84e100"/></to>
    </wire>
    <wire loc="548:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f102c8dccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7d2740"/></to>
    </wire>
    <wire loc="555:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f102c8d0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7be100"/></to>
    </wire>
    <wire loc="541:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f102c8e8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7f8100"/></to>
    </wire>
    <wire loc="471:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f102c930810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c82de60"/></to>
    </wire>
    <wire loc="484:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f102c91b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7fd740"/></to>
    </wire>
    <wire loc="495:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f102c90b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7d7d10"/></to>
    </wire>
    <wire loc="549:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f102c8dacb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7cd100"/></to>
    </wire>
    <wire loc="538:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f102c8eecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c806100"/></to>
    </wire>
    <wire loc="443:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f102c956810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c888100"/></to>
    </wire>
    <wire loc="456:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f102c942810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c858d10"/></to>
    </wire>
    <wire loc="493:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f102c90f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7e0740"/></to>
    </wire>
    <wire loc="461:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f102c93e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c84e100"/></to>
    </wire>
    <wire loc="474:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f102c92a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c81fe00"/></to>
    </wire>
    <wire loc="498:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f102c9059a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7c8d10"/></to>
    </wire>
    <wire loc="540:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f102c8eacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7fd740"/></to>
    </wire>
    <wire loc="438:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f102c95f900"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c8c6d10"/></to>
    </wire>
    <wire loc="451:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f102c94c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c870740"/></to>
    </wire>
    <wire loc="464:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f102c938810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c840100"/></to>
    </wire>
    <wire loc="477:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f102c9239a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c810d10"/></to>
    </wire>
    <wire loc="542:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f102c8e6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c836740"/></to>
    </wire>
    <wire loc="546:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f102c8e0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7db100"/></to>
    </wire>
    <wire loc="552:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f102c8d4cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7be100"/></to>
    </wire>
    <wire loc="482:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f102c91f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c806100"/></to>
    </wire>
    <wire loc="543:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f102c8e4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c831100"/></to>
    </wire>
    <wire loc="441:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f102c95b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c892d10"/></to>
    </wire>
    <wire loc="454:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f102c946810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c862740"/></to>
    </wire>
    <wire loc="467:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f102c932810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c831100"/></to>
    </wire>
    <wire loc="539:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f102c8eccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c802d10"/></to>
    </wire>
    <wire loc="550:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f102c8d8cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7c8d10"/></to>
    </wire>
    <wire loc="472:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f102c92e9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c8289f0"/></to>
    </wire>
    <wire loc="485:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f102c9199a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7f8100"/></to>
    </wire>
    <wire loc="496:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f102c9099a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7d2740"/></to>
    </wire>
    <wire loc="444:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f102c954810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c884d10"/></to>
    </wire>
    <wire loc="494:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f102c90d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7db100"/></to>
    </wire>
    <wire loc="449:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f102c950810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c879100"/></to>
    </wire>
    <wire loc="462:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f102c93c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c84ad10"/></to>
    </wire>
    <wire loc="475:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f102c9279a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c81a740"/></to>
    </wire>
    <wire loc="499:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f102c9039a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7c3740"/></to>
    </wire>
    <wire loc="439:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f102c969810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c89b740"/></to>
    </wire>
    <wire loc="452:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f102c94a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c86b100"/></to>
    </wire>
    <wire loc="465:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f102c936810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c83cd10"/></to>
    </wire>
    <wire loc="478:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f102c9219a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c80b740"/></to>
    </wire>
    <wire loc="534:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f102c8f4ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c845740"/></to>
    </wire>
    <wire loc="547:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f102c8decb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7d7d10"/></to>
    </wire>
    <wire loc="533:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f102c8f6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c845740"/></to>
    </wire>
    <wire loc="483:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f102c91d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c802d10"/></to>
    </wire>
    <wire loc="554:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f102c8d2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7c3740"/></to>
    </wire>
    <wire loc="558:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f102c8cccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c7e5d10"/></to>
    </wire>
    <wire loc="529:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f102c8ff9f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f102c853740"/></to>
    </wire>
    <wire loc="63:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f102b33e420"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f102b331390"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f102b33d060"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f102c695630"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f102b8258b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f102b33dc70"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f102b33dc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f102c6932d0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f102b823020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f102b33b2b0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f102b33b2b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f102c692990"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f102c695630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f102c669760"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f102c6932d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f102c66a020"/></to>
    </wire>
    <wire loc="85:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f102c692990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f102c667810"/></to>
    </wire>
    <wire loc="60:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f102b330060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f102c6ee940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f102b330c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f102c6932d0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f102c6ee940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f102c6a24b0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f102c6a1400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f102c6971d0"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f102c6971d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f102c66d980"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f102c69f060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f102c6932d0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f102c69e720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f102c695630"/></to>
    </wire>
    <wire loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f102c69d480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f102c69dc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f102c66e880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f102c647b70"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f102c66d980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f102b8cf020"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f102c695020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f102c66b900"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f102c66b900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f102b8cddf0"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f102c669760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f102b8cba80"/></to>
    </wire>
    <wire loc="89:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f102c68dcd0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f102bb87550"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f102bb87550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f102bb78a80"/></to>
    </wire>
    <wire loc="86:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f102c67cb20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f102c65dbb0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f102c65dbb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f102c639700"/></to>
    </wire>
    <wire loc="81:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f102c6963f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f102c66ccb0"/></to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f102c66ccb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f102b8cd210"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f102c667810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f102c63a670"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f102c66a020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f102b8cc470"/></to>
    </wire>
    <wire loc="90:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f102c687dc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f102bb83660"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f102bb83660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f102bb75af0"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f102c647b70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f102b900b80"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f102c655d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f102b8c98b0"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f102c648d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f102b8cace0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f102c660970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f102c63b670"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f102c63b670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bb8c670"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f102c639700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f102b900080"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f102c63a670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f102bb896e0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f102c653020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f102c6382e0"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f102c6382e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f102b8ec020"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f102c65ca80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f102c639080"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f102c639080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f102bb88a70"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f102b8c00f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102c643210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f102b8c8860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f102c63c170"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f102c63c170"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f102b969c90"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f102b8c7690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f102c63b020"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f102c63b020"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f102b968a50"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f102b8c24d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f102bdb2b30"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f102b8c7ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bb8c670"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bb8c670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bb7ed20"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102b8c6b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bb880c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bb880c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bb79640"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f102b8c5610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f102c5adb80"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f102c5adb80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f102c5a2970"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f102b8c11f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f102c633990"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f102c633990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f102c62d020"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f102b8c0d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f102c99e380"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f102b900b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f102b8fdd90"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f102bb88a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f102bb78020"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f102b8ec020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f102b8e9410"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f102b969c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f102b95ea20"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f102b900080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f102b8f92d0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f102c63ed30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f102b9695e0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f102b9695e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f102b95e370"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f102bb896e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f102bb7bc50"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102c643210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102b96bbe0"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102b96bbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102b9607b0"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f102c63e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f102b96a8e0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f102b96a8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f102b95f4d0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f102c63d420"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f102b967170"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f102b967170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f102b95c020"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f102b968a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f102b95d840"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f102b8fdd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f102c6379f0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f102c6379f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f102c62f690"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f102b9666b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f102b9ba220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f102b9ba220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f102b9b8a20"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f102b9b9020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f102b8ef350"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f102b8ef350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f102b8ecd70"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f102b8ecd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f102b904ce0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f102b904ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f102b8fe860"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f102b8fe860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f102c634600"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f102c634600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f102c62e2e0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f102b966020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f102b901980"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f102b901980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f102b8fd690"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f102b8fd690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f102b99eaa0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f102b99eaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f102b999e30"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f102b99b950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f102c633300"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f102c633300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f102bc0f7c0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f102bc0f7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f102bc09020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102c62de60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102c5bd720"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102c5bd720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102c5a3b10"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f102c6233f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f102c5b8a60"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f102c5b8a60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f102c5a0740"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f102c629020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f102bd0a6c0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f102c629020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f102bc135c0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f102bc135c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f102bc0bca0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f102bd0a6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f102bcfa320"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f102c61ad30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f102bd07020"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f102bd07020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f102bcfabc0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f102c622ae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f102bd07cb0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f102bd07cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f102bcf9970"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f102c615020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bb8c670"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102c60e660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bb880c0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f102c619020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f102b9dba20"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f102b9dba20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f102b9d5a20"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f102c609e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f102b9ddaa0"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f102b9ddaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f102c1c1280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f102c6197f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f102c99e380"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f102c6049e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f102c606a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f102c607a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f102c5ab020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f102c59fb40"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f102c593d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f102c4ef220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f102c4ef220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f102c4e9d20"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f102c590060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f102c3ebe60"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f102c3ebe60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3ddb60"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f102c58f380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f102c3e76a0"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f102c3e76a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3cfd70"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f102c58e6a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f102c3e5ce0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f102c3e5ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3c4710"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f102c58c0e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f102c3aed60"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f102c3aed60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f102c28fa30"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f102c5761d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102be3ee20"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102be3ee20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102c242960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f102c5752b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f102be3b7b0"/></to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f102be3b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f102c5759c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f102be39ae0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f102be39ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f102c577a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f102be3cad0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f102be3cad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f102c577120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f102be38160"/></to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f102be38160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f102c57bb00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f102be2e870"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f102be2e870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f102c5833d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f102be2c880"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f102be2c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f102c583c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f102be2a0a0"/></to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f102be2a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f102c57e5f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f102be35e50"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f102be35e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102c57a020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102be33670"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102be33670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f102c587520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f102be1d500"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f102be1d500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f102c57fa90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f102be1fce0"/></to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f102be1fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f102c57a8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f102be2fe50"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f102be2fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f102c5791c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f102be33e50"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f102be33e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f102c579a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f102be32e50"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f102be32e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f102c574d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102be0ba80"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102be0ba80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102c242960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f102c574020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102bddf9e0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102bddf9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102c242960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f102c584810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f102bdb2b30"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f102c59b020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f102bdb1d30"/></to>
    </wire>
    <wire loc="23:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f102bdb1d30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f102bd96310"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f102c568820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f102c569940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f102c4f27e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102c4e9490"/></to>
    </wire>
    <wire loc="51:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f102c4e9490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102b2b6060"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f102c4e9d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f102b2b68b0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f102b2b6060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102b2ae020"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f102b2b68b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f102b2a9a90"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f102b2ae020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102b293a30"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f102b2a1210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f102b2ae870"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f102b2ae870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f102b292340"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f102b2a5e10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f102c476020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f102c476020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f102c43a0f0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f102b28e4c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f102b298570"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f102b298570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f102c4cb4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102b28da90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102b297c10"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102b297c10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102c4c8280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f102b28cda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f102b295020"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f102b295020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f102c4c7ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f102c4cb4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f102cca16c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102c4c8280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f102cc9f020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f102c4c7ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f102cc95570"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f102c4cb4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f102cca16c0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102c4c8280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f102cc9dbe0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f102c4c7ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f102cc931f0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f102c4cb4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f102cca16c0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102c4c8280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f102cc9a0c0"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f102c4c7ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f102cc92020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f102c4cb4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f102cca16c0"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102c4c8280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f102cc995a0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f102c4c7ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f102cc92da0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f102c4cb4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f102cca16c0"/></to>
    </wire>
    <wire loc="79:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102c4c8280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f102cc98a50"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f102c4c7ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f102cc91b80"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f102c4cb4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f102cca16c0"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102c4c8280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f102cc96020"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f102c4c7ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f102cc90a20"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f102c437540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f102c46c020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f102c46c020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f102c45b0a0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f102c4592c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f102cca16c0"/></to>
    </wire>
    <wire loc="73:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f102c3e9090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3d8710"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f102c3e8390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3d31d0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f102c3eec70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3e2020"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f102c3e69b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3c9b60"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3e02f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f102c959810"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3dcde0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f102c92c9a0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3d7930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f102c95b810"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3d2480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f102c95f900"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3cd020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f102c9239a0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3c8de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f102c92e9a0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3c3930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f102c9259a0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f102c3ae150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f102c3a5a20"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f102c3aca20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f102c280a70"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102c3925d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f102cc9e5a0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f102c3918f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f102cc8ea20"/></to>
    </wire>
    <wire loc="55:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3907a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f102c92e9a0"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f102c28e610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f102c3818a0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f102c3818a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f102c36d8a0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f102c27f610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f102c3838f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f102c3838f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f102c373810"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f102c376a30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f102c362a30"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f102c37d8a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f102c36a8a0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f102c37b8a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f102c3688a0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f102c3878a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f102c36f8a0"/></to>
    </wire>
    <wire loc="80:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f102c3788a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f102c3658a0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f102c3808a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f102c36c8a0"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f102c375a30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f102c361a30"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f102c37a8a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f102c3678a0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f102c3828a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f102c36e8a0"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f102c377a30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f102c363a30"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f102c37f8a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f102c36b8a0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f102c37c8a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f102c3698a0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f102c3888a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f102c3708a0"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f102c3798a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f102c3668a0"/></to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f102be3b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f102be2d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f102be240a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f102be2c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f102be19500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f102be1b500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f102be39490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f102be21880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f102be1c500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f102be27880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f102be280a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102be3da90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102c23f680"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102c23f680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102c239920"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f102be38e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f102be37490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f102be20c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f102be37be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f102be1cce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f102be210a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f102be32670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f102be220a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f102be24880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f102be22880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f102be1ace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f102be1bce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f102be28880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f102be230a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f102be1dce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f102be2a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f102be19ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f102c23e630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f102be3c480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f102be35670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f102be2f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f102be260a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f102be26880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f102be2d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f102be362f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f102be35020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f102be387b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f102be1f500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f102be1a500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f102be270a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f102be23880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f102be3be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f102be290a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f102be36940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f102be29880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f102be200a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f102be189b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f102c23e630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f102c23e630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f102c235bb0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c232020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c232db0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102c242960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102c236810"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c231ba0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f102c22d020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f102c1c5770"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f102c1c5770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f102c1c1280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f102c230400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102c1a4c40"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102c1a4c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102b1b2c30"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f102c22e080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f102c1a38f0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f102c1a38f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f102b1af0c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f102c224680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f102be66020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f102be66020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f102b1ae2b0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f102c22ddf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f102c99e380"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f102c220120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f102c1c1280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f102c1bcb70"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f102b1ae2b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f102c13a510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f102b1af0c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f102c13edd0"/></to>
    </wire>
    <wire loc="105:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102b1b2c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102c144a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f102b1b08f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f102b1a62c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f102b1a62c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f102bfc78a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f102c13edd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f102c0c1440"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f102b1af6d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f102c13d480"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f102c13d480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f102c0c1a50"/></to>
    </wire>
    <wire loc="111:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f102c138600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f102b1aea50"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102b196760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102c13e5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f102c139370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102b1a7640"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102b1a7640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102bfc85c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f102c1336a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f102b19ec10"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f102b19ec10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f102bfcca80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102c13e5e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102c0c3c40"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f102c13a510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f102c0c0700"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102c144a20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102c0c4e80"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f102c0bfe00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f102c138600"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f102c0bf060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f102c139370"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f102c0bade0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f102c1336a0"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f102c0be490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f102c0b2860"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f102c0b2860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f102c0a5020"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f102c0b95a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f102c99e380"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f102c0b8c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f102c0a88a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f102c0a0750"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f102c0ab3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f102c0a1dc0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f102c072700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f102c8fdcc0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f102c070670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f102c8f8cc0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f102c06e670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f102c8f6cc0"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f102c06c670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f102c8f0cc0"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f102c06a670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f102c8f2cc0"/></to>
    </wire>
    <wire loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f102c0775b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f102bf20430"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f102b19d440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f102bfc99a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f102b19da50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f102bf2c880"/></to>
    </wire>
    <wire loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f102bf2c880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f102bf20430"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f102b1a52b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f102c0b2860"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f102b1a6a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f102bfc5130"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f102bfc5130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f102bf34060"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102bfc4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102b196760"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f102bfc78a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f102bf36bf0"/></to>
    </wire>
    <wire loc="106:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f102bf36bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f102b128850"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f102bfcca80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f102bfc25c0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102bfc85c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102bf37e60"/></to>
    </wire>
    <wire loc="105:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102bf37e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102b129970"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f102bfc99a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f102bfb1020"/></to>
    </wire>
    <wire loc="108:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f102bf34060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f102b127c30"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102bf34930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102bfc4020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f102bfaf4b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f102bf34060"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f102bfb1690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f102c0ab3b0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f102bfb1e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f102c0a88a0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f102bf35400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f102b127020"/></to>
    </wire>
    <wire loc="109:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102b126590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102bf34930"/></to>
    </wire>
    <wire loc="111:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f102b126d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f102b12c750"/></to>
    </wire>
    <wire loc="75:../../../..//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f102b123020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f102bf19250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f102c0a5020"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f102bf15d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f102c8fdcc0"/></to>
    </wire>
    <wire loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f102bf13cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f102c8f6cc0"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f102bdfec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f102be09da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f102be02b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f102bdfc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f102bdf5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f102bdfce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f102bde82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f102bdeb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f102be07120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f102bdf0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f102bdec2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f102be01c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f102be00c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f102bdf6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f102bdf9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f102bdfb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102be0a760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102c23f680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f102be06aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f102be04120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f102bdefa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f102be04870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f102bdecad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f102be07dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f102bdf2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f102be00480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102be01480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f102be09750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f102bdf3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f102bdf4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f102bdf2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f102bde9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f102bdebad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f102bdf7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f102bdf4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f102bdedad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f102bdfa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f102bde8ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f102c23e630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f102be09100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f102be02370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f102bdfe480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f102bdf6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f102bdfbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f102bdf5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f102bdfd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f102be08450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f102bdfde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f102be03020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f102be03cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f102bded2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f102bdeead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f102be06450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f102bdee2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f102bde92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f102bdf7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f102bdf3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f102be08aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f102be07770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f102bdfae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f102be03670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f102bdf9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f102bdf0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f102bde77a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f102c23e630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f102bdd2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f102bdddda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f102bdd5b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f102bdd0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f102bdc9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f102bdd0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f102bdbc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f102bdbe2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f102bdda120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f102bdc4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f102bdbf2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f102bdd4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f102bdd3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f102bdca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f102bdcce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f102bdce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102bdde760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102c23f680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f102bdd9aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f102bdd8120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f102bdc3a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f102bdd8870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f102bdbfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f102bddadc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f102bdc5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f102bdd3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102bdd4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f102bddd750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f102bdc6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f102bdc7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f102bdc5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f102bdbdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f102bdbead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f102bdcb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f102bdc7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f102bdc0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f102bdcd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f102bdbcad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f102c23e630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f102bddd100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f102bdd5370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f102bdd2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f102bdcae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f102bdcee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f102bdc9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f102bdd1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f102bddb450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f102bdd1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f102bdd7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f102bdd7cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f102bdc02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f102bdc2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f102bdd9450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f102bdc22f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f102bdbd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f102bdcbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f102bdc6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f102bddbaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f102bdda770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f102bdcde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f102bdd7670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f102bdcc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f102bdc4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f102bdbb7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f102c23e630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f102bd93880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f102bd88020"/></to>
    </wire>
    <wire loc="20:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f102bd88020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f102bd83140"/></to>
    </wire>
    <wire loc="16:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f102bd7ebd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f102bd87c50"/></to>
    </wire>
    <wire loc="21:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f102bd87c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f102bd6a150"/></to>
    </wire>
    <wire loc="17:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f102bd82530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f102bd20a20"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f102bd6e540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f102bd22590"/></to>
    </wire>
    <wire loc="11:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f102bd22590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f102bd1e9e0"/></to>
    </wire>
    <wire loc="18:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f102bd65950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f102bd6cca0"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f102bd6cca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f102bd42a90"/></to>
    </wire>
    <wire loc="19:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f102bd6a9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f102bd6e540"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f102bd32020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f102bd2c530"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f102bd2c530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f102bd28e50"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f102bd25020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f102ccc2060"/></to>
    </wire>
    <wire loc="9:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102bd1dc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f102c948810"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f102bd03990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f102bcf8900"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f102bd05150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f102bcf70f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f102bcf7ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f102c4ef220"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f102bce9500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f102c3eec70"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f102bce3820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f102c3ebe60"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f102bce1b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f102c3e69b0"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f102bcec880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f102c3ae150"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f102bcdf020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102bc44c30"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102bc44c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102c242960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102bcdfd10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102bc438f0"/></to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102bc438f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102c23f680"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f102bcdc6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f102bc422f0"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f102bc422f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f102bcdcde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f102bc41cc0"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f102bc41cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f102bcdb530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f102bc3f370"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f102bc3f370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f102bcdbc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f102bc3ed00"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f102bc3ed00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f102bcdde00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f102bc38c60"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f102bc38c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f102bcde780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f102bc207a0"/></to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f102bc207a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f102c23e630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f102bcdd550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f102bc242f0"/></to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f102bc242f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102bcda3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102bc39480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102bc39480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f102bcd95e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f102bc36e50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f102bc36e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f102bcd8020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f102bc35670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f102bc35670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f102bcdae80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f102bc3c7b0"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f102bc3c7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f102bcd79c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f102bc22ad0"/></to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f102bc22ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f102bcd8890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f102bc232f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f102bc232f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f102bcd7130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f102bc23ad0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f102bc23ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f102bcd1d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f102bc13df0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f102bc13df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f102bc0a550"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bcf3d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bb8c670"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bcf2bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bb880c0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f102bcf1950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f102bb87550"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f102bce4be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f102bb7f480"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f102bb7f480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f102bb718b0"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f102bcd46c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f102c99e380"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f102bc37c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f102bc41020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f102bc3ac70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f102bc2ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f102bc35e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f102bc212f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f102bc29670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f102bc39c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f102bc2f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f102bc31e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f102bc33670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f102bc3d370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f102bc28a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f102bc3dac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f102bc24ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f102bc3e060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f102bc2ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f102bc38480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f102bc42940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f102bc2be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f102bc2c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f102bc2a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f102bc30670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f102bc2ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f102bc25ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f102bc32670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f102bc21ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f102c23e630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f102bc3a490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f102bc37480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f102bc2fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f102bc33e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f102bc2e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f102bc36670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f102bc41670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f102bc3c160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f102bc3ce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f102bc252f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f102bc27ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f102bc3e6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f102bc272f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f102bc222f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f102bc30e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f102bc2b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f102bc3f9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f102bc32e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f102bc31670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f102bc29e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f102bc0e020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f102bc097c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f102bbf4150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f102c99e380"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f102bc08020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f102c3ebe60"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f102bc07380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f102c3e9090"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f102bc066b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f102c3e8390"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f102bc05a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f102c3aca20"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f102bc046e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102ba29d00"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f102ba29d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f102c242960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f102bc03530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f102ba06ad0"/></to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f102ba06ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f102c23e630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f102bc02ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f102ba246b0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f102ba246b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f102bc023a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f102ba22370"/></to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f102ba22370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bc01330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bb8c670"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bc001e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bb880c0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f102bbfdd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f102bb87550"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f102bc00b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f102c5adb80"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f102bbf83e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f102ba1be50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f102ba1be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f102bbf8cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f102ba1a670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f102ba1a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f102bbfab10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f102ba21160"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f102ba21160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f102bbf66d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f102ba062f0"/></to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f102ba062f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f102bbf7590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f102ba092f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f102ba092f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f102bbf7e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f102ba09ad0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f102ba09ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f102bbf5020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f102ba0aad0"/></to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f102ba0aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f102bbf58b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f102ba27300"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f102ba27300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f102bbe89d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f102bb117c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f102c476020"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f102bb6b820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f102bb1a4e0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f102bb6db80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f102bb05610"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f102bb05610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f102ba4c2b0"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f102bb0a020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102ba5a150"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f102bb0b130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102bad6020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f102bad6020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102affc9d0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f102ba54640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f102baa92f0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f102baa4850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f102bad6870"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f102bad6870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f102aff55f0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f102ba4b690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f102baf5b70"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f102baf5b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f102baed610"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f102affc9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102afdf360"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f102afefd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f102affb260"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f102affb260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f102afdfbf0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f102aff19b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f102baf5b70"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f102afdcdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f102afe5020"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f102afe5020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f102c4cb4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102afd9440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102afe3760"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102afe3760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102c4c8280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f102afd8760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f102afe2a80"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f102afe2a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f102c4c7ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f102baeab90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f102c46c020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f102baa19c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f102ba4fa00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f102ba428c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f102ba392c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f102ba392c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f102bb0a020"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f102ba1cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f102ba26020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f102ba20c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f102ba13e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f102ba1ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f102ba25370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f102ba0e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f102ba0a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f102ba1fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f102ba1ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f102ba14670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f102ba17e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f102ba19670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102ba28970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102c23f680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f102ba24d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f102ba0da70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f102ba22ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f102ba24060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f102ba0fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f102ba1e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102ba1f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f102ba27950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f102ba11e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f102ba12670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f102ba0f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f102ba07ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f102ba15670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f102ba12e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f102ba0bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f102ba18670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f102ba20490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f102ba1c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f102ba14e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f102ba19e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f102ba13670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f102ba1b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f102ba26670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f102ba21e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f102ba0b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f102ba0cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f102ba0c2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f102ba072f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f102ba15e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f102ba11670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f102ba26cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f102ba259c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f102ba18e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f102ba217b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f102ba17670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f102ba0ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f102ba057a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f102c23e630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f102b9d9920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f102b9d6940"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f102b9df9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f102b9d6080"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f102b9b5e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f102b9b9020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f102b9b4ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f102b9b6690"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f102b9b6690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f102c1c1280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f102b9b38f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f102b9dba20"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102b9b2170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bb880c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f102b99b200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f102b996570"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f102b9953f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f102b99b950"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102b995a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bb880c0"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f102b95cd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f102b9666b0"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f102b95bb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f102b966020"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f102b95a2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bb8c670"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102b959170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bb880c0"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f102b959b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f102b90c410"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f102b92ddb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f102b8ff800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f102b8fb580"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f102b8fb580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f102c1c1280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f102b8e61c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f102c63a670"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f102b81ac30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f102c6932d0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f102b814400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f102c6932d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../..//tos/system/MainC.nc">
      <documentation loc="45:../../../..//tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../..//tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../..//tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../..//tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../..//tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../..//tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../..//tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../..//tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../..//tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../..//tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="RelayC" loc="4:RelayC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../..//tos/system/LedsC.nc">
      <documentation loc="34:../../../..//tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../..//tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../..//tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Relay_AppC.AMSenderC" loc="47(Relay_AppC.AMSenderC):../../../..//tos/system/AMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Relay_AppC.AMSenderC.SenderC" loc="47(Relay_AppC.AMSenderC.SenderC):../../../..//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Relay_AppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(Relay_AppC.AMSenderC.SenderC.AMQueueEntryP):../../../..//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../..//tos/system/AMQueueP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../..//tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../..//tos/system/StateImplC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../..//tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../..//tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../..//tos/system/ArbiterP.nc">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../..//tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../..//tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../..//tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../..//tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5dd70"/>
            <typename><typedef-ref name="TMicro" ref="0x7f102cb5c180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5dd70"/>
            <typename><typedef-ref name="TMicro" ref="0x7f102cb5c180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../..//tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../..//tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../..//tos/system/RandomC.nc">
      <documentation loc="33:../../../..//tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../..//tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../..//tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Relay_AppC.R_A" loc="43(Relay_AppC.R_A):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Relay_AppC.R_B" loc="43(Relay_AppC.R_B):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Relay_AppC.Timer1" loc="44(Relay_AppC.Timer1):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f102cc84890" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f102cc84c30" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f102cc83020" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f102cc833a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f102cc83720" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f102cc83a90" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f102cc83e20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f102cc81200" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f102cc815d0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f102cc46e70" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f102cc43270" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f102c8c5190" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f102c8c5540" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f102c8c58f0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f102c8c5ca0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f102c8c4060" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../..//tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f102c730da0" loc="47:../../../..//tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../..//tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f102c71ce20" loc="47:../../../..//tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../..//tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f102c70dac0" loc="43:../../../..//tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../..//tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f102c6eac80" loc="45:../../../..//tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f102c4ab9d0" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f102c4ab9d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f102c467120" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f102c467120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../..//tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f102c456a50" loc="55:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f102c456a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f102c453290" loc="56:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f102c453290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f102c453680" loc="57:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f102c453680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f102c453e60" loc="58:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f102c453e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f102c451260" loc="59:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f102c451a60" loc="60:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f102c451a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../..//tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f102c477a20" loc="52:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f102c477a20"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f102c430290" loc="53:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f102c430290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f102c430680" loc="54:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f102c430680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f102c430e60" loc="55:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f102c430e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f102c42e260" loc="56:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../..//tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../..//tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f102bfaa020" loc="89:../../../..//tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f102bf9d0d0" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../..//tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f102bf82800" loc="52:../../../..//tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f102bd40020" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f102bd40020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f102bd407b0" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102bd407b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f102bb1ca60" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f102bb1ca60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f102bad1cc0" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f102bad1cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f102ba9b230" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f102ba9b230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f102ba9b560" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../..//tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../..//tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f102b81f390" loc="43:../../../..//tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f102cd334d0" loc="58:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cd334d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102cd33850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f102cd36020" loc="57:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f102cd36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f102cd363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102cd35480" loc="42:../../../..//tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102cd35480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102cd35800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f102cd2d4e0" loc="6:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f102cd2d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102cd2d860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102cd31690" loc="4:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102cd31690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102cd31a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f102cd31da0" loc="5:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f102cd31da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102cd2d180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f102cd2dbc0" loc="7:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f102cd2dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102cd2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102cd30a20" loc="2:../../../..//tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102cd30a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102cd30da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f102cd2ebe0" loc="39:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f102cd2ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102cd0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f102cd052c0" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f102cd052c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f102cd0b1b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f102cd057d0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f102cd05960"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f102cd05af0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f102cd05640"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f102cd05c80"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f102cd05e10"/>
        <function-ref name="initClocks" scoped="" ref="0x7f102cd0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102cd0fb60" loc="39:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102cd0fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102cd0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f102ccf5020" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f102ccf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f102ccf4020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f102ccf5530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f102ccf56c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f102ccf5850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f102ccf53a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f102ccf59e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f102ccf5b70"/>
        <function-ref name="initClocks" scoped="" ref="0x7f102ccf5d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f102ccf4360" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f102ccf4360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f102ccf46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102ccf6940" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102ccf6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102ccf6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f102ccb15a0" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f102ccb15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102ccb1920"/>
        <function-ref name="getControl" scoped="" ref="0x7f102ccb1ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102ccb1c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102ccb1dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102ccb0020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102ccb01b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102ccb0340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102ccb04d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f102ccb0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f102cc9f020" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f102cc9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cc9f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cc9f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cc9f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cc9f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cc9f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cc9fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cc9fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cc9e020"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cc9e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f102cca8700" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f102cca8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cca8a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cca8c10"/>
        <function-ref name="captured" scoped="" ref="0x7f102cca8da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cca7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cca71b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cca7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f102cc8ca20" loc="68:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f102cc8ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc8cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cc8b020"/>
        <function-ref name="captured" scoped="" ref="0x7f102cc8b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cc8b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cc8b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cc8b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f102ccafaa0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f102ccafaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102ccafe20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102ccae020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102ccae1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102ccae340"/>
        <function-ref name="fired" scoped="" ref="0x7f102ccae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f102cc92020" loc="61:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f102cc92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc923a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cc92530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cc926c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cc92850"/>
        <function-ref name="fired" scoped="" ref="0x7f102cc929e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f102cc89a20" loc="71:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f102cc89a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc89da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cc88020"/>
        <function-ref name="captured" scoped="" ref="0x7f102cc881b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cc88340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cc884d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cc88660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f102cc995a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f102cc995a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cc99920"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cc99ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cc99c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cc99dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cc98020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cc981b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cc98340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cc984d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cc98660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f102ccb2b10" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f102ccb2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102ccb9020"/>
        <function-ref name="getControl" scoped="" ref="0x7f102ccb91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102ccb9340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102ccb94d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102ccb9660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102ccb97f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102ccb9980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102ccb9b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f102ccb9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f102cc8ea20" loc="66:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f102cc8ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc8eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cc8d020"/>
        <function-ref name="captured" scoped="" ref="0x7f102cc8d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cc8d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cc8d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cc8d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f102cc943e0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f102cc943e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc94760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cc948f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cc94a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cc94c10"/>
        <function-ref name="fired" scoped="" ref="0x7f102cc94da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f102cc9e5a0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f102cc9e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cc9ea20"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cc9ebb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cc9ed40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cc9d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cc9d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cc9d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cc9d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cc9d660"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cc9d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f102cca7700" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f102cca7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cca7a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cca7c10"/>
        <function-ref name="captured" scoped="" ref="0x7f102cca7da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cca1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cca11b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cca1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f102cc8ba20" loc="69:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f102cc8ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc8bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cc8a020"/>
        <function-ref name="captured" scoped="" ref="0x7f102cc8a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cc8a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cc8a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cc8a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f102cc9dbe0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f102cc9dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cc9b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cc9b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cc9b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cc9b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cc9b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cc9b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cc9b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cc9bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cc9bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f102ccae890" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f102ccae890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102ccaec10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102ccaeda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cca9020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cca91b0"/>
        <function-ref name="fired" scoped="" ref="0x7f102cca9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f102ccc2060" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f102ccc2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102ccc23e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102ccc2570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102ccc2700"/>
        <function-ref name="get" scoped="" ref="0x7f102ccc2890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102ccc2a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102ccc2bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102ccc2d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102ccc1020"/>
        <function-ref name="overflow" scoped="" ref="0x7f102ccc11b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f102ccc1340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102ccc14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f102cc92da0" loc="62:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f102cc92da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc91180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cc91310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cc914a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cc91630"/>
        <function-ref name="fired" scoped="" ref="0x7f102cc917c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f102ccb80c0" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f102ccb80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102ccb8440"/>
        <function-ref name="getControl" scoped="" ref="0x7f102ccb85d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102ccb8760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102ccb88f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102ccb8a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102ccb8c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102ccb8da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102ccb1020"/>
        <function-ref name="setControl" scoped="" ref="0x7f102ccb11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f102cc98a50" loc="56:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f102cc98a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cc98dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cc97020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cc971b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cc97340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cc974d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cc97660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cc977f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cc97980"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cc97b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f102cca26d0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f102cca26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cca2a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cca2be0"/>
        <function-ref name="captured" scoped="" ref="0x7f102cca2d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cca8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cca81b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cca8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f102cc8da20" loc="67:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f102cc8da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc8dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cc8c020"/>
        <function-ref name="captured" scoped="" ref="0x7f102cc8c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cc8c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cc8c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cc8c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f102ccaacf0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f102ccaacf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102ccaf0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102ccaf230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102ccaf3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102ccaf550"/>
        <function-ref name="fired" scoped="" ref="0x7f102ccaf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f102cc931f0" loc="60:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f102cc931f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc93570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cc93700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cc93890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cc93a20"/>
        <function-ref name="fired" scoped="" ref="0x7f102cc93bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f102cc8aa20" loc="70:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f102cc8aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc8ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cc89020"/>
        <function-ref name="captured" scoped="" ref="0x7f102cc891b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cc89340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cc894d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cc89660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f102cc9a0c0" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f102cc9a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cc9a440"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cc9a5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cc9a760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cc9a8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cc9aa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cc9ac10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cc9ada0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cc99020"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cc991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f102cca16c0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f102cca16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cca1a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102cca1bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cca1d60"/>
        <function-ref name="get" scoped="" ref="0x7f102cca0020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cca01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cca0340"/>
        <function-ref name="getMode" scoped="" ref="0x7f102cca04d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cca0660"/>
        <function-ref name="overflow" scoped="" ref="0x7f102cca07f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f102cca0980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102cca0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f102cc91b80" loc="63:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f102cc91b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc90020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cc901b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cc90340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cc904d0"/>
        <function-ref name="fired" scoped="" ref="0x7f102cc90660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f102cc8fa20" loc="65:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f102cc8fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc8fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cc8e020"/>
        <function-ref name="captured" scoped="" ref="0x7f102cc8e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cc8e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cc8e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cc8e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f102cc90a20" loc="64:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f102cc90a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc8f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cc8f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cc8f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cc8f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f102cc8f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f102cc95570" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f102cc95570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cc958f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cc95a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cc95c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cc95da0"/>
        <function-ref name="fired" scoped="" ref="0x7f102cc94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f102cc96020" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f102cc96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cc963a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cc96530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cc966c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cc96850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cc969e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cc96b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cc96d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cc95020"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cc951b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f102cc50aa0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f102cc50aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cc50e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f102cc50450" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f102cc50450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cc507d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f102cc4e120" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f102cc4e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cc4e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f102cc51d80" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f102cc51d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cc50180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f102cc52540" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102cc52540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cc528c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102cc52a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cc52be0"/>
        <function-ref name="get" scoped="" ref="0x7f102cc52d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cc51020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cc511b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102cc51340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cc514d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102cc51660"/>
        <function-ref name="setMode" scoped="" ref="0x7f102cc517f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102cc51980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f102cc48940" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f102cc48940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cc48cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f102cc482f0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f102cc482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cc48670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f102cc47020" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f102cc47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cc473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f102cc49bf0" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f102cc49bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cc48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f102cc4a3e0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102cc4a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cc4a760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102cc4a8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cc4aa80"/>
        <function-ref name="get" scoped="" ref="0x7f102cc4ac10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cc4ada0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cc49020"/>
        <function-ref name="getMode" scoped="" ref="0x7f102cc491b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cc49340"/>
        <function-ref name="overflow" scoped="" ref="0x7f102cc494d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f102cc49660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102cc497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f102cbfca90" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f102cbfca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbfce10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cbfb020"/>
        <function-ref name="captured" scoped="" ref="0x7f102cbfb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbfb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbfb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cbfb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f102cc449d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f102cc449d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cc44d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cbfd020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbfd1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cbfd340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cbfd4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbfd660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cbfd7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cbfd980"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cbfdb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f102cbf9020" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f102cbf9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbf93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f102cbfdde0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f102cbfdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbfc180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cbfc310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cbfc4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cbfc630"/>
        <function-ref name="fired" scoped="" ref="0x7f102cbfc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f102cbfb930" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102cbfb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cbfbcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102cbfbe40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbfa020"/>
        <function-ref name="get" scoped="" ref="0x7f102cbfa1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbfa340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbfa4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102cbfa660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbfa7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102cbfa980"/>
        <function-ref name="setMode" scoped="" ref="0x7f102cbfab10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102cbfaca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f102cbf4160" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f102cbf4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbf44e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cbf4670"/>
        <function-ref name="captured" scoped="" ref="0x7f102cbf4800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbf4990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbf4b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cbf4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f102cbf6020" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f102cbf6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cbf63a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cbf6530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbf66c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cbf6850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cbf69e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbf6b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cbf6d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cbf5020"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cbf51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f102cbf17a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f102cbf17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbf1b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f102cbf5480" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f102cbf5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbf5800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cbf5990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cbf5b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cbf5cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f102cbf5e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f102cbf3020" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102cbf3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cbf33a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102cbf3530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbf36c0"/>
        <function-ref name="get" scoped="" ref="0x7f102cbf3850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbf39e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbf3b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f102cbf3d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbf1020"/>
        <function-ref name="overflow" scoped="" ref="0x7f102cbf11b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f102cbf1340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102cbf14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f102cbec7a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f102cbec7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbecb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cbeccb0"/>
        <function-ref name="captured" scoped="" ref="0x7f102cbece40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbeb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbeb1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cbeb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f102cbee6d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f102cbee6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cbeea50"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cbeebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbeed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cbed020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cbed1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbed340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cbed4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cbed660"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cbed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f102cbeac50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f102cbeac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbe9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f102cbedac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f102cbedac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbede40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cbec020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cbec1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cbec340"/>
        <function-ref name="fired" scoped="" ref="0x7f102cbec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f102cbeb610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102cbeb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cbeb990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102cbebb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbebcb0"/>
        <function-ref name="get" scoped="" ref="0x7f102cbebe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbea020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbea1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102cbea340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbea4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102cbea660"/>
        <function-ref name="setMode" scoped="" ref="0x7f102cbea7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102cbea980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f102cbe5cb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f102cbe5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbe40a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cbe4230"/>
        <function-ref name="captured" scoped="" ref="0x7f102cbe43c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbe4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbe46e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cbe4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f102cbe7b30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f102cbe7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cbe6020"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cbe61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbe6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cbe64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cbe6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbe67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cbe6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cbe6b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cbe6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f102cbe12f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f102cbe12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbe1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f102cbe5020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f102cbe5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbe53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cbe5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cbe56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cbe5850"/>
        <function-ref name="fired" scoped="" ref="0x7f102cbe59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f102cbe4b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102cbe4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cbe2020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102cbe21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbe2340"/>
        <function-ref name="get" scoped="" ref="0x7f102cbe24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbe2660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbe27f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102cbe2980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbe2b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f102cbe2ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f102cbe2e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102cbe1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f102cbdc2f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f102cbdc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbdc670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cbdc800"/>
        <function-ref name="captured" scoped="" ref="0x7f102cbdc990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbdcb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbdccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cbdce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f102cbde220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f102cbde220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cbde5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cbde730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbde8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cbdea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cbdebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbded70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cbdd020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cbdd1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cbdd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f102cbda7a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f102cbda7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbdab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f102cbdd610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f102cbdd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbdd990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cbddb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cbddcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cbdde40"/>
        <function-ref name="fired" scoped="" ref="0x7f102cbdc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f102cbdb160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102cbdb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cbdb4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102cbdb670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbdb800"/>
        <function-ref name="get" scoped="" ref="0x7f102cbdb990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbdbb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbdbcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102cbdbe40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbda020"/>
        <function-ref name="overflow" scoped="" ref="0x7f102cbda1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f102cbda340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102cbda4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f102cbd57a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f102cbd57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbd5b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cbd5cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f102cbd5e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbd4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbd41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cbd4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f102cbd76d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f102cbd76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cbd7a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cbd7be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbd7d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cbd6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cbd61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbd6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cbd64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cbd6660"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cbd67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f102cbd3c50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f102cbd3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f102cbd6ac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f102cbd6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbd6e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cbd5020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cbd51b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cbd5340"/>
        <function-ref name="fired" scoped="" ref="0x7f102cbd54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f102cbd4610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102cbd4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cbd4990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102cbd4b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbd4cb0"/>
        <function-ref name="get" scoped="" ref="0x7f102cbd4e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbd3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbd31b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102cbd3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbd34d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102cbd3660"/>
        <function-ref name="setMode" scoped="" ref="0x7f102cbd37f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102cbd3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f102cbcdcb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f102cbcdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbcc0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cbcc230"/>
        <function-ref name="captured" scoped="" ref="0x7f102cbcc3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbcc550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbcc6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cbcc870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f102cbcfb30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f102cbcfb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cbce020"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cbce1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbce340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cbce4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cbce660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbce7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cbce980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cbceb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cbceca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f102cbca2f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f102cbca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbca670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f102cbcd020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f102cbcd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbcd3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cbcd530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cbcd6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cbcd850"/>
        <function-ref name="fired" scoped="" ref="0x7f102cbcd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f102cbccb40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102cbccb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cbcb020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102cbcb1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbcb340"/>
        <function-ref name="get" scoped="" ref="0x7f102cbcb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbcb660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbcb7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102cbcb980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbcbb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f102cbcbca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f102cbcbe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102cbca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f102cbc52f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f102cbc52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbc5670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cbc5800"/>
        <function-ref name="captured" scoped="" ref="0x7f102cbc5990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbc5b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbc5cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cbc5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f102cbc7220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f102cbc7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cbc75a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cbc7730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbc78c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cbc7a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cbc7be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbc7d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cbc6020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cbc61b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cbc6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f102cbc37a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f102cbc37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbc3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f102cbc6610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f102cbc6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbc6990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cbc6b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cbc6cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cbc6e40"/>
        <function-ref name="fired" scoped="" ref="0x7f102cbc5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f102cbc4160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102cbc4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cbc44e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102cbc4670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbc4800"/>
        <function-ref name="get" scoped="" ref="0x7f102cbc4990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbc4b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbc4cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102cbc4e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbc3020"/>
        <function-ref name="overflow" scoped="" ref="0x7f102cbc31b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f102cbc3340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102cbc34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f102cbbd7a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f102cbbd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbbdb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cbbdcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f102cbbde40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbbc020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbbc1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cbbc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f102cbbf6d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f102cbbf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cbbfa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cbbfbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbbfd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cbbe020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cbbe1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbbe340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cbbe4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cbbe660"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cbbe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f102cbbbc50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f102cbbbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f102cbbeac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f102cbbeac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbbee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cbbd020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cbbd1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cbbd340"/>
        <function-ref name="fired" scoped="" ref="0x7f102cbbd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f102cbbc610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102cbbc610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cbbc990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102cbbcb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbbccb0"/>
        <function-ref name="get" scoped="" ref="0x7f102cbbce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbbb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbbb1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102cbbb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbbb4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102cbbb660"/>
        <function-ref name="setMode" scoped="" ref="0x7f102cbbb7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102cbbb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f102cbb6cb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f102cbb6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbb50a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102cbb5230"/>
        <function-ref name="captured" scoped="" ref="0x7f102cbb53c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbb5550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbb56e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102cbb5870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f102cbb8b30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f102cbb8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102cbb7020"/>
        <function-ref name="getControl" scoped="" ref="0x7f102cbb71b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbb7340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102cbb74d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102cbb7660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbb77f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102cbb7980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102cbb7b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f102cbb7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f102cbb32f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f102cbb32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbb3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f102cbb6020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f102cbb6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102cbb63a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102cbb6530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102cbb66c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102cbb6850"/>
        <function-ref name="fired" scoped="" ref="0x7f102cbb69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f102cbb5b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102cbb5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cbb4020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102cbb41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102cbb4340"/>
        <function-ref name="get" scoped="" ref="0x7f102cbb44d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102cbb4660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102cbb47f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102cbb4980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102cbb4b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f102cbb4ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f102cbb4e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102cbb3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f102cbac240" loc="7:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f102cbac240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbac5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f102cbb0a90" loc="4:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f102cbb0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbb0e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f102cbad260" loc="5:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f102cbad260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbad5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f102cbad9f0" loc="6:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f102cbad9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102cbadd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f102ce524c0" loc="55:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f102ce524c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f102ce52840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f102d1663b0" loc="51:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f102d1663b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f102d166730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f102d1668c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f102d166a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f102cf8ebc0" loc="52:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f102cf8ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f102d0ca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f102cd0db40" loc="39:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f102cd0db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f102cb75b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f102cb751b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f102cb75340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f102cb754d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f102cb75020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f102cb75660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f102cb757f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f102cb75980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f102cb69dc0" loc="60:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f102cb69dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102cb68180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f102cb76590" loc="57:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f102cb76590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f102cb76910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f102cb696c0" loc="59:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f102cb696c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102cb69a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f102cb76c00" loc="58:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f102cb76c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102cb69020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f102cb691b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f102cb69340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f102d658410" loc="48:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f102d658410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102d658790"/>
        <function-ref name="runTask" scoped="" ref="0x7f102d658920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f102d1cf3a0" loc="47:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f102d1cf3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102d1cf720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f102d1cf8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f102d1cfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f102cd78040" loc="56:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f102cd78040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102cd783c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f102cd78550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f102cd74490" loc="57:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f102cd74490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f102cd74810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f102cd749a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f102cd74b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f102cd7a140" loc="55:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f102cd7a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102cd7a4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f102cd7a650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f102cd7a7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_A" ref="0x7f102caf0220" loc="11:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_A" scoped="" ref="0x7f102caf0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102caf05a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f102cae2140" loc="17:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f102cae2140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f102cae24c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f102cae2650"/>
        <function-ref name="start" scoped="" ref="0x7f102cae27e0"/>
        <function-ref name="stop" scoped="" ref="0x7f102cae2970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f102cb5ac40" loc="8:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f102cb5ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f102cb59020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f102cae1020" loc="18:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f102cae1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102cae13a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f102cae1530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102cae16c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102cae1850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f102cae19e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f102caf48f0" loc="10:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f102caf48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102caf4c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102caf4e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102cb4d020"/>
        <function-ref name="cancel" scoped="" ref="0x7f102cb4d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102cb4d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="assignFlowstoSlots" ref="0x7f102cacc080" loc="55:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7f102cacc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102cacc400"/>
        <function-ref name="runTask" scoped="" ref="0x7f102cacc590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateSchedule" ref="0x7f102cac92a0" loc="58:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateSchedule" scoped="" ref="0x7f102cac92a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102cac9720"/>
        <function-ref name="runTask" scoped="" ref="0x7f102cac98b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7f102cae79e0" loc="13:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7f102cae79e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102cae4020"/>
        <function-ref name="fired" scoped="" ref="0x7f102caf2510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f102cae5300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f102caf2e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f102cae4920"/>
        <function-ref name="gett0" scoped="" ref="0x7f102cae44a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102caf2990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f102cb01670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f102cae5910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f102cb01b40"/>
        <function-ref name="stop" scoped="" ref="0x7f102caf2090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_B" ref="0x7f102caf08e0" loc="12:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_B" scoped="" ref="0x7f102caf08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102caf0c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeFlow" ref="0x7f102cace100" loc="54:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeFlow" scoped="" ref="0x7f102cace100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102cace480"/>
        <function-ref name="runTask" scoped="" ref="0x7f102cace610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f102cb4e500" loc="7:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f102cb4e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f102cb4e880"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f102cb4ea10"/>
        <function-ref name="led1On" scoped="" ref="0x7f102cb4eba0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f102cb4ed30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f102cb5a020"/>
        <function-ref name="get" scoped="" ref="0x7f102cb5a1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f102cb5a340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f102cb5a980"/>
        <function-ref name="set" scoped="" ref="0x7f102cb5a4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f102cb5a660"/>
        <function-ref name="led2On" scoped="" ref="0x7f102cb5a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeSchedule" ref="0x7f102cacb020" loc="56:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeSchedule" scoped="" ref="0x7f102cacb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102cacb3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f102cacb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeCluster" ref="0x7f102cac8300" loc="59:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeCluster" scoped="" ref="0x7f102cac8300"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102cac8680"/>
        <function-ref name="runTask" scoped="" ref="0x7f102cac8810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PermutateCipher" ref="0x7f102caca310" loc="57:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PermutateCipher" scoped="" ref="0x7f102caca310"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102caca690"/>
        <function-ref name="runTask" scoped="" ref="0x7f102caca820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f102c99e380" loc="46:../../../..//tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f102c99e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f102c99e700"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f102c99e890"/>
        <function-ref name="led1On" scoped="" ref="0x7f102c99ea20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f102c99ebb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f102c99ed40"/>
        <function-ref name="get" scoped="" ref="0x7f102c99b020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f102c99b1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f102c99b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f102c99b340"/>
        <function-ref name="led0On" scoped="" ref="0x7f102c99b4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f102c99b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f102c98f3a0" loc="50:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f102c98f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c98f720"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c98f8b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c98fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c98fbd0"/>
        <function-ref name="get" scoped="" ref="0x7f102c98fd60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c995020"/>
        <function-ref name="set" scoped="" ref="0x7f102c9951b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c995340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102c99a7c0" loc="46:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102c99a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102c99ab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f102c995660" loc="51:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f102c995660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c9959e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c995b70"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c995d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c98e020"/>
        <function-ref name="get" scoped="" ref="0x7f102c98e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c98e340"/>
        <function-ref name="set" scoped="" ref="0x7f102c98e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c98e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f102c99adc0" loc="47:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f102c99adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f102c997180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f102c997310"/>
        <function-ref name="led1On" scoped="" ref="0x7f102c9974a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f102c997630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f102c9977c0"/>
        <function-ref name="get" scoped="" ref="0x7f102c997950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f102c997ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f102c9961b0"/>
        <function-ref name="set" scoped="" ref="0x7f102c997c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f102c997e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f102c996020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f102c98e980" loc="52:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f102c98e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c98ed00"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c98d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c98d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c98d340"/>
        <function-ref name="get" scoped="" ref="0x7f102c98d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c98d660"/>
        <function-ref name="set" scoped="" ref="0x7f102c98d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c98d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f102c972060" loc="41:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f102c972060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c9723e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c972570"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c972700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c972890"/>
        <function-ref name="get" scoped="" ref="0x7f102c972a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c972bb0"/>
        <function-ref name="set" scoped="" ref="0x7f102c972d40"/>
        <function-ref name="clr" scoped="" ref="0x7f102c971020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f102c971380" loc="42:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f102c971380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c971700"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c971890"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c971a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c971bb0"/>
        <function-ref name="get" scoped="" ref="0x7f102c971d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c970020"/>
        <function-ref name="set" scoped="" ref="0x7f102c9701b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c970340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f102c96f920" loc="44:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102c96f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102c96fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f102c9706a0" loc="43:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f102c9706a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c970a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c970bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c970d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c96f020"/>
        <function-ref name="get" scoped="" ref="0x7f102c96f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c96f340"/>
        <function-ref name="set" scoped="" ref="0x7f102c96f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c96f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f102c959810" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f102c959810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c959b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c959d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c957020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9571b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c957340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9574d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c957660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9577f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c957980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c957b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c957ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c957e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c956020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9562b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c956440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f102c944810" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f102c944810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c944b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c944d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c943020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9431b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c943340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9434d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c943660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9437f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c943980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c943b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c943ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c943e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c942020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9422b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c942440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f102c8fbca0" loc="145:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f102c8fbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8f90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8f9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8f93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8f9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8f96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8f9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8f9a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8f9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8f9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8f8020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8f81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8f8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8f84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8f8760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8f88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f102c8d6cb0" loc="165:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f102c8d6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8d50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8d5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8d53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8d5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8d56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8d5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8d5a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8d5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8d5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8d4020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8d41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8d4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8d44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8d4760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8d48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f102c8f8cc0" loc="146:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f102c8f8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8f70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8f7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8f73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8f7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8f76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8f7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8f7a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8f7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8f7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8f6020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8f61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8f6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8f64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8f6760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8f68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f102c940810" loc="71:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f102c940810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c940b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c940d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c93f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c93f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c93f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c93f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c93f660"/>
        <function-ref name="get" scoped="" ref="0x7f102c93f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c93f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c93fb10"/>
        <function-ref name="set" scoped="" ref="0x7f102c93fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c93fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c93e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c93e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c93e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f102c92c9a0" loc="84:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f102c92c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c92cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c92b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c92b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c92b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c92b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c92b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c92b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c92b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c92bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c92bca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c92be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c92a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c92a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c92a440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c92a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f102c9179a0" loc="97:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f102c9179a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c917d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c916020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9161b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c916340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9164d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c916660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9167f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c916980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c916b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c916ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c916e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c915020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9151b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c915440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9155d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f102c9079a0" loc="108:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f102c9079a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c907d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c906020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9061b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c906340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9064d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c906660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9067f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c906980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c906b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c906ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c906e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c905020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9051b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c905440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9055d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f102c8f2cc0" loc="149:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f102c8f2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8f10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8f1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8f13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8f1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8f16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8f1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8f1a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8f1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8f1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8f0020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8f01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8f0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8f04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8f0760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8f08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f102c8e2cb0" loc="159:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f102c8e2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8e10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8e1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8e13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8e1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8e16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8e1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8e1a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8e1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8e1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8e0020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8e01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8e0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8e04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8e0760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8e08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f102c8cecc0" loc="171:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f102c8cecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8cd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8cd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8cd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8cd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8cd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8cd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8cda00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8cdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8cdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8cc020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8cc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8cc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8cc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8cc760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8cc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f102c952810" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f102c952810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c952b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c952d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c951020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9511b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c951340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9514d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c951660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9517f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c951980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c951b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c951ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c951e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c950020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9502b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c950440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f102c8f0cc0" loc="150:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f102c8f0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8ef0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8ef230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8ef3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8ef550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8ef6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8ef870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8efa00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8efb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8efd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8ee020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8ee1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8ee340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8ee4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8ee760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8ee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f102c94e810" loc="61:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f102c94e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c94eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c94ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c94d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c94d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c94d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c94d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c94d660"/>
        <function-ref name="get" scoped="" ref="0x7f102c94d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c94d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c94db10"/>
        <function-ref name="set" scoped="" ref="0x7f102c94dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c94de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c94c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c94c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c94c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f102c93a810" loc="74:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f102c93a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c93ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c93ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c939020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9391b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c939340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c939660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9397f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c939980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c939b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c939ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c939e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c938020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9382b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c938440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f102c9259a0" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f102c9259a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c925d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c924020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9241b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c924340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9244d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c924660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9247f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c924980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c924b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c924ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c924e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c923020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9231b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c923440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9235d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f102c9119a0" loc="100:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f102c9119a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c911d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c910020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9101b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c910340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9104d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c910660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9107f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c910980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c910b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c910ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c910e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c90f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c90f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c90f440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c90f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f102c9019a0" loc="111:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f102c9019a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c901d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c900020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9001b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c900340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9004d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c900660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9007f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c900980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c900b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c900ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c900e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8ff020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8ff1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8ff440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8ff5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f102c95d810" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f102c95d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c95db90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c95dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c95c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c95c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c95c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c95c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c95c660"/>
        <function-ref name="get" scoped="" ref="0x7f102c95c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c95c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c95cb10"/>
        <function-ref name="set" scoped="" ref="0x7f102c95cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c95ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c95b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c95b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c95b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f102c948810" loc="64:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f102c948810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c948c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c948e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c947020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9471b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c947340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9474d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c947660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9477f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c947980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c947b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c947ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c947e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c946020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9462b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c946440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f102c934810" loc="77:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f102c934810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c934b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c934d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c933020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9331b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c933340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9334d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c933660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9337f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c933980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c933b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c933ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c933e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c932020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9322b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c932440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f102c8fdcc0" loc="144:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f102c8fdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8fc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8fc230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8fc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8fc550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8fc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8fc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8fca00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8fcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8fcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8fb020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8fb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8fb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8fb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8fb760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8fb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f102c8dccb0" loc="162:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f102c8dccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8db0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8db230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8db3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8db550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8db6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8db870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8dba00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8dbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8dbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8da020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8da1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8da340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8da4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8da760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8da8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f102c8d0cb0" loc="169:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f102c8d0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8cf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8cf230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8cf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8cf550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8cf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8cf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8cfa00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8cfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8cfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8ce020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8ce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8ce340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8ce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8ce760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8ce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f102c8e8cc0" loc="155:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f102c8e8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8e70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8e7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8e73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8e7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8e76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8e7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8e7a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8e7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8e7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8e6020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8e61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8e6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8e64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8e6760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8e68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f102c930810" loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f102c930810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c930d90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c92f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c92f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c92f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c92f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c92f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c92f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c92f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c92fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c92fca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c92fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c92e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c92e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c92e440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c92e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f102c91b9a0" loc="95:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f102c91b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c91bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c91a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c91a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c91a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c91a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c91a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c91a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c91a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c91ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c91aca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c91ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c919020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9191b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c919440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9195d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f102c90b9a0" loc="106:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f102c90b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c90bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c90a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c90a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c90a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c90a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c90a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c90a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c90a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c90ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c90aca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c90ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c909020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9091b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c909440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9095d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f102c8dacb0" loc="163:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f102c8dacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8d90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8d9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8d93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8d9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8d96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8d9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8d9a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8d9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8d9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8d8020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8d81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8d8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8d84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8d8760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8d88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f102c8eecb0" loc="152:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f102c8eecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8ed0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8ed230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8ed3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8ed550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8ed6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8ed870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8eda00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8edb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8edd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8ec020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8ec1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8ec340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8ec4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8ec760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8ec8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f102c956810" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f102c956810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c956b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c956d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c955020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9551b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c955340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9554d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c955660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9557f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c955980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c955b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c955ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c955e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c954020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9542b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c954440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f102c942810" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f102c942810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c942b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c942d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c941020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9411b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c941340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9414d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c941660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9417f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c941980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c941b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c941ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c941e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c940020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9402b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c940440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f102c90f9a0" loc="104:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f102c90f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c90fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c90e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c90e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c90e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c90e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c90e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c90e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c90e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c90eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c90eca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c90ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c90d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c90d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c90d440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c90d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f102c93e810" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f102c93e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c93eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c93ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c93d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c93d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c93d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c93d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c93d660"/>
        <function-ref name="get" scoped="" ref="0x7f102c93d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c93d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c93db10"/>
        <function-ref name="set" scoped="" ref="0x7f102c93dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c93de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c93c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c93c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c93c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f102c92a9a0" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f102c92a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c92ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c928020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9281b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c928340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9284d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c928660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9287f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c928980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c928b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c928ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c928e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c927020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9271b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c927440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9275d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f102c9159a0" loc="98:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f102c9159a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c915d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c914020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9141b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c914340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9144d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c914660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9147f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c914980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c914b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c914ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c914e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c913020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9131b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c913440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9135d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f102c9059a0" loc="109:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f102c9059a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c905d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c904020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9041b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c904340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9044d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c904660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9047f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c904980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c904b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c904ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c904e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c903020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9031b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c903440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9035d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f102c8eacc0" loc="154:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f102c8eacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8e90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8e9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8e93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8e9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8e96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8e9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8e9a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8e9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8e9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8e8020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8e81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8e8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8e84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8e8760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8e88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f102c95f900" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f102c95f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c95fc80"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c95fe10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c96b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c96b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c96b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c96b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c96b660"/>
        <function-ref name="get" scoped="" ref="0x7f102c96b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c96b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c96bb10"/>
        <function-ref name="set" scoped="" ref="0x7f102c96bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c96be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c969020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9692b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c969440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f102c94c810" loc="62:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f102c94c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c94cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c94cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c94b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c94b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c94b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c94b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c94b660"/>
        <function-ref name="get" scoped="" ref="0x7f102c94b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c94b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c94bb10"/>
        <function-ref name="set" scoped="" ref="0x7f102c94bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c94be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c94a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c94a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c94a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f102c938810" loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f102c938810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c938b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c938d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c937020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9371b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c937340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9374d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c937660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9377f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c937980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c937b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c937ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c937e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c936020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9362b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c936440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f102c9239a0" loc="88:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f102c9239a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c923d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c922020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9221b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c922340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9224d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c922660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9227f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c922980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c922b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c922ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c922e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c921020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9211b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c921440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9215d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f102c8e6cc0" loc="156:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f102c8e6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8e50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8e5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8e53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8e5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8e56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8e5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8e5a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8e5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8e5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8e4020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8e41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8e4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8e44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8e4760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8e48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f102c8e0cb0" loc="160:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f102c8e0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8df0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8df230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8df3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8df550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8df6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8df870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8dfa00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8dfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8dfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8de020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8de1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8de340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8de4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8de760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8de8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f102c8d4cb0" loc="166:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f102c8d4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8d30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8d3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8d33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8d3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8d36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8d3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8d3a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8d3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8d3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8d2020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8d21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8d2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8d24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8d2760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8d28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f102c91f9a0" loc="93:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f102c91f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c91fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c91e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c91e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c91e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c91e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c91e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c91e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c91e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c91eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c91eca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c91ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c91d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c91d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c91d440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c91d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f102c8e4cc0" loc="157:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f102c8e4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8e30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8e3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8e33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8e3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8e36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8e3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8e3a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8e3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8e3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8e2020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8e21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8e2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8e24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8e2760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8e28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f102c95b810" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f102c95b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c95bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c95bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c95a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c95a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c95a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c95a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c95a660"/>
        <function-ref name="get" scoped="" ref="0x7f102c95a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c95a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c95ab10"/>
        <function-ref name="set" scoped="" ref="0x7f102c95aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c95ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c959020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9592b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c959440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f102c946810" loc="65:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f102c946810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c946b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c946d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c945020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9451b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c945340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9454d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c945660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9457f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c945980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c945b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c945ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c945e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c944020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9442b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c944440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f102c932810" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f102c932810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c932b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c932d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c931020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9311b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c931340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9314d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c931660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9317f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c931980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c931b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c931ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c931e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c930020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9302b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c930440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f102c8eccc0" loc="153:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f102c8eccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8eb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8eb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8eb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8eb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8eb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8eb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8eba00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8ebb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8ebd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8ea020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8ea1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8ea340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8ea4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8ea760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8ea8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f102c8d8cb0" loc="164:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f102c8d8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8d70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8d7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8d73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8d7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8d76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8d7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8d7a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8d7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8d7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8d6020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8d61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8d6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8d64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8d6760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8d68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f102c92e9a0" loc="83:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f102c92e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c92ed20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c92d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c92d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c92d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c92d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c92d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c92d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c92d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c92db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c92dca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c92de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c92c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c92c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c92c440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c92c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f102c9199a0" loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f102c9199a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c919d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c918020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9181b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c918340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9184d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c918660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9187f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c918980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c918b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c918ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c918e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c917020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9171b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c917440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9175d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f102c9099a0" loc="107:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f102c9099a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c909d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c908020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9081b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c908340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9084d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c908660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9087f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c908980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c908b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c908ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c908e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c907020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9071b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c907440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9075d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f102c954810" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f102c954810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c954b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c954d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c953020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c953340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9534d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c953660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9537f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c953980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c953b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c953ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c953e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c952020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9522b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c952440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f102c90d9a0" loc="105:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f102c90d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c90dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c90c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c90c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c90c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c90c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c90c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c90c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c90c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c90cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c90cca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c90ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c90b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c90b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c90b440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c90b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f102c950810" loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f102c950810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c950b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c950d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c94f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c94f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c94f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c94f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c94f660"/>
        <function-ref name="get" scoped="" ref="0x7f102c94f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c94f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c94fb10"/>
        <function-ref name="set" scoped="" ref="0x7f102c94fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c94fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c94e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c94e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c94e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f102c93c810" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f102c93c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c93cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c93cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c93b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c93b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c93b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c93b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c93b660"/>
        <function-ref name="get" scoped="" ref="0x7f102c93b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c93b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c93bb10"/>
        <function-ref name="set" scoped="" ref="0x7f102c93bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c93be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c93a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c93a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c93a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f102c9279a0" loc="86:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f102c9279a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c927d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c926020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9261b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c926340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9264d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c926660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9267f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c926980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c926b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c926ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c926e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c925020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9251b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c925440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9255d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f102c9139a0" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f102c9139a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c913d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c912020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9121b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c912340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9124d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c912660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9127f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c912980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c912b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c912ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c912e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c911020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9111b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c911440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9115d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f102c9039a0" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f102c9039a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c903d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c902020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9021b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c902340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9024d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c902660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9027f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c902980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c902b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c902ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c902e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c901020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c9011b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c901440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c9015d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f102c969810" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f102c969810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c969b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c969d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c95e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c95e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c95e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c95e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c95e660"/>
        <function-ref name="get" scoped="" ref="0x7f102c95e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c95e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c95eb10"/>
        <function-ref name="set" scoped="" ref="0x7f102c95eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c95ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c95d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c95d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c95d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f102c94a810" loc="63:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f102c94a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c94ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c94ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c949020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9491b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c949340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9494d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c949660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9497f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c949980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c949b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c949ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c949e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c948020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9482b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c948440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f102c936810" loc="76:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f102c936810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c936b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c936d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c935020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c9351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c935340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c9354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c935660"/>
        <function-ref name="get" scoped="" ref="0x7f102c9357f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c935980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c935b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c935ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c935e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c934020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c9342b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c934440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f102c9219a0" loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f102c9219a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c921d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c920020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c9201b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c920340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c9204d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c920660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c9207f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c920980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c920b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c920ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c920e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c91f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c91f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c91f440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c91f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f102c8f4ca0" loc="148:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f102c8f4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8f30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8f3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8f33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8f3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8f36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8f3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8f3a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8f3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8f3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8f2020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8f21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8f2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8f24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8f2760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8f28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f102c8decb0" loc="161:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f102c8decb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8dd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8dd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8dd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8dd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8dd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8dd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8dda00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8ddb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8ddd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8dc020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8dc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8dc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8dc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8dc760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8dc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f102c8f6cc0" loc="147:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f102c8f6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8f50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8f5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8f53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8f5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8f56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8f5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8f5a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8f5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8f5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8f4020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8f41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8f4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8f44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8f4760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8f48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f102c91d9a0" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f102c91d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c91dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c91c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c91c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c91c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c91c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c91c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c91c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c91c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c91cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c91cca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c91ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c91b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c91b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c91b440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c91b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f102c8d2cb0" loc="168:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f102c8d2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8d10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8d1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8d13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8d1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8d16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8d1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8d1a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8d1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8d1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8d0020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8d01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8d0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8d04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8d0760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8d08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f102c8cccc0" loc="172:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f102c8cccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8ca0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8ca230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8ca3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8ca550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8ca6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8ca870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8caa00"/>
        <function-ref name="get" scoped="" ref="0x7f102c8cab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8cad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8c9020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8c91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8c9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8c94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8c9760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8c98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f102c8ff9f0" loc="143:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f102c8ff9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8fe1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c8fe350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8fe4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c8fe670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8fe800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8fe990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8feb20"/>
        <function-ref name="get" scoped="" ref="0x7f102c8fecb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8fee40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c8fd020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8fd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c8fd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8fd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c8fd760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8fd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c8c6d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c8c6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c89f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c89f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c89f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c89f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c89f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c89f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c89fa40"/>
        <function-ref name="get" scoped="" ref="0x7f102c89fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c89fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c89e020"/>
        <function-ref name="set" scoped="" ref="0x7f102c89e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c89e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c89e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c89e760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c89e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c89b740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c89b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c89bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c89bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c89bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c89a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c89a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c89a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c89a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c89a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c89a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c89a980"/>
        <function-ref name="set" scoped="" ref="0x7f102c89ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c89aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c89ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c899120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c896100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c896100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c896480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c896610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8967a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c896930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c896ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c896c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c896de0"/>
        <function-ref name="get" scoped="" ref="0x7f102c895020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8951b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c895340"/>
        <function-ref name="set" scoped="" ref="0x7f102c8954d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c895660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8957f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c895a80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c895c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c892d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c892d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8910e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c891270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c891400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c891590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c891720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8918b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c891a40"/>
        <function-ref name="get" scoped="" ref="0x7f102c891bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c891d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c890020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8901b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c890340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8904d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c890760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8908f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c88d740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c88d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c88dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c88dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c88dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c88c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c88c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c88c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c88c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c88c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c88c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c88c980"/>
        <function-ref name="set" scoped="" ref="0x7f102c88cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c88cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c88ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c88b120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c88b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c888100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c888100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c888480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c888610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8887a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c888930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c888ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c888c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c888de0"/>
        <function-ref name="get" scoped="" ref="0x7f102c887020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8871b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c887340"/>
        <function-ref name="set" scoped="" ref="0x7f102c8874d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c887660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8877f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c887a80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c887c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c884d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c884d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8820e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c882270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c882400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c882590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c882720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8828b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c882a40"/>
        <function-ref name="get" scoped="" ref="0x7f102c882bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c882d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c881020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8811b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c881340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8814d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c881760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8818f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c87e740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c87e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c87eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c87ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c87ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c87d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c87d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c87d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c87d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c87d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c87d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c87d980"/>
        <function-ref name="set" scoped="" ref="0x7f102c87db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c87dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c87de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c87c120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c87c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c879100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c879100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c879480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c879610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8797a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c879930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c879ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c879c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c879de0"/>
        <function-ref name="get" scoped="" ref="0x7f102c878020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8781b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c878340"/>
        <function-ref name="set" scoped="" ref="0x7f102c8784d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c878660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8787f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c878a80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c878c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c875d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c875d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8740e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c874270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c874400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c874590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c874720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8748b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c874a40"/>
        <function-ref name="get" scoped="" ref="0x7f102c874bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c874d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c873020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8731b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c873340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8734d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c873760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8738f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c870740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c870740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c870ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c870c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c870de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c86f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c86f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c86f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c86f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c86f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c86f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c86f980"/>
        <function-ref name="set" scoped="" ref="0x7f102c86fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c86fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c86fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c86e120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c86e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c86b100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c86b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c86b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c86b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c86b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c86b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c86bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c86bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c86bde0"/>
        <function-ref name="get" scoped="" ref="0x7f102c86a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c86a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c86a340"/>
        <function-ref name="set" scoped="" ref="0x7f102c86a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c86a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c86a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c86aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c86ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c867d80" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c867d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c866180"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c866310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8664a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c866630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8667c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c866950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c866ae0"/>
        <function-ref name="get" scoped="" ref="0x7f102c866c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c866e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c865020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8651b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c865340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8654d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c865760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c862740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c862740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c862ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c862c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c862de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c861020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8611b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c861340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8614d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c861660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8617f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c861980"/>
        <function-ref name="set" scoped="" ref="0x7f102c861b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c861ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c861e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c860120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c85d100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c85d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c85d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c85d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c85d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c85d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c85dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c85dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c85dde0"/>
        <function-ref name="get" scoped="" ref="0x7f102c85b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c85b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c85b340"/>
        <function-ref name="set" scoped="" ref="0x7f102c85b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c85b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c85b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c85ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c85bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c858d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c858d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8570e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c857270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c857400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c857590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c857720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8578b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c857a40"/>
        <function-ref name="get" scoped="" ref="0x7f102c857bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c857d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c856020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8561b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c856340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8564d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c856760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8568f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c853740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c853740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c853ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c853c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c853de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c852020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8521b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c852340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8524d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c852660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8527f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c852980"/>
        <function-ref name="set" scoped="" ref="0x7f102c852b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c852ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c852e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c851120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c84e100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c84e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c84e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c84e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c84e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c84e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c84eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c84ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c84ede0"/>
        <function-ref name="get" scoped="" ref="0x7f102c84d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c84d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c84d340"/>
        <function-ref name="set" scoped="" ref="0x7f102c84d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c84d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c84d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c84da80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c84dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c84ad10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c84ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8490e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c849270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c849400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c849590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c849720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8498b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c849a40"/>
        <function-ref name="get" scoped="" ref="0x7f102c849bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c849d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c848020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8481b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c848340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8484d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c848760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8488f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c845740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c845740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c845ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c845c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c845de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c844020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8441b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c844340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8444d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c844660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8447f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c844980"/>
        <function-ref name="set" scoped="" ref="0x7f102c844b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c844ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c844e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c843120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c840100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c840100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c840480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c840610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8407a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c840930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c840ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c840c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c840de0"/>
        <function-ref name="get" scoped="" ref="0x7f102c83f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c83f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c83f340"/>
        <function-ref name="set" scoped="" ref="0x7f102c83f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c83f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c83f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c83fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c83fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c83cd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c83cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c83b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c83b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c83b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c83b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c83b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c83b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c83ba40"/>
        <function-ref name="get" scoped="" ref="0x7f102c83bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c83bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c83a020"/>
        <function-ref name="set" scoped="" ref="0x7f102c83a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c83a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c83a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c83a760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c83a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c836740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c836740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c836ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c836c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c836de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c835020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8351b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c835340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8354d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c835660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8357f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c835980"/>
        <function-ref name="set" scoped="" ref="0x7f102c835b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c835ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c835e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c834120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c831100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c831100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c831480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c831610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8317a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c831930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c831ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c831c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c831de0"/>
        <function-ref name="get" scoped="" ref="0x7f102c830020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c830340"/>
        <function-ref name="set" scoped="" ref="0x7f102c8304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c830660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c830a80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c830c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c82de60" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c82de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c82c210"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c82c3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c82c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c82c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c82c850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c82c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c82cb70"/>
        <function-ref name="get" scoped="" ref="0x7f102c82cd00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c82b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c82b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f102c82b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c82b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c82b660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c82b8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c82ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c8289f0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c8289f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c828d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c827020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8271b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c827340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8274d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c827660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8277f0"/>
        <function-ref name="get" scoped="" ref="0x7f102c827980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c827b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c827ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c827e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c826020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8261b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c826440"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8265d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c823460" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c823460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8237e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c823970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c823b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c823c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c823e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c822020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8221b0"/>
        <function-ref name="get" scoped="" ref="0x7f102c822340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8224d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c822660"/>
        <function-ref name="set" scoped="" ref="0x7f102c8227f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c822980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c822b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c822da0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c821020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c81fe00" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c81fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c81e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c81e350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c81e4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c81e670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c81e800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c81e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c81eb20"/>
        <function-ref name="get" scoped="" ref="0x7f102c81ecb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c81ee40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c81d020"/>
        <function-ref name="set" scoped="" ref="0x7f102c81d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c81d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c81d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c81d760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c81d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c81a740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c81a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c81aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c81ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c81ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c819020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c8191b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c819340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c8194d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c819660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8197f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c819980"/>
        <function-ref name="set" scoped="" ref="0x7f102c819b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c819ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c819e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c818120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c815100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c815100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c815480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c815610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8157a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c815930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c815ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c815c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c815de0"/>
        <function-ref name="get" scoped="" ref="0x7f102c813020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8131b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c813340"/>
        <function-ref name="set" scoped="" ref="0x7f102c8134d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c813660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8137f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c813a80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c813c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c810d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c810d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c80f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c80f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c80f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c80f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c80f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c80f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c80fa40"/>
        <function-ref name="get" scoped="" ref="0x7f102c80fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c80fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c80e020"/>
        <function-ref name="set" scoped="" ref="0x7f102c80e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c80e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c80e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c80e760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c80e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c80b740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c80b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c80bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c80bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c80bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c80a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c80a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c80a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c80a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c80a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c80a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c80a980"/>
        <function-ref name="set" scoped="" ref="0x7f102c80ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c80aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c80ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c809120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8092b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c806100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c806100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c806480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c806610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c8067a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c806930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c806ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c806c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c806de0"/>
        <function-ref name="get" scoped="" ref="0x7f102c805020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c8051b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c805340"/>
        <function-ref name="set" scoped="" ref="0x7f102c8054d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c805660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8057f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c805a80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c805c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c802d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c802d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c8010e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c801270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c801400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c801590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c801720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c8018b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c801a40"/>
        <function-ref name="get" scoped="" ref="0x7f102c801bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c801d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c800020"/>
        <function-ref name="set" scoped="" ref="0x7f102c8001b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c800340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c8004d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c800760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c8008f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7fd740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7fd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7fdac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7fdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7fdde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7fc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7fc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7fc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7fc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c7fc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7fc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7fc980"/>
        <function-ref name="set" scoped="" ref="0x7f102c7fcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7fcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7fce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7fb120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7fb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7f8100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7f8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7f8480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7f8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7f87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7f8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7f8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7f8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7f8de0"/>
        <function-ref name="get" scoped="" ref="0x7f102c7f7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7f71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7f7340"/>
        <function-ref name="set" scoped="" ref="0x7f102c7f74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7f7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7f77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7f7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7f7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7f4d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7f4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7f30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7f3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7f3400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7f3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7f3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7f38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7f3a40"/>
        <function-ref name="get" scoped="" ref="0x7f102c7f3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7f3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7f2020"/>
        <function-ref name="set" scoped="" ref="0x7f102c7f21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7f2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7f24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7f2760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7f28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7ef740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7ef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7efac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7efc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7efde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7ed1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7ed340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7ed4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c7ed660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7ed7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7ed980"/>
        <function-ref name="set" scoped="" ref="0x7f102c7edb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7edca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7ede30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7ec120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7ec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7e9100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7e9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7e9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7e9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7e97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7e9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7e9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7e9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7e9de0"/>
        <function-ref name="get" scoped="" ref="0x7f102c7e8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7e81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7e8340"/>
        <function-ref name="set" scoped="" ref="0x7f102c7e84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7e8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7e87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7e8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7e8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7e5d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7e5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7e40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7e4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7e4400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7e4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7e4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7e48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7e4a40"/>
        <function-ref name="get" scoped="" ref="0x7f102c7e4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7e4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7e3020"/>
        <function-ref name="set" scoped="" ref="0x7f102c7e31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7e3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7e34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7e3760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7e38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7e0740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7e0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7e0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7e0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7e0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7df020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7df1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7df340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7df4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c7df660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7df7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7df980"/>
        <function-ref name="set" scoped="" ref="0x7f102c7dfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7dfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7dfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7de120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7de2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7db100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7db100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7db480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7db610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7db7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7db930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7dbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7dbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7dbde0"/>
        <function-ref name="get" scoped="" ref="0x7f102c7da020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7da1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7da340"/>
        <function-ref name="set" scoped="" ref="0x7f102c7da4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7da660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7da7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7daa80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7dac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7d7d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7d7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7d60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7d6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7d6400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7d6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7d6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7d68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7d6a40"/>
        <function-ref name="get" scoped="" ref="0x7f102c7d6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7d6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7d5020"/>
        <function-ref name="set" scoped="" ref="0x7f102c7d51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7d5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7d54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7d5760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7d58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7d2740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7d2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7d2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7d2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7d2de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7d11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7d1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7d14d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c7d1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7d17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7d1980"/>
        <function-ref name="set" scoped="" ref="0x7f102c7d1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7d1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7d1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7d0120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7d02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7cd100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7cd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7cd480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7cd610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7cd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7cd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7cdac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7cdc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7cdde0"/>
        <function-ref name="get" scoped="" ref="0x7f102c7cc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7cc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7cc340"/>
        <function-ref name="set" scoped="" ref="0x7f102c7cc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7cc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7cc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7cca80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7ccc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7c8d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7c8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7c70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7c7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7c7400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7c7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7c7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7c78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7c7a40"/>
        <function-ref name="get" scoped="" ref="0x7f102c7c7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7c7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7c6020"/>
        <function-ref name="set" scoped="" ref="0x7f102c7c61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7c6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7c64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7c6760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7c68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7c3740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7c3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7c3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7c3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7c3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7c2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7c21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7c2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7c24d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c7c2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7c27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7c2980"/>
        <function-ref name="set" scoped="" ref="0x7f102c7c2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7c2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7c2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7c1120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7c12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f102c7be100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f102c7be100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7be480"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7be610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7be7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7be930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7beac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c7bec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7bede0"/>
        <function-ref name="get" scoped="" ref="0x7f102c7bd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c7bd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7bd340"/>
        <function-ref name="set" scoped="" ref="0x7f102c7bd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7bd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7bd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c7bda80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7bdc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f102c7462f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c7462f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c746670"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c746800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c746990"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c746b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c746cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c746e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c745020"/>
        <function-ref name="get" scoped="" ref="0x7f102c7451b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c745340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c7454d0"/>
        <function-ref name="set" scoped="" ref="0x7f102c745660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c7457f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c745980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c745c10"/>
        <function-ref name="clr" scoped="" ref="0x7f102c745da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f102c757020" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f102c757020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c7573a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c757530"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c7576c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c757850"/>
        <function-ref name="get" scoped="" ref="0x7f102c7579e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c757b70"/>
        <function-ref name="set" scoped="" ref="0x7f102c757d00"/>
        <function-ref name="clr" scoped="" ref="0x7f102c746020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f102c742de0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c742de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c741180"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c741310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c7414a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c741630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7417c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c741950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c741ae0"/>
        <function-ref name="get" scoped="" ref="0x7f102c741c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c741e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c740020"/>
        <function-ref name="set" scoped="" ref="0x7f102c7401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c740340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c7404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c740760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c7408f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f102c743b90" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f102c743b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c742020"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c7421b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c742340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c7424d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c742660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c7427f0"/>
        <function-ref name="set" scoped="" ref="0x7f102c742980"/>
        <function-ref name="clr" scoped="" ref="0x7f102c742b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f102c73d930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c73d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c73dcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c73de40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c73b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c73b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c73b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c73b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c73b660"/>
        <function-ref name="get" scoped="" ref="0x7f102c73b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c73b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c73bb10"/>
        <function-ref name="set" scoped="" ref="0x7f102c73bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c73be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c73a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c73a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c73a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f102c73e710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f102c73e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c73ea90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c73ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c73edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c73d020"/>
        <function-ref name="get" scoped="" ref="0x7f102c73d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c73d340"/>
        <function-ref name="set" scoped="" ref="0x7f102c73d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c73d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f102b827020" loc="49:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f102b827020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b8273a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b827530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b8276c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b827850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b8279e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f102b827c30" loc="50:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f102b827c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102b825020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f102b8251b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b825340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b8254d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f102b825660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f102b8258b0" loc="51:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f102b8258b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f102b825c30"/>
        <function-ref name="source" scoped="" ref="0x7f102b825dc0"/>
        <function-ref name="address" scoped="" ref="0x7f102b824020"/>
        <function-ref name="destination" scoped="" ref="0x7f102b8241b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f102b824340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f102b8244d0"/>
        <function-ref name="type" scoped="" ref="0x7f102b824660"/>
        <function-ref name="setType" scoped="" ref="0x7f102b8247f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f102b824980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f102b824b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f102b824ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f102b823020" loc="52:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f102b823020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f102b8233a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f102b823530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f102b8236c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f102b33e420" loc="49:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f102b33e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b33e7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b33e930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b33eac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b33ec50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b33ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f102b33d060" loc="50:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f102b33d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102b33d3e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f102b33d570"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b33d700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b33d890"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f102b33da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f102b33dc70" loc="51:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f102b33dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f102b33c020"/>
        <function-ref name="source" scoped="" ref="0x7f102b33c1b0"/>
        <function-ref name="address" scoped="" ref="0x7f102b33c340"/>
        <function-ref name="destination" scoped="" ref="0x7f102b33c4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f102b33c660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f102b33c7f0"/>
        <function-ref name="type" scoped="" ref="0x7f102b33c980"/>
        <function-ref name="setType" scoped="" ref="0x7f102b33cb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f102b33cca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f102b33ce30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f102b33b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f102b33b2b0" loc="52:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f102b33b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f102b33b630"/>
        <function-ref name="noAck" scoped="" ref="0x7f102b33b7c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f102b33b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f102b331390" loc="44:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f102b331390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b331710"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b3318a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b331a30"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b331bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b331d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f102b330060" loc="46:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f102b330060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b3303e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b330570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b330700"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b330890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b330a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f102b330c70" loc="47:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f102b330c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f102b32e020"/>
        <function-ref name="source" scoped="" ref="0x7f102b32e1b0"/>
        <function-ref name="address" scoped="" ref="0x7f102b32e340"/>
        <function-ref name="destination" scoped="" ref="0x7f102b32e4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f102b32e660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f102b32e7f0"/>
        <function-ref name="type" scoped="" ref="0x7f102b32e980"/>
        <function-ref name="setType" scoped="" ref="0x7f102b32eb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f102b32eca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f102b32ee30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f102b32d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f102c6ee940" loc="43:../../../..//tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f102c6ee940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102c6eecc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102c6eee50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102c6eb020"/>
        <function-ref name="cancel" scoped="" ref="0x7f102c6eb1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102c6eb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f102c6a1400" loc="48:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f102c6a1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102c6a17a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102c6a1930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102c6a1ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102c6a1c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102c6a1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f102c6a24b0" loc="46:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f102c6a24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102c6a2850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102c6a29e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102c6a2b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f102c6a2d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102c6a1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f102c69e720" loc="50:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f102c69e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c69eaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f102c69ec30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102c69edc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102c69d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f102c69d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f102c69d480" loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f102c69d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102c69d800"/>
        <function-ref name="runTask" scoped="" ref="0x7f102c69d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f102c69dc60" loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f102c69dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102c69c020"/>
        <function-ref name="runTask" scoped="" ref="0x7f102c69c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f102c69f060" loc="49:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f102c69f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f102c69f3e0"/>
        <function-ref name="source" scoped="" ref="0x7f102c69f570"/>
        <function-ref name="address" scoped="" ref="0x7f102c69f700"/>
        <function-ref name="destination" scoped="" ref="0x7f102c69f890"/>
        <function-ref name="setSource" scoped="" ref="0x7f102c69fa20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f102c69fbb0"/>
        <function-ref name="type" scoped="" ref="0x7f102c69fd40"/>
        <function-ref name="setType" scoped="" ref="0x7f102c69e020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f102c69e1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f102c69e340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f102c69e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f102c698140" loc="61:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f102c698140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f102c6984c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f102c698650"/>
        <function-ref name="start" scoped="" ref="0x7f102c6987e0"/>
        <function-ref name="stop" scoped="" ref="0x7f102c698970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f102c6971d0" loc="63:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f102c6971d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102c697550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102c6976e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102c697870"/>
        <function-ref name="cancel" scoped="" ref="0x7f102c697a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102c697b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f102c695020" loc="65:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f102c695020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102c6953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f102c695630" loc="67:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f102c695630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c6959b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f102c695b40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102c695cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102c695e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f102c693020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f102c68dcd0" loc="70:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f102c68dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f102c6882e0"/>
        <function-ref name="clear" scoped="" ref="0x7f102c688a10"/>
        <function-ref name="isValid" scoped="" ref="0x7f102c690b60"/>
        <function-ref name="set" scoped="" ref="0x7f102c687170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f102c67cb20" loc="72:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f102c67cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f102c682020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f102c6821b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f102c682340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f102c6824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f102c6963f0" loc="64:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f102c6963f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102c696770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f102c692990" loc="69:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f102c692990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f102c692d10"/>
        <function-ref name="noAck" scoped="" ref="0x7f102c691020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f102c6911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f102c6932d0" loc="68:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f102c6932d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f102c693650"/>
        <function-ref name="source" scoped="" ref="0x7f102c6937e0"/>
        <function-ref name="address" scoped="" ref="0x7f102c693970"/>
        <function-ref name="destination" scoped="" ref="0x7f102c693b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f102c693c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f102c693e20"/>
        <function-ref name="type" scoped="" ref="0x7f102c692020"/>
        <function-ref name="setType" scoped="" ref="0x7f102c6921b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f102c692340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f102c6924d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f102c692660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f102c687dc0" loc="71:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f102c687dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f102c6843f0"/>
        <function-ref name="clear" scoped="" ref="0x7f102c684b20"/>
        <function-ref name="isValid" scoped="" ref="0x7f102c686ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c6832a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f102c66e880" loc="55:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f102c66e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f102c66ec00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f102c66ed90"/>
        <function-ref name="start" scoped="" ref="0x7f102c66d020"/>
        <function-ref name="stop" scoped="" ref="0x7f102c66d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f102c655d40" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f102c655d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f102c65d0e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f102c65d270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f102c65d400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f102c65d590"/>
        <function-ref name="setCca" scoped="" ref="0x7f102c65d720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f102c65d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f102c648d20" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f102c648d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f102c64a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f102c669760" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f102c669760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c669ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f102c669c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102c669e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102c668020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f102c6681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f102c66d980" loc="56:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f102c66d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102c66dd00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102c66c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102c66c1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102c66c340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102c66c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f102c66b900" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f102c66b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102c66bc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f102c660970" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f102c660970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f102c660cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f102c660e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f102c667030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f102c6671c0"/>
        <function-ref name="getPower" scoped="" ref="0x7f102c667350"/>
        <function-ref name="getLqi" scoped="" ref="0x7f102c6674e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f102c65dbb0" loc="65:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f102c65dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f102c65b020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f102c65b1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f102c65b340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f102c65b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f102c66ccb0" loc="57:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f102c66ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102c66b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f102c667810" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f102c667810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f102c667b90"/>
        <function-ref name="noAck" scoped="" ref="0x7f102c667d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f102c666020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f102c653020" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f102c653020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f102c6533a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f102c653530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f102c6536c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f102c653850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f102c6539e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f102c66a020" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f102c66a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f102c66a3a0"/>
        <function-ref name="source" scoped="" ref="0x7f102c66a530"/>
        <function-ref name="address" scoped="" ref="0x7f102c66a6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f102c66a850"/>
        <function-ref name="setSource" scoped="" ref="0x7f102c66a9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f102c66ab70"/>
        <function-ref name="type" scoped="" ref="0x7f102c66ad00"/>
        <function-ref name="setType" scoped="" ref="0x7f102c669020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f102c6691b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f102c669340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f102c6694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f102c65ca80" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f102c65ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f102c65ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f102c647b70" loc="43:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f102c647b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f102c644020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f102c6441b0"/>
        <function-ref name="start" scoped="" ref="0x7f102c644340"/>
        <function-ref name="stop" scoped="" ref="0x7f102c6444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f102c639080" loc="55:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f102c639080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f102c639400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f102c6382e0" loc="57:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f102c6382e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f102c638660"/>
        <function-ref name="setRetries" scoped="" ref="0x7f102c6387f0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f102c638980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f102c638b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f102c638ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f102c63b670" loc="53:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f102c63b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f102c63b9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f102c63bb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f102c63bd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f102c63a020"/>
        <function-ref name="getPower" scoped="" ref="0x7f102c63a1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f102c63a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f102c63c170" loc="50:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f102c63c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102c63c4f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102c63c680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102c63c810"/>
        <function-ref name="cancel" scoped="" ref="0x7f102c63c9a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102c63cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f102c639700" loc="56:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f102c639700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f102c639a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f102c639c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f102c639da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f102c638020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f102c63ed30" loc="47:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f102c63ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102c63d0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f102c63a670" loc="54:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f102c63a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f102c63a9f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f102c63ab80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f102c63ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102c643210" loc="45:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102c643210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c643590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c643720"/>
        <function-ref name="request" scoped="" ref="0x7f102c6438b0"/>
        <function-ref name="granted" scoped="" ref="0x7f102c643a40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c643bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f102c63e020" loc="46:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f102c63e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102c63e3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102c63e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102c63e6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102c63e850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102c63e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f102c63d420" loc="48:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f102c63d420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c63d7a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f102c63d930"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102c63dac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102c63dc50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f102c63dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f102c63b020" loc="51:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f102c63b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102c63b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f102c6379f0" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f102c6379f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f102c637d70"/>
        <function-ref name="stopDone" scoped="" ref="0x7f102c634020"/>
        <function-ref name="start" scoped="" ref="0x7f102c6341b0"/>
        <function-ref name="stop" scoped="" ref="0x7f102c634340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f102c633990" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f102c633990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f102c633d10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f102c632020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f102c6321b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f102c632340"/>
        <function-ref name="setCca" scoped="" ref="0x7f102c6324d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f102c632660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f102c634600" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f102c634600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102c634980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102c634b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102c634ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102c634e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102c633020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f102c633300" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f102c633300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102c633680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f102c62f690" loc="39:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f102c62f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f102c62fa10"/>
        <function-ref name="stopDone" scoped="" ref="0x7f102c62fba0"/>
        <function-ref name="start" scoped="" ref="0x7f102c62fd30"/>
        <function-ref name="stop" scoped="" ref="0x7f102c62e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f102c62d020" loc="41:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f102c62d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f102c62d3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f102c62d530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f102c62d6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f102c62d850"/>
        <function-ref name="setCca" scoped="" ref="0x7f102c62d9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f102c62db70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f102c622ae0" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f102c622ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f102c622e60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f102c620020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f102c6201b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f102c620340"/>
        <function-ref name="setCca" scoped="" ref="0x7f102c6204d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f102c620660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f102c615020" loc="50:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f102c615020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f102c6153a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f102c615530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f102c6156c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f102c615850"/>
        <function-ref name="getPower" scoped="" ref="0x7f102c6159e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f102c615b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f102c61ad30" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f102c61ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102c6220e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102c622270"/>
        <function-ref name="modify" scoped="" ref="0x7f102c622400"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102c622590"/>
        <function-ref name="resend" scoped="" ref="0x7f102c622720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f102c62e2e0" loc="40:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f102c62e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102c62e660"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102c62e7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102c62e980"/>
        <function-ref name="cancel" scoped="" ref="0x7f102c62eb10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102c62eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f102c619020" loc="48:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f102c619020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f102c6193a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f102c619530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f102c629020" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f102c629020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f102c6293a0"/>
        <function-ref name="stop" scoped="" ref="0x7f102c629530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f102c60e660" loc="51:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102c60e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f102c60e9e0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f102c60eb70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f102c60ed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f102c6233f0" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f102c6233f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f102c623770"/>
        <function-ref name="rfOff" scoped="" ref="0x7f102c623900"/>
        <function-ref name="rxOn" scoped="" ref="0x7f102c623a90"/>
        <function-ref name="startVReg" scoped="" ref="0x7f102c623c20"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f102c623db0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f102c62a020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f102c62a1b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f102c62a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f102c6197f0" loc="49:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f102c6197f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f102c619b70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f102c619d00"/>
        <function-ref name="led1On" scoped="" ref="0x7f102c618020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f102c6181b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f102c618340"/>
        <function-ref name="get" scoped="" ref="0x7f102c6184d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f102c618660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f102c618ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102c6187f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f102c618980"/>
        <function-ref name="led2On" scoped="" ref="0x7f102c618b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f102c62de60" loc="43:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102c62de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c62b210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c62b3a0"/>
        <function-ref name="request" scoped="" ref="0x7f102c62b530"/>
        <function-ref name="granted" scoped="" ref="0x7f102c62b6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c62b850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f102c609e40" loc="52:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f102c609e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f102c612310"/>
        <function-ref name="toIdle" scoped="" ref="0x7f102c6124a0"/>
        <function-ref name="isState" scoped="" ref="0x7f102c612630"/>
        <function-ref name="isIdle" scoped="" ref="0x7f102c6127c0"/>
        <function-ref name="requestState" scoped="" ref="0x7f102c612950"/>
        <function-ref name="forceState" scoped="" ref="0x7f102c612ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f102c6049e0" loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f102c6049e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102c604d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f102c603020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f102c606a10" loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f102c606a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102c606d90"/>
        <function-ref name="runTask" scoped="" ref="0x7f102c604020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f102c607a00" loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f102c607a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102c607d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f102c606020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f102c5adb80" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f102c5adb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f102c5b9020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f102c5b91b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f102c5b9340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f102c5b94d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f102c5b9660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f102c5b97f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f102c5b9980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f102c5b9b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f102c5b9ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f102c5b9e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f102c5b8020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f102c5b81b0"/>
        <function-ref name="sync" scoped="" ref="0x7f102c5b8340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f102c5b85d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f102c5b8760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f102c5ab020" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f102c5ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c5abc10"/>
        <function-ref name="readDone" scoped="" ref="0x7f102c5aa0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f102c5b8a60" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f102c5b8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f102c5b8de0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f102c5ac020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f102c5ac1b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f102c5ac340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f102c5ac4d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f102c5ac660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f102c5ac7f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f102c5ac980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102c5bd720" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102c5bd720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c5bdaa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c5bdc30"/>
        <function-ref name="request" scoped="" ref="0x7f102c5bddc0"/>
        <function-ref name="granted" scoped="" ref="0x7f102c5ba020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c5ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f102c5a2970" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f102c5a2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f102c5a2cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f102c5a2e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f102c5a1030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f102c5a11c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f102c5a1350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f102c5a14e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f102c5a1670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f102c5a1800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f102c5a1990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f102c5a1b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f102c5a1cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f102c5a1e40"/>
        <function-ref name="sync" scoped="" ref="0x7f102c5a0020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f102c5a02b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f102c5a0440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f102c57a8e0" loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f102c57a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c57ac60"/>
        <function-ref name="write" scoped="" ref="0x7f102c57adf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f102c59b020" loc="50:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f102c59b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f102c59b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f102c593d90" loc="52:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f102c593d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102c591670"/>
        <function-ref name="fired" scoped="" ref="0x7f102c5995d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f102c591020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102c599a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102c591b30"/>
        <function-ref name="start" scoped="" ref="0x7f102c59abc0"/>
        <function-ref name="stop" scoped="" ref="0x7f102c599110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f102c57e5f0" loc="64:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f102c57e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c57e970"/>
        <function-ref name="write" scoped="" ref="0x7f102c57eb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f102c58f380" loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f102c58f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c58f700"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c58f890"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c58fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c58fbb0"/>
        <function-ref name="get" scoped="" ref="0x7f102c58fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c58e020"/>
        <function-ref name="set" scoped="" ref="0x7f102c58e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c58e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f102c59fb40" loc="48:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f102c59fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c59e750"/>
        <function-ref name="readDone" scoped="" ref="0x7f102c59ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f102c568820" loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f102c568820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102c568ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f102c568d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f102c5791c0" loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f102c5791c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c579540"/>
        <function-ref name="write" scoped="" ref="0x7f102c5796d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f102c579a70" loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f102c579a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c579df0"/>
        <function-ref name="write" scoped="" ref="0x7f102c578020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f102c5833d0" loc="62:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f102c5833d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c583750"/>
        <function-ref name="write" scoped="" ref="0x7f102c5838e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f102c584810" loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f102c584810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f102c584b90"/>
        <function-ref name="changed" scoped="" ref="0x7f102c584d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f102c58b020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f102c58b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f102c590060" loc="53:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f102c590060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c5903e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c590570"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c590700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c590890"/>
        <function-ref name="get" scoped="" ref="0x7f102c590a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c590bb0"/>
        <function-ref name="set" scoped="" ref="0x7f102c590d40"/>
        <function-ref name="clr" scoped="" ref="0x7f102c58f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f102c577120" loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f102c577120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102c5776a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f102c58e6a0" loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f102c58e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c58ea20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c58ebb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c58ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c58d020"/>
        <function-ref name="get" scoped="" ref="0x7f102c58d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c58d340"/>
        <function-ref name="set" scoped="" ref="0x7f102c58d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c58d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102c5a34a0" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102c5a34a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102c5a3820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f102c57a020" loc="65:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102c57a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c57a3a0"/>
        <function-ref name="write" scoped="" ref="0x7f102c57a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f102c577a40" loc="72:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f102c577a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102c577dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f102c5761d0" loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f102c5761d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c576550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c5766e0"/>
        <function-ref name="request" scoped="" ref="0x7f102c576870"/>
        <function-ref name="granted" scoped="" ref="0x7f102c576a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c576b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f102c574d90" loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f102c574d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c573180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c573310"/>
        <function-ref name="request" scoped="" ref="0x7f102c5734a0"/>
        <function-ref name="granted" scoped="" ref="0x7f102c573630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c5737c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f102c5a0740" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f102c5a0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f102c5a0ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f102c5a0c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f102c5a0de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f102c59f020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f102c59f1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f102c59f340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f102c59f4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f102c59f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f102c583c80" loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f102c583c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c57e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f102c57e230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f102c57bb00" loc="61:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f102c57bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c57be80"/>
        <function-ref name="write" scoped="" ref="0x7f102c583030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f102c5752b0" loc="69:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f102c5752b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102c575630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f102c573a80" loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f102c573a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f102c573e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f102c571020"/>
        <function-ref name="led1On" scoped="" ref="0x7f102c5711b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f102c571340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f102c5714d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c571660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f102c5717f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f102c571e30"/>
        <function-ref name="set" scoped="" ref="0x7f102c571980"/>
        <function-ref name="led0On" scoped="" ref="0x7f102c571b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f102c571ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f102c569940" loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f102c569940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102c569cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f102c569e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102c5a3b10" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102c5a3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c5a2020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c5a21b0"/>
        <function-ref name="request" scoped="" ref="0x7f102c5a2340"/>
        <function-ref name="granted" scoped="" ref="0x7f102c5a24d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c5a2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f102c587520" loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f102c587520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c5878a0"/>
        <function-ref name="write" scoped="" ref="0x7f102c587a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f102c57fa90" loc="59:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f102c57fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c587020"/>
        <function-ref name="write" scoped="" ref="0x7f102c5871b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f102c58c0e0" loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f102c58c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102c58c460"/>
        <function-ref name="disable" scoped="" ref="0x7f102c58c5f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f102c58c780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f102c58c910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f102c574020" loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f102c574020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c5743a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c574530"/>
        <function-ref name="request" scoped="" ref="0x7f102c5746c0"/>
        <function-ref name="granted" scoped="" ref="0x7f102c574850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c5749e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f102c5759c0" loc="70:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f102c5759c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102c575d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102c4f27e0" loc="45:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102c4f27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102c4f2b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f102c4ef220" loc="46:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f102c4ef220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102c4edb30"/>
        <function-ref name="fired" scoped="" ref="0x7f102c4eea60"/>
        <function-ref name="startAt" scoped="" ref="0x7f102c4ed4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102c4ed020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102c4eb020"/>
        <function-ref name="start" scoped="" ref="0x7f102c4ee090"/>
        <function-ref name="stop" scoped="" ref="0x7f102c4ee5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102c4e9490" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102c4e9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102c4e9810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f102c4e9d20" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f102c4e9d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102c3f0670"/>
        <function-ref name="fired" scoped="" ref="0x7f102c3f1550"/>
        <function-ref name="startAt" scoped="" ref="0x7f102c3f0020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102c3f1a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102c3f0b30"/>
        <function-ref name="start" scoped="" ref="0x7f102c3f3b60"/>
        <function-ref name="stop" scoped="" ref="0x7f102c3f1090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f102b2b68b0" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f102b2b68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102b2b20d0"/>
        <function-ref name="fired" scoped="" ref="0x7f102b2b40d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f102b2b4a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102b2b4590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102b2b2590"/>
        <function-ref name="start" scoped="" ref="0x7f102b2b56e0"/>
        <function-ref name="stop" scoped="" ref="0x7f102b2b5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102b2b6060" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102b2b6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102b2b63e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f102b2ae870" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f102b2ae870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102b2ab090"/>
        <function-ref name="fired" scoped="" ref="0x7f102b2ac090"/>
        <function-ref name="startAt" scoped="" ref="0x7f102b2aca10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102b2ac550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102b2ab550"/>
        <function-ref name="start" scoped="" ref="0x7f102b2ad6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f102b2adbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102b2ae020" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102b2ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102b2ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f102b295020" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f102b295020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102b2953a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102b295530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102b2956c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102b295850"/>
        <function-ref name="fired" scoped="" ref="0x7f102b2959e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f102b298570" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f102b298570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102b2988f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102b298a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102b298c10"/>
        <function-ref name="get" scoped="" ref="0x7f102b298da0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102b297020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102b2971b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102b297340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102b2974d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102b297660"/>
        <function-ref name="setMode" scoped="" ref="0x7f102b2977f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102b297980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f102b297c10" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102b297c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102b296020"/>
        <function-ref name="getControl" scoped="" ref="0x7f102b2961b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102b296340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102b2964d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102b296660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102b2967f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102b296980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102b296b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f102b296ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f102c4c7ba0" loc="52:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f102c4c7ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102c4c6020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102c4c61b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102c4c6340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102c4c64d0"/>
        <function-ref name="fired" scoped="" ref="0x7f102c4c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f102c4cb4d0" loc="50:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f102c4cb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c4cb850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102c4cb9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102c4cbb70"/>
        <function-ref name="get" scoped="" ref="0x7f102c4cbd00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102c4ca020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102c4ca1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102c4ca340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102c4ca4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102c4ca660"/>
        <function-ref name="setMode" scoped="" ref="0x7f102c4ca7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102c4ca980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f102c4c8280" loc="51:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102c4c8280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102c4c8600"/>
        <function-ref name="getControl" scoped="" ref="0x7f102c4c8790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102c4c8920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102c4c8ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102c4c8c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102c4c8dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102c4c7020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102c4c71b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f102c4c7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f102b28cda0" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f102b28cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102b28b180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102b28b310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102b28b4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102b28b630"/>
        <function-ref name="fired" scoped="" ref="0x7f102b28b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f102b28e4c0" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f102b28e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102b28e840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102b28e9d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102b28eb60"/>
        <function-ref name="get" scoped="" ref="0x7f102b28ecf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102b28ee80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102b28d030"/>
        <function-ref name="getMode" scoped="" ref="0x7f102b28d1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102b28d350"/>
        <function-ref name="overflow" scoped="" ref="0x7f102b28d4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f102b28d670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102b28d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f102b292340" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f102b292340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102b28fba0"/>
        <function-ref name="fired" scoped="" ref="0x7f102b291b80"/>
        <function-ref name="startAt" scoped="" ref="0x7f102b28f550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102b28f090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102b28e090"/>
        <function-ref name="start" scoped="" ref="0x7f102b2911b0"/>
        <function-ref name="stop" scoped="" ref="0x7f102b2916c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102b293a30" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102b293a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102b293db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f102b28da90" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102b28da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102b28de10"/>
        <function-ref name="getControl" scoped="" ref="0x7f102b28c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102b28c1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102b28c340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102b28c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102b28c660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102b28c7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102b28c980"/>
        <function-ref name="setControl" scoped="" ref="0x7f102b28cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f102c476020" loc="43:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f102c476020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102c476e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102c475800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102c475340"/>
        <function-ref name="overflow" scoped="" ref="0x7f102c475cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f102c46c020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f102c46c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102c46ce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102c46b800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102c46b340"/>
        <function-ref name="overflow" scoped="" ref="0x7f102c46bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f102c4592c0" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f102c4592c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c459640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102c4597d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102c459960"/>
        <function-ref name="get" scoped="" ref="0x7f102c459af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102c459c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102c459e10"/>
        <function-ref name="getMode" scoped="" ref="0x7f102c458020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102c4581b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102c458340"/>
        <function-ref name="setMode" scoped="" ref="0x7f102c4584d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102c458660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f102c45b0a0" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f102c45b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102c45a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102c45a9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102c45a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102c45ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f102c437540" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f102c437540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102c4363d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102c436d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102c436890"/>
        <function-ref name="overflow" scoped="" ref="0x7f102c434260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f102c43a0f0" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f102c43a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102c438020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102c4389a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102c4384e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102c438e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f102b2a9a90" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f102b2a9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102b2a52e0"/>
        <function-ref name="fired" scoped="" ref="0x7f102b2a62e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f102b2a6c60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102b2a67a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102b2a57a0"/>
        <function-ref name="start" scoped="" ref="0x7f102b2a88d0"/>
        <function-ref name="stop" scoped="" ref="0x7f102b2a8de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f102b2a1210" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f102b2a1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102b29fb30"/>
        <function-ref name="fired" scoped="" ref="0x7f102b2a0a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f102b29f4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102b29f020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102b29e020"/>
        <function-ref name="start" scoped="" ref="0x7f102b2a0090"/>
        <function-ref name="stop" scoped="" ref="0x7f102b2a05a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f102b2a5e10" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f102b2a5e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102b2a4ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102b2a3670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102b2a31b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102b2a3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f102c3e9090" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f102c3e9090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3e9410"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3e95a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3e9730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3e98c0"/>
        <function-ref name="get" scoped="" ref="0x7f102c3e9a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3e9be0"/>
        <function-ref name="set" scoped="" ref="0x7f102c3e9d70"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f102c3e8390" loc="45:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f102c3e8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3e8710"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3e88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3e8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3e8bc0"/>
        <function-ref name="get" scoped="" ref="0x7f102c3e8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3e7020"/>
        <function-ref name="set" scoped="" ref="0x7f102c3e71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3e7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f102c3e76a0" loc="46:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f102c3e76a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3e7a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3e7bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3e7d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3e6020"/>
        <function-ref name="get" scoped="" ref="0x7f102c3e61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3e6340"/>
        <function-ref name="set" scoped="" ref="0x7f102c3e64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3e6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f102c3ebe60" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f102c3ebe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3ea210"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3ea3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3ea530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3ea6c0"/>
        <function-ref name="get" scoped="" ref="0x7f102c3ea850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3ea9e0"/>
        <function-ref name="set" scoped="" ref="0x7f102c3eab70"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3ead00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f102c3e5ce0" loc="48:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f102c3e5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3e40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3e4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3e43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3e4550"/>
        <function-ref name="get" scoped="" ref="0x7f102c3e46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3e4870"/>
        <function-ref name="set" scoped="" ref="0x7f102c3e4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3e4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f102c3eec70" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f102c3eec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3eb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3eb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3eb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3eb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c3eb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3eb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f102c3eb980"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3ebb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f102c3e69b0" loc="47:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f102c3e69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3e6d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3e5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3e51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3e5340"/>
        <function-ref name="get" scoped="" ref="0x7f102c3e54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3e5660"/>
        <function-ref name="set" scoped="" ref="0x7f102c3e57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3e5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f102c3e02f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3e02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3e0670"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3e0800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c3e0990"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3e0b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3e0cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c3e0e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3df020"/>
        <function-ref name="get" scoped="" ref="0x7f102c3df1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c3df340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c3df4d0"/>
        <function-ref name="set" scoped="" ref="0x7f102c3df660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c3df7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c3df980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c3dfc10"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3dfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f102c3e2020" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3e23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3e2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3e26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3e2850"/>
        <function-ref name="get" scoped="" ref="0x7f102c3e29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3e2b70"/>
        <function-ref name="set" scoped="" ref="0x7f102c3e2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3e0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f102c3dcde0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3dcde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3db180"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3db310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c3db4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3db630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3db7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c3db950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3dbae0"/>
        <function-ref name="get" scoped="" ref="0x7f102c3dbc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c3dbe00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c3da020"/>
        <function-ref name="set" scoped="" ref="0x7f102c3da1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c3da340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c3da4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c3da760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3da8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f102c3ddb60" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3ddb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3dc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3dc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3dc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3dc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c3dc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3dc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f102c3dc980"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3dcb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f102c3d7930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3d7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3d7cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3d7e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c3d6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3d61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3d6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c3d64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3d6660"/>
        <function-ref name="get" scoped="" ref="0x7f102c3d67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c3d6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c3d6b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c3d6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c3d6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c3d5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c3d52b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3d5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f102c3d8710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3d8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3d8a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3d8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3d8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3d7020"/>
        <function-ref name="get" scoped="" ref="0x7f102c3d71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3d7340"/>
        <function-ref name="set" scoped="" ref="0x7f102c3d74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3d7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f102c3d2480" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3d2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3d2800"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3d2990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c3d2b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3d2cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3d2e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c3d1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3d11b0"/>
        <function-ref name="get" scoped="" ref="0x7f102c3d1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c3d14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c3d1660"/>
        <function-ref name="set" scoped="" ref="0x7f102c3d17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c3d1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c3d1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c3d1da0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f102c3d31d0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3d31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3d3550"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3d36e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3d3870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3d3a00"/>
        <function-ref name="get" scoped="" ref="0x7f102c3d3b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3d3d20"/>
        <function-ref name="set" scoped="" ref="0x7f102c3d2020"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f102c3cd020" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3cd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3cd530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c3cd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3cd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3cd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c3cdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3cdd00"/>
        <function-ref name="get" scoped="" ref="0x7f102c3cb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c3cb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c3cb340"/>
        <function-ref name="set" scoped="" ref="0x7f102c3cb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c3cb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c3cb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c3cba80"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3cbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f102c3cfd70" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3cfd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3ce180"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3ce310"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3ce4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3ce630"/>
        <function-ref name="get" scoped="" ref="0x7f102c3ce7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3ce950"/>
        <function-ref name="set" scoped="" ref="0x7f102c3ceae0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3cec70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f102c3c8de0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3c8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3c7180"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3c7310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c3c74a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3c7630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3c77c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c3c7950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3c7ae0"/>
        <function-ref name="get" scoped="" ref="0x7f102c3c7c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c3c7e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c3c6020"/>
        <function-ref name="set" scoped="" ref="0x7f102c3c61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c3c6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c3c64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c3c6760"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3c68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f102c3c9b60" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3c9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3c8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3c81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3c8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3c84d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c3c8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3c87f0"/>
        <function-ref name="set" scoped="" ref="0x7f102c3c8980"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3c8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f102c3c3930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102c3c3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3c3cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3c3e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c3c2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3c21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3c2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c3c24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3c2660"/>
        <function-ref name="get" scoped="" ref="0x7f102c3c27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c3c2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c3c2b10"/>
        <function-ref name="set" scoped="" ref="0x7f102c3c2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c3c2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c3c1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c3c12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3c1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f102c3c4710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3c4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c3c4a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c3c4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c3c4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c3c3020"/>
        <function-ref name="get" scoped="" ref="0x7f102c3c31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c3c3340"/>
        <function-ref name="set" scoped="" ref="0x7f102c3c34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f102c3c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f102c3ae150" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f102c3ae150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f102c3ae4d0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c3ae660"/>
        <function-ref name="captured" scoped="" ref="0x7f102c3ae7f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f102c3ae980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f102c3aed60" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f102c3aed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102c3ac180"/>
        <function-ref name="disable" scoped="" ref="0x7f102c3ac310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f102c3ac4a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f102c3ac630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f102c3aca20" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f102c3aca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102c3acda0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c3a8020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f102c3a81b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f102c3a8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f102c3918f0" loc="42:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f102c3918f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102c391c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f102c391e00"/>
        <function-ref name="captured" scoped="" ref="0x7f102c390020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102c3901b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102c390340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f102c3904d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f102c3a5a20" loc="40:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f102c3a5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f102c3a5da0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c392020"/>
        <function-ref name="captured" scoped="" ref="0x7f102c3921b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f102c392340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f102c3925d0" loc="41:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102c3925d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102c392950"/>
        <function-ref name="getControl" scoped="" ref="0x7f102c392ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102c392c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102c392e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102c391020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102c3911b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102c391340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102c3914d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f102c391660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f102c3907a0" loc="43:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f102c3907a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c390b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c390cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c390e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c38f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c38f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c38f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c38f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c38f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c38f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c38f980"/>
        <function-ref name="set" scoped="" ref="0x7f102c38fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c38fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c38fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c38e120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c38e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f102c3818a0" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f102c3818a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c381c20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c381db0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c380020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c3801b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c380340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c3804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f102c376a30" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f102c376a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c376db0"/>
        <function-ref name="fired" scoped="" ref="0x7f102c375020"/>
        <function-ref name="disable" scoped="" ref="0x7f102c3751b0"/>
        <function-ref name="edge" scoped="" ref="0x7f102c375340"/>
        <function-ref name="enable" scoped="" ref="0x7f102c3754d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c375660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f102c37d8a0" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f102c37d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c37dc20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c37ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c37c020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c37c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c37c340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c37c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f102c37b8a0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f102c37b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c37bc20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c37bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c37a020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c37a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c37a340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c37a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f102c3878a0" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f102c3878a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c387c20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c387db0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c382020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c3821b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c382340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c3824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f102c3788a0" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f102c3788a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c378d20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c377020"/>
        <function-ref name="disable" scoped="" ref="0x7f102c3771b0"/>
        <function-ref name="edge" scoped="" ref="0x7f102c377340"/>
        <function-ref name="enable" scoped="" ref="0x7f102c3774d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c377660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f102c3808a0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f102c3808a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c380c20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c380db0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c37f020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c37f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c37f340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c37f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f102c375a30" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f102c375a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c375db0"/>
        <function-ref name="fired" scoped="" ref="0x7f102c374020"/>
        <function-ref name="disable" scoped="" ref="0x7f102c3741b0"/>
        <function-ref name="edge" scoped="" ref="0x7f102c374340"/>
        <function-ref name="enable" scoped="" ref="0x7f102c3744d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c374660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f102c3838f0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f102c3838f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c383c70"/>
        <function-ref name="fired" scoped="" ref="0x7f102c383e00"/>
        <function-ref name="disable" scoped="" ref="0x7f102c388020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c3881b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c388340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c3884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f102c37a8a0" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f102c37a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c37ac20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c37adb0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c379020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c3791b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c379340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c3794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f102c3828a0" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f102c3828a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c382c20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c382db0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c381020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c3811b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c381340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c3814d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f102c377a30" loc="57:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f102c377a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c377db0"/>
        <function-ref name="fired" scoped="" ref="0x7f102c376020"/>
        <function-ref name="disable" scoped="" ref="0x7f102c3761b0"/>
        <function-ref name="edge" scoped="" ref="0x7f102c376340"/>
        <function-ref name="enable" scoped="" ref="0x7f102c3764d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c376660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f102c37f8a0" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f102c37f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c37fc20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c37fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c37d020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c37d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c37d340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c37d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f102c37c8a0" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f102c37c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c37cc20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c37cdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c37b020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c37b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c37b340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c37b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f102c3888a0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f102c3888a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c388c20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c388db0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c387020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c3871b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c387340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c3874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f102c3798a0" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f102c3798a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c379c20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c379db0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c378020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c3781b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c378340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c3784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f102c36d8a0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f102c36d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c36dc20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c36ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c36c020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c36c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c36c340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c36c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f102c362a30" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f102c362a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c362db0"/>
        <function-ref name="fired" scoped="" ref="0x7f102c361020"/>
        <function-ref name="disable" scoped="" ref="0x7f102c3611b0"/>
        <function-ref name="edge" scoped="" ref="0x7f102c361340"/>
        <function-ref name="enable" scoped="" ref="0x7f102c3614d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c361660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f102c36a8a0" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f102c36a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c36ac20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c36adb0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c369020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c3691b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c369340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c3694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f102c3688a0" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f102c3688a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c368c20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c368db0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c367020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c3671b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c367340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c3674d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f102c36f8a0" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f102c36f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c36fc20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c36fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c36e020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c36e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c36e340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c36e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f102c3658a0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f102c3658a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c365d20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c363020"/>
        <function-ref name="disable" scoped="" ref="0x7f102c3631b0"/>
        <function-ref name="edge" scoped="" ref="0x7f102c363340"/>
        <function-ref name="enable" scoped="" ref="0x7f102c3634d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c363660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f102c36c8a0" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f102c36c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c36cc20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c36cdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c36b020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c36b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c36b340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c36b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f102c361a30" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f102c361a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c361db0"/>
        <function-ref name="fired" scoped="" ref="0x7f102c360020"/>
        <function-ref name="disable" scoped="" ref="0x7f102c3601b0"/>
        <function-ref name="edge" scoped="" ref="0x7f102c360340"/>
        <function-ref name="enable" scoped="" ref="0x7f102c3604d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c360660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f102c373810" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f102c373810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c373b90"/>
        <function-ref name="fired" scoped="" ref="0x7f102c373d20"/>
        <function-ref name="disable" scoped="" ref="0x7f102c370020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c3701b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c370340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c3704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f102c3678a0" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f102c3678a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c367c20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c367db0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c366020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c3661b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c366340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c3664d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f102c36e8a0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f102c36e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c36ec20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c36edb0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c36d020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c36d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c36d340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c36d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f102c363a30" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f102c363a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c363db0"/>
        <function-ref name="fired" scoped="" ref="0x7f102c362020"/>
        <function-ref name="disable" scoped="" ref="0x7f102c3621b0"/>
        <function-ref name="edge" scoped="" ref="0x7f102c362340"/>
        <function-ref name="enable" scoped="" ref="0x7f102c3624d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c362660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f102c36b8a0" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f102c36b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c36bc20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c36bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c36a020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c36a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c36a340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c36a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f102c3698a0" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f102c3698a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c369c20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c369db0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c368020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c3681b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c368340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c3684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f102c3708a0" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f102c3708a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c370c20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c370db0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c36f020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c36f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c36f340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c36f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f102c3668a0" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f102c3668a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c366c20"/>
        <function-ref name="fired" scoped="" ref="0x7f102c366db0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c365020"/>
        <function-ref name="edge" scoped="" ref="0x7f102c3651b0"/>
        <function-ref name="enable" scoped="" ref="0x7f102c365340"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c3654d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f102c28e610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f102c28e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c28e990"/>
        <function-ref name="fired" scoped="" ref="0x7f102c28eb20"/>
        <function-ref name="disable" scoped="" ref="0x7f102c28ecb0"/>
        <function-ref name="edge" scoped="" ref="0x7f102c28ee40"/>
        <function-ref name="enable" scoped="" ref="0x7f102c281020"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c2811b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f102c28fa30" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f102c28fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102c28fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c28e020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f102c28e1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f102c28e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f102c27f610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f102c27f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102c27f990"/>
        <function-ref name="fired" scoped="" ref="0x7f102c27fb20"/>
        <function-ref name="disable" scoped="" ref="0x7f102c27fcb0"/>
        <function-ref name="edge" scoped="" ref="0x7f102c27fe40"/>
        <function-ref name="enable" scoped="" ref="0x7f102c27d020"/>
        <function-ref name="getValue" scoped="" ref="0x7f102c27d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f102c280a70" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f102c280a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102c280df0"/>
        <function-ref name="disable" scoped="" ref="0x7f102c27f020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f102c27f1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f102c27f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f102be2fe50" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f102be2fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be2e410"/>
        <function-ref name="write" scoped="" ref="0x7f102be2e5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f102be3b160" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f102be3b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be3b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f102be35e50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f102be35e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be33210"/>
        <function-ref name="write" scoped="" ref="0x7f102be333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f102be2d880" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f102be2d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be2dc00"/>
        <function-ref name="write" scoped="" ref="0x7f102be2dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f102be240a0" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f102be240a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be24420"/>
        <function-ref name="write" scoped="" ref="0x7f102be245b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f102be2c0a0" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f102be2c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be2c420"/>
        <function-ref name="write" scoped="" ref="0x7f102be2c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f102be19500" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f102be19500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be19880"/>
        <function-ref name="write" scoped="" ref="0x7f102be19a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f102be1b500" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f102be1b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be1b880"/>
        <function-ref name="write" scoped="" ref="0x7f102be1ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f102be39490" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f102be39490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be39810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f102be21880" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f102be21880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be21c00"/>
        <function-ref name="write" scoped="" ref="0x7f102be21d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f102be1c500" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f102be1c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be1c880"/>
        <function-ref name="write" scoped="" ref="0x7f102be1ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f102be33e50" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f102be33e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be32210"/>
        <function-ref name="write" scoped="" ref="0x7f102be323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f102be32e50" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f102be32e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be2f210"/>
        <function-ref name="write" scoped="" ref="0x7f102be2f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f102be27880" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f102be27880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be27c00"/>
        <function-ref name="write" scoped="" ref="0x7f102be27d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f102be280a0" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f102be280a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be28420"/>
        <function-ref name="write" scoped="" ref="0x7f102be285b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f102be2c880" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f102be2c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be2cc00"/>
        <function-ref name="write" scoped="" ref="0x7f102be2cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f102be3da90" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102be3da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f102be3de10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f102be3c020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f102be3c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f102be38e00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f102be38e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be371c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f102be37490" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f102be37490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be37910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f102be20c80" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f102be20c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be1f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f102be1f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f102be37be0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f102be37be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f102be1cce0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f102be1cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be1b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f102be1b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f102be38160" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f102be38160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be384e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f102be210a0" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f102be210a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be21420"/>
        <function-ref name="write" scoped="" ref="0x7f102be215b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f102be32670" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f102be32670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be329f0"/>
        <function-ref name="write" scoped="" ref="0x7f102be32b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f102be33670" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102be33670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be339f0"/>
        <function-ref name="write" scoped="" ref="0x7f102be33b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f102be3cad0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f102be3cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be3ce50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f102be220a0" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f102be220a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be22420"/>
        <function-ref name="write" scoped="" ref="0x7f102be225b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f102be24880" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f102be24880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be24c00"/>
        <function-ref name="write" scoped="" ref="0x7f102be24d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f102be22880" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f102be22880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be22c00"/>
        <function-ref name="write" scoped="" ref="0x7f102be22d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f102be1ace0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f102be1ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be190a0"/>
        <function-ref name="write" scoped="" ref="0x7f102be19230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f102be1bce0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f102be1bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be1a0a0"/>
        <function-ref name="write" scoped="" ref="0x7f102be1a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f102be28880" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f102be28880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be28c00"/>
        <function-ref name="write" scoped="" ref="0x7f102be28d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f102be230a0" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f102be230a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be23420"/>
        <function-ref name="write" scoped="" ref="0x7f102be235b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f102be1dce0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f102be1dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be1c0a0"/>
        <function-ref name="write" scoped="" ref="0x7f102be1c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f102be2a880" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f102be2a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be2ac00"/>
        <function-ref name="write" scoped="" ref="0x7f102be2ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f102be19ce0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f102be19ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102be180a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102be18230"/>
        <function-ref name="write" scoped="" ref="0x7f102be183c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102be18550"/>
        <function-ref name="readDone" scoped="" ref="0x7f102be186e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f102be3c480" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f102be3c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be3c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f102be35670" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f102be35670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be359f0"/>
        <function-ref name="write" scoped="" ref="0x7f102be35b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f102be2f670" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f102be2f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be2f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102be2fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f102be260a0" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f102be260a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be26420"/>
        <function-ref name="write" scoped="" ref="0x7f102be265b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f102be2a0a0" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f102be2a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be2a420"/>
        <function-ref name="write" scoped="" ref="0x7f102be2a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f102be26880" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f102be26880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be26c00"/>
        <function-ref name="write" scoped="" ref="0x7f102be26d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f102be2e870" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f102be2e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be2ebf0"/>
        <function-ref name="write" scoped="" ref="0x7f102be2ed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f102be3b7b0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f102be3b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be3bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f102be2d0a0" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f102be2d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be2d420"/>
        <function-ref name="write" scoped="" ref="0x7f102be2d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102be3ee20" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102be3ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102be3d1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102be3d350"/>
        <function-ref name="request" scoped="" ref="0x7f102be3d4e0"/>
        <function-ref name="granted" scoped="" ref="0x7f102be3d670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102be3d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f102be362f0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f102be362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be36670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f102be35020" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f102be35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f102be1d500" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f102be1d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be1d880"/>
        <function-ref name="write" scoped="" ref="0x7f102be1da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f102be1fce0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f102be1fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be1d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f102be1d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f102be387b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f102be387b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be38b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f102be1f500" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f102be1f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be1f880"/>
        <function-ref name="write" scoped="" ref="0x7f102be1fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f102be1a500" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f102be1a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be1a880"/>
        <function-ref name="write" scoped="" ref="0x7f102be1aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f102be270a0" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f102be270a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be27420"/>
        <function-ref name="write" scoped="" ref="0x7f102be275b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f102be23880" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f102be23880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be23c00"/>
        <function-ref name="write" scoped="" ref="0x7f102be23d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f102be3be00" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f102be3be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be391c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f102be39ae0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f102be39ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be39e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f102be290a0" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f102be290a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be29420"/>
        <function-ref name="write" scoped="" ref="0x7f102be295b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f102be36940" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f102be36940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be36cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f102be29880" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f102be29880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be29c00"/>
        <function-ref name="write" scoped="" ref="0x7f102be29d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f102be200a0" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f102be200a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be20820"/>
        <function-ref name="write" scoped="" ref="0x7f102be209b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f102be189b0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f102be189b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102be18d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102be16020"/>
        <function-ref name="write" scoped="" ref="0x7f102be161b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102be16340"/>
        <function-ref name="readDone" scoped="" ref="0x7f102be164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f102c23e630" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f102c23e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102c23e9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102c23eb40"/>
        <function-ref name="write" scoped="" ref="0x7f102c23ecd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102c23ee60"/>
        <function-ref name="readDone" scoped="" ref="0x7f102c23d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f102c23f680" loc="40:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102c23f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f102c23fa00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f102c23fb90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f102c23fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f102c23d8c0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f102c23d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c23dc40"/>
        <function-ref name="write" scoped="" ref="0x7f102c23ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f102c23b6f0" loc="43:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f102c23b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c23ba70"/>
        <function-ref name="write" scoped="" ref="0x7f102c23bc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102c242960" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102c242960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c242ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c242e70"/>
        <function-ref name="request" scoped="" ref="0x7f102c23f030"/>
        <function-ref name="granted" scoped="" ref="0x7f102c23f1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c23f350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f102c23a510" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f102c23a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102c23a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f102c224680" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f102c224680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102c224a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102c224b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f102c235bb0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f102c235bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102c234020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102c2341b0"/>
        <function-ref name="write" scoped="" ref="0x7f102c234340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102c2344d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f102c234660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f102c239920" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102c239920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f102c239ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f102c239e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f102c236020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f102c22e080" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f102c22e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f102c22e400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f102c22d020" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f102c22d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f102c22d3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f102c22d530"/>
        <function-ref name="isState" scoped="" ref="0x7f102c22d6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f102c22d850"/>
        <function-ref name="requestState" scoped="" ref="0x7f102c22d9e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f102c22db70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f102c230400" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f102c230400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c230780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c230910"/>
        <function-ref name="request" scoped="" ref="0x7f102c230aa0"/>
        <function-ref name="granted" scoped="" ref="0x7f102c230c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c230dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f102c232020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f102c232020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c2323a0"/>
        <function-ref name="write" scoped="" ref="0x7f102c232530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f102c232db0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f102c232db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102c231180"/>
        <function-ref name="write" scoped="" ref="0x7f102c231310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f102c22ddf0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f102c22ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f102c22c1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f102c22c350"/>
        <function-ref name="led1On" scoped="" ref="0x7f102c22c4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f102c22c670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f102c22c800"/>
        <function-ref name="get" scoped="" ref="0x7f102c22c990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f102c22cb20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f102c2261b0"/>
        <function-ref name="set" scoped="" ref="0x7f102c22ccb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f102c22ce40"/>
        <function-ref name="led2On" scoped="" ref="0x7f102c226020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102c236810" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102c236810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c236b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c236d20"/>
        <function-ref name="request" scoped="" ref="0x7f102c235020"/>
        <function-ref name="granted" scoped="" ref="0x7f102c2351b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c235340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f102c220120" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f102c220120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102c2204a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f102c220630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f102c231ba0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f102c231ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102c230020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f102c1c5770" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f102c1c5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f102c1c5af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f102c1c5c80"/>
        <function-ref name="isState" scoped="" ref="0x7f102c1c5e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f102c1c2020"/>
        <function-ref name="requestState" scoped="" ref="0x7f102c1c21b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f102c1c2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f102c1c1280" loc="66:../../../..//tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f102c1c1280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f102c1c1600"/>
        <function-ref name="toIdle" scoped="" ref="0x7f102c1c1790"/>
        <function-ref name="isState" scoped="" ref="0x7f102c1c1920"/>
        <function-ref name="isIdle" scoped="" ref="0x7f102c1c1ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7f102c1c1c40"/>
        <function-ref name="forceState" scoped="" ref="0x7f102c1c1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102c1bc020" loc="66:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102c1bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102c1bc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f102c1bcb70" loc="67:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f102c1bcb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f102c1bb020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f102c1bb1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f102c1bb340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f102c1bb4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f102c1bb660"/>
        <function-ref name="forceState" scoped="" ref="0x7f102c1bb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f102be66020" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f102be66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102be663a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102be66530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f102c1a38f0" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f102c1a38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f102c1a3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102c1a4c40" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102c1a4c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c1a3020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c1a31b0"/>
        <function-ref name="request" scoped="" ref="0x7f102c1a3340"/>
        <function-ref name="granted" scoped="" ref="0x7f102c1a34d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c1a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f102b1b08f0" loc="82:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f102b1b08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f102b1b0c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f102b1b0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f102b1ae2b0" loc="87:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f102b1ae2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b1ae630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b1ae7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f102b1aea50" loc="89:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f102b1aea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f102b1aedd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f102b1af0c0" loc="83:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f102b1af0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f102b1af440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102b1b2c30" loc="81:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102b1b2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102b1b0020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102b1b01b0"/>
        <function-ref name="request" scoped="" ref="0x7f102b1b0340"/>
        <function-ref name="granted" scoped="" ref="0x7f102b1b04d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102b1b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f102b1af6d0" loc="85:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f102b1af6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f102b1afa50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f102b1afbe0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f102b1afd70"/>
        <function-ref name="write" scoped="" ref="0x7f102b1ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f102c13e5e0" loc="74:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102c13e5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f102c13e960"/>
        <function-ref name="configure" scoped="" ref="0x7f102c13eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f102c13a510" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f102c13a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102c13a890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102c13aa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f102c138600" loc="80:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f102c138600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f102c138980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f102c13edd0" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f102c13edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f102c13d180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f102c139370" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f102c139370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c1396f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c139880"/>
        <function-ref name="request" scoped="" ref="0x7f102c139a10"/>
        <function-ref name="granted" scoped="" ref="0x7f102c139ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c139d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102c144a20" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102c144a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c144da0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c13f020"/>
        <function-ref name="request" scoped="" ref="0x7f102c13f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f102c13f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c13f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f102c13d480" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f102c13d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f102c13d800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f102c13d990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f102c13db20"/>
        <function-ref name="write" scoped="" ref="0x7f102c13dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f102c1336a0" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f102c1336a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f102c133a20"/>
        <function-ref name="txDone" scoped="" ref="0x7f102c133bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f102c0c3c40" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102c0c3c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f102c0c1020"/>
        <function-ref name="configure" scoped="" ref="0x7f102c0c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f102c0c0700" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f102c0c0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102c0c0aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102c0c0c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f102c0bfe00" loc="82:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f102c0bfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f102c0be1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f102c0c1440" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f102c0c1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f102c0c17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f102c0be490" loc="83:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f102c0be490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f102c0be810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f102c0be9a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f102c0beb30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f102c0becc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f102c0bee50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f102c0bd020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f102c0bd1b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f102c0bd340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f102c0bd4d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f102c0bd660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f102c0bd7f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f102c0bd980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f102c0bdb10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f102c0bdda0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f102c0bc020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f102c0bc1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f102c0bc340"/>
        <function-ref name="isUart" scoped="" ref="0x7f102c0bc4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f102c0bc660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f102c0bc7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f102c0bc980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f102c0bcb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f102c0bcca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f102c0bce30"/>
        <function-ref name="getMode" scoped="" ref="0x7f102c0bb020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f102c0bb3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f102c0bb540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f102c0bb6d0"/>
        <function-ref name="tx" scoped="" ref="0x7f102c0bb860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f102c0bb9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f102c0bbb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f102c0bbd10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f102c0ba020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f102c0ba1b0"/>
        <function-ref name="rx" scoped="" ref="0x7f102c0ba340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f102c0ba4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f102c0ba660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f102c0ba7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f102c0ba980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f102c0bab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f102c0b95a0" loc="85:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f102c0b95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f102c0b9920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f102c0b9ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f102c0b9c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f102c0b9dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f102c0b8020"/>
        <function-ref name="get" scoped="" ref="0x7f102c0b81b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f102c0b8340"/>
        <function-ref name="led2On" scoped="" ref="0x7f102c0b8980"/>
        <function-ref name="set" scoped="" ref="0x7f102c0b8660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f102c0b84d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f102c0b87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f102c0bf060" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f102c0bf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c0bf400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c0bf590"/>
        <function-ref name="request" scoped="" ref="0x7f102c0bf720"/>
        <function-ref name="granted" scoped="" ref="0x7f102c0bf8b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c0bfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102c0c4e80" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102c0c4e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102c0c3240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102c0c33d0"/>
        <function-ref name="request" scoped="" ref="0x7f102c0c3560"/>
        <function-ref name="granted" scoped="" ref="0x7f102c0c36f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102c0c3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f102c0c1a50" loc="78:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f102c0c1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f102c0c1dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f102c0c0020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f102c0c01b0"/>
        <function-ref name="write" scoped="" ref="0x7f102c0c0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f102c0bade0" loc="84:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f102c0bade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f102c0b9180"/>
        <function-ref name="txDone" scoped="" ref="0x7f102c0b9310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f102c0b8c50" loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f102c0b8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102c0b7020"/>
        <function-ref name="runTask" scoped="" ref="0x7f102c0b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f102c0a88a0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f102c0a88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102c0a8c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f102c0ab3b0" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f102c0ab3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f102c0ab730"/>
        <function-ref name="txDone" scoped="" ref="0x7f102c0ab8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f102c0b2860" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f102c0b2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f102c0b2be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f102c0b2d70"/>
        <function-ref name="setUctl" scoped="" ref="0x7f102c0af020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f102c0af1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f102c0af340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f102c0af4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f102c0af660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f102c0af7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f102c0af980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f102c0afb10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f102c0afca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f102c0afe30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f102c0ae020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f102c0ae2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f102c0ae440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f102c0ae5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f102c0ae760"/>
        <function-ref name="isUart" scoped="" ref="0x7f102c0ae8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f102c0aea80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f102c0aec10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f102c0aeda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f102c0ad020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f102c0ad1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f102c0ad340"/>
        <function-ref name="getMode" scoped="" ref="0x7f102c0ad4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f102c0ad860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f102c0ad9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f102c0adb80"/>
        <function-ref name="tx" scoped="" ref="0x7f102c0add10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f102c0ac020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f102c0ac1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f102c0ac340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f102c0ac4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f102c0ac660"/>
        <function-ref name="rx" scoped="" ref="0x7f102c0ac7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f102c0ac980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f102c0acb10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f102c0acca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f102c0ace30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f102c0ab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f102c06e670" loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f102c06e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c06e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c06eb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c06ed10"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c06d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c06d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c06d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c06d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c06d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c06d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c06d980"/>
        <function-ref name="set" scoped="" ref="0x7f102c06db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c06dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c06de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c06c120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c06c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f102c0a1dc0" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f102c0a1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f102c0a0180"/>
        <function-ref name="txDone" scoped="" ref="0x7f102c0a0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f102c06c670" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f102c06c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c06c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c06cb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c06cd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c06b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c06b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c06b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c06b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c06b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c06b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c06b980"/>
        <function-ref name="set" scoped="" ref="0x7f102c06bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c06bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c06be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c06a120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c06a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f102c06a670" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f102c06a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c06a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c06ab80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c06ad10"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c069020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c0691b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c069340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c0694d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c069660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c0697f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c069980"/>
        <function-ref name="set" scoped="" ref="0x7f102c069b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c069ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c069e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c068120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c0682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f102c0a5020" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f102c0a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f102c0a53a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f102c0a5530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f102c0a56c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f102c0a5850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f102c0a59e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f102c0a5b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f102c0a5d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f102c0a4020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f102c0a41b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f102c0a4340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f102c0a44d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f102c0a4660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f102c0a47f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f102c0a4a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f102c0a4c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f102c0a4da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f102c0a3020"/>
        <function-ref name="isUart" scoped="" ref="0x7f102c0a31b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f102c0a3340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f102c0a34d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f102c0a3660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f102c0a37f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f102c0a3980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f102c0a3b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f102c0a3ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f102c0a2220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f102c0a23b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f102c0a2540"/>
        <function-ref name="tx" scoped="" ref="0x7f102c0a26d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f102c0a2860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f102c0a29f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f102c0a2b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f102c0a2d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f102c0a1020"/>
        <function-ref name="rx" scoped="" ref="0x7f102c0a11b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f102c0a1340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f102c0a14d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f102c0a1660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f102c0a17f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f102c0a1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f102c0775b0" loc="79:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f102c0775b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f102c077930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f102c077ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f102c077c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f102c077de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f102c09e020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f102c09e1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f102c09e340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f102c09e4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102c09e660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f102c09e7f0"/>
        <function-ref name="getData" scoped="" ref="0x7f102c09e980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f102c09eb10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f102c09eca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f102c09d020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f102c09d1b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f102c09d340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f102c09d4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f102c09d660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f102c09d7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f102c09d980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f102c09db10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f102c09dca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f102c09de30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f102c076020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f102c0761b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f102c076540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f102c0766d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f102c076860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f102c0769f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f102c076b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f102c076d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f102c075020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f102c0751b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f102c075340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f102c0754d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f102c075660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f102c0757f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f102c075980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f102c075b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f102c075ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f102c075e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f102c074020"/>
        <function-ref name="setData" scoped="" ref="0x7f102c0741b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f102c074340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f102c0744d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f102c074660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f102c0747f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f102c074980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f102c074b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f102c073420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f102c0735b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f102c073740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f102c0738d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f102c073a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f102c073bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f102c073d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f102c072020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f102c0721b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f102c072340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f102c070670" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f102c070670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c0709f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c070b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c070d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c06f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c06f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c06f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c06f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c06f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c06f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c06f980"/>
        <function-ref name="set" scoped="" ref="0x7f102c06fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c06fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c06fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c06e120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c06e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f102c0a0750" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f102c0a0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102c0a0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f102c072700" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f102c072700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102c072a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f102c072c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102c072da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102c071020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102c0711b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102c071340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102c0714d0"/>
        <function-ref name="get" scoped="" ref="0x7f102c071660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102c0717f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102c071980"/>
        <function-ref name="set" scoped="" ref="0x7f102c071b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102c071ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102c071e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102c070120"/>
        <function-ref name="clr" scoped="" ref="0x7f102c0702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f102b1a62c0" loc="42:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f102b1a62c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f102b1a6640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f102b1a67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f102b19d440" loc="46:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f102b19d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102b19d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f102b196760" loc="51:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102b196760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f102b196ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f102b196c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f102b19da50" loc="48:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f102b19da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f102b19ddd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f102b19c020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f102b19c1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f102b19c340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f102b19c4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f102b19c660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f102b19c7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f102b19c980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102b19cb10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f102b19cca0"/>
        <function-ref name="getData" scoped="" ref="0x7f102b19ce30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f102b19b020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f102b19b1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f102b19b440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f102b19b5d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f102b19b760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f102b19b8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f102b19ba80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f102b19bc10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f102b19bda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f102b19a020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f102b19a1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f102b19a340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f102b19a4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f102b19a660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f102b19a9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f102b19ab80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f102b19ad10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f102b199020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f102b1991b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f102b199340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f102b1994d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f102b199660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f102b1997f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f102b199980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f102b199b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f102b199ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f102b199e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f102b198020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f102b1981b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f102b198340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f102b1984d0"/>
        <function-ref name="setData" scoped="" ref="0x7f102b198660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f102b1987f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f102b198980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f102b198b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f102b198ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f102b198e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f102b197020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f102b1975b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f102b197740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f102b1978d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f102b197a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f102b197bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f102b197d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f102b196020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f102b1961b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f102b196340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f102b1964d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f102b19ec10" loc="45:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f102b19ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f102b19d020"/>
        <function-ref name="txDone" scoped="" ref="0x7f102b19d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102b1a7640" loc="41:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102b1a7640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102b1a79c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102b1a7b50"/>
        <function-ref name="request" scoped="" ref="0x7f102b1a7ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f102b1a7e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102b1a6030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f102b1a52b0" loc="44:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f102b1a52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f102b1a5630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f102b1a57c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f102b1a5950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f102b1a5ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f102b1a5c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f102b1a5e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f102b1a3020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f102b1a31b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f102b1a3340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f102b1a34d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f102b1a3660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f102b1a37f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f102b1a3980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f102b1a3c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f102b1a3da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f102b1a0020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f102b1a01b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f102b1a0340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f102b1a04d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f102b1a0660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f102b1a07f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f102b1a0980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f102b1a0b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f102b1a0ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102b1a0e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f102b19f220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f102b19f3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f102b19f540"/>
        <function-ref name="tx" scoped="" ref="0x7f102b19f6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f102b19f860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f102b19f9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f102b19fb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f102b19fd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f102b19e020"/>
        <function-ref name="rx" scoped="" ref="0x7f102b19e1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f102b19e340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f102b19e4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f102b19e660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f102b19e7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f102b19e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f102b1a6a60" loc="43:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f102b1a6a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f102b1a6de0"/>
        <function-ref name="userId" scoped="" ref="0x7f102b1a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f102bfc78a0" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f102bfc78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f102bfc7c20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f102bfc7db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f102bfc4020" loc="45:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102bfc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f102bfc43a0"/>
        <function-ref name="configure" scoped="" ref="0x7f102bfc4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f102bfcca80" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f102bfcca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f102bfcce00"/>
        <function-ref name="txDone" scoped="" ref="0x7f102bfc9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102bfc85c0" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102bfc85c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102bfc8940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102bfc8ad0"/>
        <function-ref name="request" scoped="" ref="0x7f102bfc8c60"/>
        <function-ref name="granted" scoped="" ref="0x7f102bfc8df0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102bfc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f102bfc99a0" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f102bfc99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102bfc9d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f102bfc5130" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f102bfc5130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f102bfc54b0"/>
        <function-ref name="userId" scoped="" ref="0x7f102bfc5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f102bfaf4b0" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f102bfaf4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f102bfaf830"/>
        <function-ref name="userId" scoped="" ref="0x7f102bfaf9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f102bfc25c0" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f102bfc25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f102bfc2960"/>
        <function-ref name="txDone" scoped="" ref="0x7f102bfc2af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f102bfb1e70" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f102bfb1e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102bfaf220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f102bfb1020" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f102bfb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102bfb13c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f102bfb1690" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f102bfb1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f102bfb1a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f102bfb1ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f102bf36bf0" loc="92:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f102bf36bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f102bf35020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f102bf351b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f102bf34930" loc="96:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102bf34930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f102bf34cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f102bf34e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f102bf35400" loc="93:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f102bf35400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102bf35780"/>
        <function-ref name="requested" scoped="" ref="0x7f102bf35910"/>
        <function-ref name="granted" scoped="" ref="0x7f102bf35aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102bf35c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f102bf35dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102bf37e60" loc="91:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102bf37e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102bf36230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102bf363c0"/>
        <function-ref name="request" scoped="" ref="0x7f102bf36550"/>
        <function-ref name="granted" scoped="" ref="0x7f102bf366e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102bf36870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f102bf34060" loc="94:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f102bf34060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f102bf343e0"/>
        <function-ref name="userId" scoped="" ref="0x7f102bf34570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102b12c140" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102b12c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102b12c4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f102b12c750" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f102b12c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f102b12cad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f102b12cc60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f102b12cdf0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f102b12b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f102b128850" loc="55:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f102b128850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f102b128bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f102b128d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f102b126590" loc="60:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f102b126590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f102b126930"/>
        <function-ref name="configure" scoped="" ref="0x7f102b126ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f102b126d50" loc="61:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f102b126d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f102b125100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f102b125290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f102b125420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f102b1255b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f102b127020" loc="56:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f102b127020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102b1273a0"/>
        <function-ref name="requested" scoped="" ref="0x7f102b127530"/>
        <function-ref name="granted" scoped="" ref="0x7f102b1276c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102b127850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f102b1279e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f102b125800" loc="62:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f102b125800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f102b125b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f102b125d10"/>
        <function-ref name="led1On" scoped="" ref="0x7f102b124020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f102b1241b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f102b124340"/>
        <function-ref name="get" scoped="" ref="0x7f102b1244d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f102b124660"/>
        <function-ref name="led0On" scoped="" ref="0x7f102b124ca0"/>
        <function-ref name="set" scoped="" ref="0x7f102b124980"/>
        <function-ref name="led2On" scoped="" ref="0x7f102b1247f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f102b124b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102b129970" loc="54:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102b129970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102b129d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102b128020"/>
        <function-ref name="request" scoped="" ref="0x7f102b1281b0"/>
        <function-ref name="granted" scoped="" ref="0x7f102b128340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102b1284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f102b127c30" loc="57:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f102b127c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f102b126020"/>
        <function-ref name="userId" scoped="" ref="0x7f102b1261b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f102b123020" loc="75:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f102b123020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102b1233a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f102b123530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f102bf2c880" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f102bf2c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f102bf2cc00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f102bf2cd90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f102bf29020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f102bf291b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f102bf29340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f102bf294d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f102bf29660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f102bf297f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102bf29980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f102bf29b10"/>
        <function-ref name="getData" scoped="" ref="0x7f102bf29ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f102bf29e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f102bf28020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f102bf282b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f102bf28440"/>
        <function-ref name="getIV" scoped="" ref="0x7f102bf285d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f102bf28760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f102bf288f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f102bf28a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f102bf28c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f102bf28da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f102bf27020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f102bf271b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f102bf27340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f102bf274d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f102bf27860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f102bf279f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f102bf27b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f102bf27d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f102bf26020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f102bf261b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f102bf26340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f102bf264d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f102bf26660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f102bf267f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f102bf26980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f102bf26b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f102bf26ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f102bf26e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f102bf25020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f102bf251b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f102bf25340"/>
        <function-ref name="setData" scoped="" ref="0x7f102bf254d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f102bf25660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f102bf257f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f102bf25980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f102bf25b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f102bf25ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f102bf25e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f102bf24420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f102bf245b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f102bf24740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f102bf248d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f102bf24a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f102bf24bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f102bf24d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f102bf23020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f102bf231b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f102bf23340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f102bf19250" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f102bf19250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f102bf195d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f102bf19760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f102bf198f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f102bf19a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f102bf19c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f102bf19da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f102bf18020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f102bf181b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f102bf18340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f102bf184d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f102bf18660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f102bf187f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f102bf18980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f102bf18c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f102bf18da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f102bf17020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f102bf171b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f102bf17340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f102bf174d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f102bf17660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f102bf177f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f102bf17980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f102bf17b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f102bf17ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f102bf17e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f102bf16220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f102bf163b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f102bf16540"/>
        <function-ref name="tx" scoped="" ref="0x7f102bf166d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f102bf16860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f102bf169f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f102bf16b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f102bf16d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f102bf15020"/>
        <function-ref name="rx" scoped="" ref="0x7f102bf151b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f102bf15340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f102bf154d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f102bf15660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f102bf157f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f102bf15980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f102bf13cb0" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f102bf13cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102bf120a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102bf12230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102bf123c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102bf12550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102bf126e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102bf12870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102bf12a00"/>
        <function-ref name="get" scoped="" ref="0x7f102bf12b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102bf12d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102bf11020"/>
        <function-ref name="set" scoped="" ref="0x7f102bf111b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102bf11340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102bf114d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102bf11760"/>
        <function-ref name="clr" scoped="" ref="0x7f102bf118f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f102bf20430" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f102bf20430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f102bf207b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f102bf20940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f102bf20ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f102bf20c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f102bf20df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f102bf1f020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f102bf1f1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f102bf1f340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102bf1f4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f102bf1f660"/>
        <function-ref name="getData" scoped="" ref="0x7f102bf1f7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f102bf1f980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f102bf1fb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f102bf1fda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f102bf1e020"/>
        <function-ref name="getIV" scoped="" ref="0x7f102bf1e1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f102bf1e340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f102bf1e4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f102bf1e660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f102bf1e7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f102bf1e980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f102bf1eb10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f102bf1eca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f102bf1ee30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f102bf1d020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f102bf1d3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f102bf1d540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f102bf1d6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f102bf1d860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f102bf1d9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f102bf1db80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f102bf1dd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f102bf1c020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f102bf1c1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f102bf1c340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f102bf1c4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f102bf1c660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f102bf1c7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f102bf1c980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f102bf1cb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f102bf1cca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f102bf1ce30"/>
        <function-ref name="setData" scoped="" ref="0x7f102bf1b020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f102bf1b1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f102bf1b340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f102bf1b4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f102bf1b660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f102bf1b7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f102bf1b980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f102bf1a020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f102bf1a1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f102bf1a340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f102bf1a4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f102bf1a660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f102bf1a7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f102bf1a980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f102bf1ab10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f102bf1aca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f102bf1ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f102bf15d40" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f102bf15d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102bf140e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102bf14270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102bf14400"/>
        <function-ref name="toggle" scoped="" ref="0x7f102bf14590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102bf14720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102bf148b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102bf14a40"/>
        <function-ref name="get" scoped="" ref="0x7f102bf14bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102bf14d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102bf13020"/>
        <function-ref name="set" scoped="" ref="0x7f102bf131b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102bf13340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102bf134d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102bf13760"/>
        <function-ref name="clr" scoped="" ref="0x7f102bf138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f102bdfec60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f102bdfec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdfd210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdfd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f102be09da0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f102be09da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be08180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f102be02b50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f102be02b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be01020"/>
        <function-ref name="write" scoped="" ref="0x7f102be011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f102bdfc670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f102bdfc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdfc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdfcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f102bdf5e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f102bdf5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf4210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f102bdfce50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f102bdfce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdfb210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdfb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f102bde82f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f102bde82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bde8670"/>
        <function-ref name="write" scoped="" ref="0x7f102bde8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f102bdeb2f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f102bdeb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdeb670"/>
        <function-ref name="write" scoped="" ref="0x7f102bdeb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f102be07120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f102be07120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be074a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f102bdf0670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f102bdf0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf09f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f102bdec2f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f102bdec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdec670"/>
        <function-ref name="write" scoped="" ref="0x7f102bdec800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f102be01c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f102be01c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be00020"/>
        <function-ref name="write" scoped="" ref="0x7f102be001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f102be00c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f102be00c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdfe020"/>
        <function-ref name="write" scoped="" ref="0x7f102bdfe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f102bdf6670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f102bdf6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf69f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f102bdf9e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f102bdf9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf7210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f102bdfb670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f102bdfb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdfb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdfbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f102be0a760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102be0a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f102be0aae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f102be0ac70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f102be0ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f102be06aa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f102be06aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be06e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f102be04120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f102be04120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be045a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f102bdefa70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f102bdefa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdefdf0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f102be04870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f102be04870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be04bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f102bdecad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f102bdecad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdece50"/>
        <function-ref name="write" scoped="" ref="0x7f102bdeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f102be07dc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f102be07dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be06180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f102bdf2e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f102bdf2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf0210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f102be00480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f102be00480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be00800"/>
        <function-ref name="write" scoped="" ref="0x7f102be00990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f102be01480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102be01480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be01800"/>
        <function-ref name="write" scoped="" ref="0x7f102be01990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f102be09750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f102be09750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be09ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f102bdf3e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f102bdf3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf2210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f102bdf4670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f102bdf4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf49f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f102bdf2670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f102bdf2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf29f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f102bde9ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f102bde9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bde9e50"/>
        <function-ref name="write" scoped="" ref="0x7f102bde8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f102bdebad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f102bdebad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdebe50"/>
        <function-ref name="write" scoped="" ref="0x7f102bde9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f102bdf7670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f102bdf7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf79f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f102bdf4e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f102bdf4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf3210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f102bdedad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f102bdedad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdede50"/>
        <function-ref name="write" scoped="" ref="0x7f102bdec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f102bdfa670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f102bdfa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdfa9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdfab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f102bde8ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f102bde8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102bde8e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102bde7020"/>
        <function-ref name="write" scoped="" ref="0x7f102bde71b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102bde7340"/>
        <function-ref name="readDone" scoped="" ref="0x7f102bde74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f102be09100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f102be09100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be09480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f102be02370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f102be02370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102be026f0"/>
        <function-ref name="write" scoped="" ref="0x7f102be02880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f102bdfe480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f102bdfe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdfe800"/>
        <function-ref name="write" scoped="" ref="0x7f102bdfe990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f102bdf6e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f102bdf6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf5210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f102bdfbe50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f102bdfbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdfa210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdfa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f102bdf5670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f102bdf5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf59f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f102bdfd670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f102bdfd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdfd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdfdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f102be08450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f102be08450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be087d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f102bdfde50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f102bdfde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdfc210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdfc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102be0ba80" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102be0ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102be0be00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102be0a020"/>
        <function-ref name="request" scoped="" ref="0x7f102be0a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f102be0a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102be0a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f102be03020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f102be03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f102be03cc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f102be03cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be020a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f102bded2f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f102bded2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bded670"/>
        <function-ref name="write" scoped="" ref="0x7f102bded800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f102bdeead0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f102bdeead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdeee50"/>
        <function-ref name="write" scoped="" ref="0x7f102bded020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f102be06450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f102be06450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be067d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f102bdee2f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f102bdee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdee670"/>
        <function-ref name="write" scoped="" ref="0x7f102bdee800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f102bde92f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f102bde92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bde9670"/>
        <function-ref name="write" scoped="" ref="0x7f102bde9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f102bdf7e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f102bdf7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf6210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f102bdf3670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f102bdf3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf39f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f102be08aa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f102be08aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be08e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f102be07770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f102be07770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be07af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f102bdfae50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f102bdfae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf9210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f102be03670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f102be03670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102be039f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f102bdf9670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f102bdf9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdf99f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdf9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f102bdf0e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f102bdf0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdef610"/>
        <function-ref name="write" scoped="" ref="0x7f102bdef7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f102bde77a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f102bde77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102bde7b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102bde7cb0"/>
        <function-ref name="write" scoped="" ref="0x7f102bde7e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102bde6020"/>
        <function-ref name="readDone" scoped="" ref="0x7f102bde61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f102bdd2c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f102bdd2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdd1210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdd13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f102bdddda0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f102bdddda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bddb180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f102bdd5b50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f102bdd5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdd4020"/>
        <function-ref name="write" scoped="" ref="0x7f102bdd41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f102bdd0670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f102bdd0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdd09f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdd0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f102bdc9e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f102bdc9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc7210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f102bdd0e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f102bdd0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdce210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f102bdbc2f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f102bdbc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdbc670"/>
        <function-ref name="write" scoped="" ref="0x7f102bdbc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f102bdbe2f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f102bdbe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdbe670"/>
        <function-ref name="write" scoped="" ref="0x7f102bdbe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f102bdda120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f102bdda120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bdda4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f102bdc4670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f102bdc4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc49f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f102bdbf2f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f102bdbf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdbf670"/>
        <function-ref name="write" scoped="" ref="0x7f102bdbf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f102bdd4c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f102bdd4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdd3020"/>
        <function-ref name="write" scoped="" ref="0x7f102bdd31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f102bdd3c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f102bdd3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdd2020"/>
        <function-ref name="write" scoped="" ref="0x7f102bdd21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f102bdca670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f102bdca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdca9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdcab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f102bdcce50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f102bdcce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdcb210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdcb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f102bdce670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f102bdce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdce9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f102bdde760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102bdde760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f102bddeae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f102bddec70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f102bddee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f102bdd9aa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f102bdd9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bdd9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f102bdd8120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f102bdd8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bdd85a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f102bdc3a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f102bdc3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc3df0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f102bdd8870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f102bdd8870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bdd8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f102bdbfad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f102bdbfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdbfe50"/>
        <function-ref name="write" scoped="" ref="0x7f102bdbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f102bddadc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f102bddadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bdd9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f102bdc5e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f102bdc5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc4210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f102bdd3480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f102bdd3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdd3800"/>
        <function-ref name="write" scoped="" ref="0x7f102bdd3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f102bdd4480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102bdd4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdd4800"/>
        <function-ref name="write" scoped="" ref="0x7f102bdd4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f102bddd750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f102bddd750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bdddad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f102bdc6e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f102bdc6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc5210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f102bdc7670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f102bdc7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc79f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f102bdc5670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f102bdc5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc59f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f102bdbdad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f102bdbdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdbde50"/>
        <function-ref name="write" scoped="" ref="0x7f102bdbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f102bdbead0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f102bdbead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdbee50"/>
        <function-ref name="write" scoped="" ref="0x7f102bdbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f102bdcb670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f102bdcb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdcb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdcbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f102bdc7e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f102bdc7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc6210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f102bdc0ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f102bdc0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc0e50"/>
        <function-ref name="write" scoped="" ref="0x7f102bdbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f102bdcd670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f102bdcd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdcd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdcdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f102bdbcad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f102bdbcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102bdbce50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102bdbb020"/>
        <function-ref name="write" scoped="" ref="0x7f102bdbb1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102bdbb340"/>
        <function-ref name="readDone" scoped="" ref="0x7f102bdbb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f102bddd100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f102bddd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bddd480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f102bdd5370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f102bdd5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdd56f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdd5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f102bdd2480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f102bdd2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdd2800"/>
        <function-ref name="write" scoped="" ref="0x7f102bdd2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f102bdcae50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f102bdcae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc9210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f102bdcee50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f102bdcee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdcd210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdcd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f102bdc9670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f102bdc9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc99f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f102bdd1670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f102bdd1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdd19f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdd1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f102bddb450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f102bddb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bddb7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f102bdd1e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f102bdd1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdd0210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdd03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102bddf9e0" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102bddf9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102bddfd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102bdde020"/>
        <function-ref name="request" scoped="" ref="0x7f102bdde1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f102bdde340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102bdde4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f102bdd7020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f102bdd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bdd73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f102bdd7cc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f102bdd7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bdd50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f102bdc02f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f102bdc02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc0670"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f102bdc2ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f102bdc2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc2e50"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f102bdd9450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f102bdd9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bdd97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f102bdc22f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f102bdc22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc2670"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f102bdbd2f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f102bdbd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdbd670"/>
        <function-ref name="write" scoped="" ref="0x7f102bdbd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f102bdcbe50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f102bdcbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdca210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f102bdc6670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f102bdc6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc69f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f102bddbaa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f102bddbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bddbe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f102bdda770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f102bdda770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bddaaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f102bdcde50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f102bdcde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdcc210"/>
        <function-ref name="write" scoped="" ref="0x7f102bdcc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f102bdd7670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f102bdd7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bdd79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f102bdcc670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f102bdcc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdcc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f102bdc4e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f102bdc4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bdc3610"/>
        <function-ref name="write" scoped="" ref="0x7f102bdc37a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f102bdbb7a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f102bdbb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102bdbbb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102bdbbcb0"/>
        <function-ref name="write" scoped="" ref="0x7f102bdbbe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102bdb9020"/>
        <function-ref name="readDone" scoped="" ref="0x7f102bdb91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f102bdb2b30" loc="54:../../../..//tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f102bdb2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f102bdaf020"/>
        <function-ref name="changed" scoped="" ref="0x7f102bdaf1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f102bdaf340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f102bdaf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f102bdb1d30" loc="13:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f102bdb1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f102bd9b0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f102bd96310" loc="5:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f102bd96310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f102bd96690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f102bd93880" loc="8:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f102bd93880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bd93c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f102bd88020" loc="8:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f102bd88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bd883a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f102bd7ebd0" loc="14:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f102bd7ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bd82020"/>
        <function-ref name="write" scoped="" ref="0x7f102bd821b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f102bd82530" loc="15:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f102bd82530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f102bd828b0"/>
        <function-ref name="stop" scoped="" ref="0x7f102bd82a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f102bd83140" loc="11:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f102bd83140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bd834c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f102bd87c50" loc="8:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f102bd87c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bd6e020"/>
        <function-ref name="write" scoped="" ref="0x7f102bd6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f102bd6e540" loc="11:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f102bd6e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102bd6e8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102bd6ea50"/>
        <function-ref name="toggle" scoped="" ref="0x7f102bd6ebe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102bd6ed70"/>
        <function-ref name="get" scoped="" ref="0x7f102bd6d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102bd6d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f102bd6d340"/>
        <function-ref name="clr" scoped="" ref="0x7f102bd6d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f102bd65950" loc="15:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f102bd65950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5dd70"/>
            <typename><typedef-ref name="TMicro" ref="0x7f102cb5c180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f102bd68780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f102bd6a150" loc="11:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f102bd6a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bd6a4d0"/>
        <function-ref name="write" scoped="" ref="0x7f102bd6a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f102bd6a9f0" loc="14:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f102bd6a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102bd6ad70"/>
        <function-ref name="isInput" scoped="" ref="0x7f102bd69020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102bd691b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102bd69340"/>
        <function-ref name="get" scoped="" ref="0x7f102bd694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102bd69660"/>
        <function-ref name="set" scoped="" ref="0x7f102bd697f0"/>
        <function-ref name="clr" scoped="" ref="0x7f102bd69980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f102bd6cca0" loc="41:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f102bd6cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5dd70"/>
            <typename><typedef-ref name="TMicro" ref="0x7f102cb5c180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f102bd44ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f102bd42a90" loc="54:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f102bd42a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5dd70"/>
            <typename><typedef-ref name="TMicro" ref="0x7f102cb5c180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f102bd418d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f102bd32020" loc="55:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f102bd32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5dd70"/>
            <typename><typedef-ref name="TMicro" ref="0x7f102cb5c180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102bd32e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102bd30800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102bd30340"/>
        <function-ref name="overflow" scoped="" ref="0x7f102bd30cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f102bd2c530" loc="46:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f102bd2c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5dd70"/>
            <typename><typedef-ref name="TMicro" ref="0x7f102cb5c180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102bd2b3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102bd2bd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102bd2b890"/>
        <function-ref name="overflow" scoped="" ref="0x7f102bd2a260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f102bd25020" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f102bd25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102bd253a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102bd25530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102bd256c0"/>
        <function-ref name="get" scoped="" ref="0x7f102bd25850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102bd259e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102bd25b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f102bd25d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102bd24020"/>
        <function-ref name="overflow" scoped="" ref="0x7f102bd241b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f102bd24340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102bd244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f102bd28e50" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f102bd28e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5dd70"/>
            <typename><typedef-ref name="TMicro" ref="0x7f102cb5c180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102bd27ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102bd26670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102bd261b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102bd26b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f102bd22590" loc="3:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f102bd22590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102bd22910"/>
        <function-ref name="isInput" scoped="" ref="0x7f102bd22aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102bd22c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102bd22dc0"/>
        <function-ref name="get" scoped="" ref="0x7f102bd1f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102bd1f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f102bd1f340"/>
        <function-ref name="clr" scoped="" ref="0x7f102bd1f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f102bd1dc50" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f102bd1dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102bd1c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f102bd1c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f102bd1c340"/>
        <function-ref name="toggle" scoped="" ref="0x7f102bd1c4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102bd1c660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f102bd1c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102bd1c980"/>
        <function-ref name="get" scoped="" ref="0x7f102bd1cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f102bd1cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f102bd1ce30"/>
        <function-ref name="set" scoped="" ref="0x7f102bd1b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f102bd1b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f102bd1b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f102bd1b5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f102bd1b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f102bd1e9e0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f102bd1e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102bd1ed60"/>
        <function-ref name="isInput" scoped="" ref="0x7f102bd1d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f102bd1d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102bd1d340"/>
        <function-ref name="get" scoped="" ref="0x7f102bd1d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102bd1d660"/>
        <function-ref name="set" scoped="" ref="0x7f102bd1d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f102bd1d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f102bd20a20" loc="14:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f102bd20a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f102bd20da0"/>
        <function-ref name="stop" scoped="" ref="0x7f102bd16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f102bd07cb0" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f102bd07cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f102bd060a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f102bd06230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f102bd063c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f102bd06550"/>
        <function-ref name="setCca" scoped="" ref="0x7f102bd066e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f102bd06870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f102bd03990" loc="47:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f102bd03990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f102bd03d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f102bd07020" loc="45:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f102bd07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102bd073a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102bd07530"/>
        <function-ref name="modify" scoped="" ref="0x7f102bd076c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102bd07850"/>
        <function-ref name="resend" scoped="" ref="0x7f102bd079e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f102bd0a6c0" loc="44:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f102bd0a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f102bd0aa40"/>
        <function-ref name="stop" scoped="" ref="0x7f102bd0abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f102bd05150" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f102bd05150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f102bd054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f102bcf9970" loc="51:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f102bcf9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f102bcf9cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f102bcf9e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f102bcf8030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f102bcf81c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f102bcf8350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f102bcf84e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f102bcf1950" loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f102bcf1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f102bcef020"/>
        <function-ref name="clear" scoped="" ref="0x7f102bcef750"/>
        <function-ref name="isValid" scoped="" ref="0x7f102bcf0780"/>
        <function-ref name="set" scoped="" ref="0x7f102bcefe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f102bcd8020" loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f102bcd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bcd83a0"/>
        <function-ref name="write" scoped="" ref="0x7f102bcd8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f102bcd8890" loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f102bcd8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bcd8c10"/>
        <function-ref name="write" scoped="" ref="0x7f102bcd8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f102bcf8900" loc="52:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f102bcf8900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f102bcf8c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f102bcdb530" loc="72:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f102bcdb530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bcdb8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f102bcec880" loc="60:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f102bcec880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f102bcecc00"/>
        <function-ref name="disable" scoped="" ref="0x7f102bcecd90"/>
        <function-ref name="captured" scoped="" ref="0x7f102bce9020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f102bce91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f102bcf7ae0" loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f102bcf7ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102bcf3390"/>
        <function-ref name="fired" scoped="" ref="0x7f102bcf5360"/>
        <function-ref name="startAt" scoped="" ref="0x7f102bcf5ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102bcf5820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102bcf3850"/>
        <function-ref name="start" scoped="" ref="0x7f102bcf6970"/>
        <function-ref name="stop" scoped="" ref="0x7f102bcf6e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f102bcf3d00" loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bcf3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f102bcf20a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f102bcf2230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f102bcf23c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f102bcf2550"/>
        <function-ref name="getPower" scoped="" ref="0x7f102bcf26e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f102bcf2870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f102bcdd550" loc="68:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f102bcdd550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bcdd8d0"/>
        <function-ref name="write" scoped="" ref="0x7f102bcdda60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f102bcdde00" loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f102bcdde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bcdc1c0"/>
        <function-ref name="write" scoped="" ref="0x7f102bcdc350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f102bcd1d40" loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f102bcd1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102bcd40e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f102bcd4270"/>
        <function-ref name="sfd" scoped="" ref="0x7f102bcd4400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f102bcfabc0" loc="50:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f102bcfabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102bcf9020"/>
        <function-ref name="cancel" scoped="" ref="0x7f102bcf91b0"/>
        <function-ref name="modify" scoped="" ref="0x7f102bcf9340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102bcf94d0"/>
        <function-ref name="resend" scoped="" ref="0x7f102bcf9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f102bcdfd10" loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102bcdfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f102bcde0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f102bcde270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f102bcde400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f102bcdbc60" loc="73:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f102bcdbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bcda020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f102bce3820" loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f102bce3820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102bce3ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102bce3d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f102bce1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102bce11b0"/>
        <function-ref name="get" scoped="" ref="0x7f102bce1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102bce14d0"/>
        <function-ref name="set" scoped="" ref="0x7f102bce1660"/>
        <function-ref name="clr" scoped="" ref="0x7f102bce17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102bcfcc60" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102bcfcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102bcfa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f102bcf2bb0" loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bcf2bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f102bcf1020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f102bcf11b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f102bcf1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f102bce4be0" loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f102bce4be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102bcec020"/>
        <function-ref name="isSet" scoped="" ref="0x7f102bcec1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102bcec340"/>
        <function-ref name="set" scoped="" ref="0x7f102bcec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f102bcda3e0" loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102bcda3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bcda960"/>
        <function-ref name="write" scoped="" ref="0x7f102bcdaaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f102bcdf020" loc="65:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f102bcdf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102bcdf3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102bcdf530"/>
        <function-ref name="request" scoped="" ref="0x7f102bcdf6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f102bcdf850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102bcdf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f102bce9500" loc="61:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f102bce9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102bce9980"/>
        <function-ref name="isInput" scoped="" ref="0x7f102bce9b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f102bce9ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102bce9e30"/>
        <function-ref name="get" scoped="" ref="0x7f102bce3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102bce31b0"/>
        <function-ref name="set" scoped="" ref="0x7f102bce3340"/>
        <function-ref name="clr" scoped="" ref="0x7f102bce34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f102bcd7130" loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f102bcd7130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bcd74b0"/>
        <function-ref name="write" scoped="" ref="0x7f102bcd7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f102bcd79c0" loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f102bcd79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bcd7d40"/>
        <function-ref name="write" scoped="" ref="0x7f102bcd6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f102bcdc6d0" loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f102bcdc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bcdca50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f102bce1b40" loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f102bce1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102bce0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f102bce01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102bce0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102bce04d0"/>
        <function-ref name="get" scoped="" ref="0x7f102bce0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102bce07f0"/>
        <function-ref name="set" scoped="" ref="0x7f102bce0980"/>
        <function-ref name="clr" scoped="" ref="0x7f102bce0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f102bcd46c0" loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f102bcd46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f102bcd4a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f102bcd4bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f102bcd4d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f102bcd3020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f102bcd31b0"/>
        <function-ref name="get" scoped="" ref="0x7f102bcd3340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f102bcd34d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f102bcd3b10"/>
        <function-ref name="set" scoped="" ref="0x7f102bcd3660"/>
        <function-ref name="led0On" scoped="" ref="0x7f102bcd37f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f102bcd3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f102bcd95e0" loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f102bcd95e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bcd9960"/>
        <function-ref name="write" scoped="" ref="0x7f102bcd9af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f102bcfa320" loc="49:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f102bcfa320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f102bcfa6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f102bcfa830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f102bcde780" loc="67:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f102bcde780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102bcdeb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102bcdec90"/>
        <function-ref name="write" scoped="" ref="0x7f102bcdee20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102bcdd020"/>
        <function-ref name="readDone" scoped="" ref="0x7f102bcdd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f102bcdcde0" loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f102bcdcde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bcdb180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f102bcdae80" loc="76:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f102bcdae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bcd9220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f102bcf70f0" loc="53:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f102bcf70f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f102bcf7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f102bc37c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f102bc37c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc36210"/>
        <function-ref name="write" scoped="" ref="0x7f102bc363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f102bc41020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f102bc41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f102bc3ac70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f102bc3ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc39020"/>
        <function-ref name="write" scoped="" ref="0x7f102bc391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f102bc35670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f102bc35670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc359f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc35b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f102bc2ee50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f102bc2ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc2c210"/>
        <function-ref name="write" scoped="" ref="0x7f102bc2c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f102bc35e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f102bc35e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc33210"/>
        <function-ref name="write" scoped="" ref="0x7f102bc333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f102bc212f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f102bc212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc21670"/>
        <function-ref name="write" scoped="" ref="0x7f102bc21800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f102bc232f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f102bc232f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc23670"/>
        <function-ref name="write" scoped="" ref="0x7f102bc23800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f102bc3f370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f102bc3f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc3f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f102bc29670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f102bc29670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc299f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc29b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f102bc242f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f102bc242f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc24670"/>
        <function-ref name="write" scoped="" ref="0x7f102bc24800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f102bc39c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f102bc39c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc38020"/>
        <function-ref name="write" scoped="" ref="0x7f102bc381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f102bc38c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f102bc38c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc37020"/>
        <function-ref name="write" scoped="" ref="0x7f102bc371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f102bc2f670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f102bc2f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc2f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc2fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f102bc31e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f102bc31e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc30210"/>
        <function-ref name="write" scoped="" ref="0x7f102bc303a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f102bc33670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f102bc33670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc339f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc33b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f102bc438f0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102bc438f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f102bc43c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f102bc43e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f102bc42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f102bc3ed00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f102bc3ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc3d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f102bc3d370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f102bc3d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc3d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f102bc28a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f102bc28a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc28df0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f102bc3dac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f102bc3dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc3de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f102bc24ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f102bc24ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc24e50"/>
        <function-ref name="write" scoped="" ref="0x7f102bc23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f102bc3e060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f102bc3e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc3e3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f102bc2ae50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f102bc2ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc29210"/>
        <function-ref name="write" scoped="" ref="0x7f102bc293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f102bc38480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f102bc38480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc38800"/>
        <function-ref name="write" scoped="" ref="0x7f102bc38990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f102bc39480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102bc39480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc39800"/>
        <function-ref name="write" scoped="" ref="0x7f102bc39990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f102bc42940" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f102bc42940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc42cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f102bc2be50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f102bc2be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc2a210"/>
        <function-ref name="write" scoped="" ref="0x7f102bc2a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f102bc2c670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f102bc2c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc2c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc2cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f102bc2a670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f102bc2a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc2a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc2ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f102bc22ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f102bc22ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc22e50"/>
        <function-ref name="write" scoped="" ref="0x7f102bc21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f102bc23ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f102bc23ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc23e50"/>
        <function-ref name="write" scoped="" ref="0x7f102bc22020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f102bc30670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f102bc30670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc309f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc30b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f102bc2ce50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f102bc2ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc2b210"/>
        <function-ref name="write" scoped="" ref="0x7f102bc2b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f102bc25ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f102bc25ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc25e50"/>
        <function-ref name="write" scoped="" ref="0x7f102bc24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f102bc32670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f102bc32670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc329f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc32b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f102bc21ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f102bc21ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102bc21e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102bc20020"/>
        <function-ref name="write" scoped="" ref="0x7f102bc201b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102bc20340"/>
        <function-ref name="readDone" scoped="" ref="0x7f102bc204d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f102bc422f0" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f102bc422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc42670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f102bc3a490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f102bc3a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc3a810"/>
        <function-ref name="write" scoped="" ref="0x7f102bc3a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f102bc37480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f102bc37480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc37800"/>
        <function-ref name="write" scoped="" ref="0x7f102bc37990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f102bc2fe50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f102bc2fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc2e210"/>
        <function-ref name="write" scoped="" ref="0x7f102bc2e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f102bc33e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f102bc33e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc32210"/>
        <function-ref name="write" scoped="" ref="0x7f102bc323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f102bc2e670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f102bc2e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc2e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc2eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f102bc36670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f102bc36670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc369f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc36b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f102bc41670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f102bc41670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc419f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f102bc36e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f102bc36e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc35210"/>
        <function-ref name="write" scoped="" ref="0x7f102bc353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102bc44c30" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102bc44c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102bc43020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102bc431b0"/>
        <function-ref name="request" scoped="" ref="0x7f102bc43340"/>
        <function-ref name="granted" scoped="" ref="0x7f102bc434d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102bc43660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f102bc3c160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f102bc3c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc3c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f102bc3ce00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f102bc3ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc3a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f102bc252f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f102bc252f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc25670"/>
        <function-ref name="write" scoped="" ref="0x7f102bc25800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f102bc27ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f102bc27ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc27e50"/>
        <function-ref name="write" scoped="" ref="0x7f102bc25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f102bc3e6b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f102bc3e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc3ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f102bc272f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f102bc272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc27670"/>
        <function-ref name="write" scoped="" ref="0x7f102bc27800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f102bc222f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f102bc222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc22670"/>
        <function-ref name="write" scoped="" ref="0x7f102bc22800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f102bc30e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f102bc30e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc2f210"/>
        <function-ref name="write" scoped="" ref="0x7f102bc2f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f102bc2b670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f102bc2b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc2b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc2bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f102bc41cc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f102bc41cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc3f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f102bc3f9c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f102bc3f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc3fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f102bc32e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f102bc32e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc31210"/>
        <function-ref name="write" scoped="" ref="0x7f102bc313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f102bc3c7b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f102bc3c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc3cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f102bc31670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f102bc31670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc319f0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc31b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f102bc29e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f102bc29e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bc28610"/>
        <function-ref name="write" scoped="" ref="0x7f102bc287a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f102bc207a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f102bc207a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102bc20b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102bc20cb0"/>
        <function-ref name="write" scoped="" ref="0x7f102bc20e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102bc1e020"/>
        <function-ref name="readDone" scoped="" ref="0x7f102bc1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f102bc13df0" loc="42:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f102bc13df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102bc0f1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f102bc0f350"/>
        <function-ref name="sfd" scoped="" ref="0x7f102bc0f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f102bc0f7c0" loc="43:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f102bc0f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102bc0fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f102bc0e020" loc="44:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f102bc0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f102bc0e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f102bc135c0" loc="41:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f102bc135c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f102bc13940"/>
        <function-ref name="stop" scoped="" ref="0x7f102bc13ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f102bc07380" loc="54:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f102bc07380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102bc07700"/>
        <function-ref name="isInput" scoped="" ref="0x7f102bc07890"/>
        <function-ref name="toggle" scoped="" ref="0x7f102bc07a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102bc07bb0"/>
        <function-ref name="get" scoped="" ref="0x7f102bc07d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102bc06020"/>
        <function-ref name="set" scoped="" ref="0x7f102bc061b0"/>
        <function-ref name="clr" scoped="" ref="0x7f102bc06340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f102bc00b90" loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f102bc00b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f102bbfe020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f102bbfe1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f102bbfe340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f102bbfe4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f102bbfe660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f102bbfe7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f102bbfe980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f102bbfeb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f102bbfeca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f102bbfee30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f102bbfd020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f102bbfd1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f102bbfd340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f102bbfd5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f102bbfd760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f102bbe89d0" loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f102bbe89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102bbe8d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f102bbe7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f102bbfdd70" loc="65:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f102bbfdd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f102bbfb330"/>
        <function-ref name="clear" scoped="" ref="0x7f102bbfba60"/>
        <function-ref name="isValid" scoped="" ref="0x7f102bbfcba0"/>
        <function-ref name="set" scoped="" ref="0x7f102bbfa210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f102bc066b0" loc="55:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f102bc066b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102bc06a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f102bc06bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f102bc06d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102bc05020"/>
        <function-ref name="get" scoped="" ref="0x7f102bc051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102bc05340"/>
        <function-ref name="set" scoped="" ref="0x7f102bc054d0"/>
        <function-ref name="clr" scoped="" ref="0x7f102bc05660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f102bbf8cb0" loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f102bbf8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bbf70a0"/>
        <function-ref name="write" scoped="" ref="0x7f102bbf7230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f102bbf7590" loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f102bbf7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bbf7910"/>
        <function-ref name="write" scoped="" ref="0x7f102bbf7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f102bbf66d0" loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f102bbf66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bbf6a50"/>
        <function-ref name="write" scoped="" ref="0x7f102bbf6be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f102bc01330" loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bc01330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f102bc016b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f102bc01840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f102bc019d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f102bc01b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f102bc01cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f102bc01e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f102bc0a550" loc="49:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f102bc0a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102bc0a8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f102bc0aa60"/>
        <function-ref name="sfd" scoped="" ref="0x7f102bc0abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f102bc023a0" loc="60:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f102bc023a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc02720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f102bc08020" loc="53:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f102bc08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f102bc083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f102bc08530"/>
        <function-ref name="toggle" scoped="" ref="0x7f102bc086c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f102bc08850"/>
        <function-ref name="get" scoped="" ref="0x7f102bc089e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f102bc08b70"/>
        <function-ref name="set" scoped="" ref="0x7f102bc08d00"/>
        <function-ref name="clr" scoped="" ref="0x7f102bc07020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f102bbf5020" loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f102bbf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bbf53a0"/>
        <function-ref name="write" scoped="" ref="0x7f102bbf5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102bc0b620" loc="47:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102bc0b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102bc0b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f102bc001e0" loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bc001e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f102bc00560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f102bc006f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f102bc00880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f102bc09020" loc="50:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f102bc09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102bc093a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f102bc046e0" loc="58:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f102bc046e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102bc04a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102bc04bf0"/>
        <function-ref name="request" scoped="" ref="0x7f102bc04d80"/>
        <function-ref name="granted" scoped="" ref="0x7f102bc03020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102bc031b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f102bbf7e00" loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f102bbf7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bbf61c0"/>
        <function-ref name="write" scoped="" ref="0x7f102bbf6350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f102bc03530" loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f102bc03530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102bc038b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102bc03a40"/>
        <function-ref name="write" scoped="" ref="0x7f102bc03bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102bc03d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f102bc02020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f102bbf58b0" loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f102bbf58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bbf5e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f102bc097c0" loc="51:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f102bc097c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f102bc09b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f102bbf4150" loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f102bbf4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f102bbf44d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f102bbf4660"/>
        <function-ref name="led1On" scoped="" ref="0x7f102bbf47f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f102bbf4980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f102bbf4b10"/>
        <function-ref name="get" scoped="" ref="0x7f102bbf4ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f102bbf4e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f102bbf34d0"/>
        <function-ref name="set" scoped="" ref="0x7f102bbf3020"/>
        <function-ref name="led0On" scoped="" ref="0x7f102bbf31b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f102bbf3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f102bbf83e0" loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f102bbf83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102bbf8760"/>
        <function-ref name="write" scoped="" ref="0x7f102bbf88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f102bbfab10" loc="67:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f102bbfab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bbf8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f102bc05a50" loc="56:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f102bc05a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f102bc05dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f102bc04020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f102bc041b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f102bc04340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f102bc02ad0" loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f102bc02ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102bc01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f102bc0bca0" loc="48:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f102bc0bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f102bc0a0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f102bc0a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f102bb88a70" loc="44:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f102bb88a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f102bb88df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f102bb8c670" loc="41:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bb8c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f102bb8c9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f102bb8cb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f102bb8cd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f102bb89020"/>
        <function-ref name="getPower" scoped="" ref="0x7f102bb891b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f102bb89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f102bb87550" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f102bb87550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f102bb85b00"/>
        <function-ref name="clear" scoped="" ref="0x7f102bb842a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f102bb853d0"/>
        <function-ref name="set" scoped="" ref="0x7f102bb849d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f102bb880c0" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bb880c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f102bb88440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f102bb885d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f102bb88760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f102bb7f480" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f102bb7f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102bb7f800"/>
        <function-ref name="isSet" scoped="" ref="0x7f102bb7f990"/>
        <function-ref name="cancel" scoped="" ref="0x7f102bb7fb20"/>
        <function-ref name="set" scoped="" ref="0x7f102bb7fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f102bb83660" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f102bb83660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f102bb82ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f102bb80460"/>
        <function-ref name="isValid" scoped="" ref="0x7f102bb825b0"/>
        <function-ref name="set" scoped="" ref="0x7f102bb80b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f102bb896e0" loc="42:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f102bb896e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f102bb89a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f102bb89bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f102bb89d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f102bb78020" loc="49:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f102bb78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f102bb783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f102bb7ed20" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f102bb7ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f102bb7b0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f102bb7b270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f102bb7b400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f102bb7b590"/>
        <function-ref name="getPower" scoped="" ref="0x7f102bb7b720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f102bb7b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f102bb6f4a0" loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f102bb6f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102bb6f820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f102bb6f9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102bb6fb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102bb6fcd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f102bb6fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f102bb78a80" loc="51:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f102bb78a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f102bb76020"/>
        <function-ref name="clear" scoped="" ref="0x7f102bb76750"/>
        <function-ref name="isValid" scoped="" ref="0x7f102bb778d0"/>
        <function-ref name="set" scoped="" ref="0x7f102bb76e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f102bb79640" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102bb79640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f102bb799c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f102bb79b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f102bb79ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f102bb718b0" loc="53:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f102bb718b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102bb71c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f102bb71dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102bb6f020"/>
        <function-ref name="set" scoped="" ref="0x7f102bb6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f102bb6b820" loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f102bb6b820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102bb6d4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f102bb6db80" loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f102bb6db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102bb6c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f102bb75af0" loc="52:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f102bb75af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f102bb720d0"/>
        <function-ref name="clear" scoped="" ref="0x7f102bb72800"/>
        <function-ref name="isValid" scoped="" ref="0x7f102bb73970"/>
        <function-ref name="set" scoped="" ref="0x7f102bb71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f102bb7bc50" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f102bb7bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f102bb79020"/>
        <function-ref name="noAck" scoped="" ref="0x7f102bb791b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f102bb79340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f102bb1a4e0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f102bb1a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102bb11150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f102bb117c0" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f102bb117c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102bb10620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102bb0f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102bb10ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102bb0f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f102bb0a020" loc="46:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f102bb0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102bb06630"/>
        <function-ref name="fired" scoped="" ref="0x7f102bb08a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f102bb07920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f102bb074a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f102bb05020"/>
        <function-ref name="gett0" scoped="" ref="0x7f102bb06ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102bb07020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f102bb0ac10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f102bb06020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f102bb08110"/>
        <function-ref name="stop" scoped="" ref="0x7f102bb085e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f102bb05610" loc="47:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f102bb05610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102bb033d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102bb0b130" loc="45:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102bb0b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102bb0b4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f102bad6870" loc="44:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f102bad6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102bad2090"/>
        <function-ref name="fired" scoped="" ref="0x7f102bad3090"/>
        <function-ref name="startAt" scoped="" ref="0x7f102bad3a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102bad3550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102bad2550"/>
        <function-ref name="start" scoped="" ref="0x7f102bad56a0"/>
        <function-ref name="stop" scoped="" ref="0x7f102bad5bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102bad6020" loc="43:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102bad6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102bad63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f102affb260" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f102affb260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102aff8b30"/>
        <function-ref name="fired" scoped="" ref="0x7f102affaa60"/>
        <function-ref name="startAt" scoped="" ref="0x7f102aff84e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102aff8020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102aff7020"/>
        <function-ref name="start" scoped="" ref="0x7f102affa090"/>
        <function-ref name="stop" scoped="" ref="0x7f102affa5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102affc9d0" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102affc9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102affcd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f102afe2a80" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f102afe2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102afe2e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102afe1020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102afe11b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102afe1340"/>
        <function-ref name="fired" scoped="" ref="0x7f102afe14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f102afe5020" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f102afe5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102afe53a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102afe5530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102afe56c0"/>
        <function-ref name="get" scoped="" ref="0x7f102afe5850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102afe59e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102afe5b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f102afe5d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102afe3020"/>
        <function-ref name="overflow" scoped="" ref="0x7f102afe31b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f102afe3340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102afe34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f102afe3760" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102afe3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102afe3ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f102afe3c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102afe3e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102afe2020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102afe21b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102afe2340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102afe24d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102afe2660"/>
        <function-ref name="setControl" scoped="" ref="0x7f102afe27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f102afd8760" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f102afd8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f102afd8ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f102afd8c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f102afd8e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f102afd7020"/>
        <function-ref name="fired" scoped="" ref="0x7f102afd71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f102afdcdd0" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f102afdcdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102afda180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f102afda310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102afda4a0"/>
        <function-ref name="get" scoped="" ref="0x7f102afda630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102afda7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102afda950"/>
        <function-ref name="getMode" scoped="" ref="0x7f102afdaae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102afdac70"/>
        <function-ref name="overflow" scoped="" ref="0x7f102afdae00"/>
        <function-ref name="setMode" scoped="" ref="0x7f102afd9020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f102afd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f102afdfbf0" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f102afdfbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102afdc4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f102afdd4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f102afdde60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102afdd9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102afdc9a0"/>
        <function-ref name="start" scoped="" ref="0x7f102afdea80"/>
        <function-ref name="stop" scoped="" ref="0x7f102afdd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102afdf360" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102afdf360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102afdf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f102afd9440" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f102afd9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f102afd97c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f102afd9950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f102afd9ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f102afd9c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f102afd9e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f102afd8020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f102afd81b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f102afd8340"/>
        <function-ref name="setControl" scoped="" ref="0x7f102afd84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f102baf5b70" loc="43:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f102baf5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102baf29b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102baf1360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102baf2e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f102baf1820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f102baeab90" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f102baeab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102bae99d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102bae84e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102bae8020"/>
        <function-ref name="overflow" scoped="" ref="0x7f102bae89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f102baed610" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f102baed610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102baec5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102baea020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102baeca70"/>
        <function-ref name="overflow" scoped="" ref="0x7f102baea4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f102aff55f0" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f102aff55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102aff3e50"/>
        <function-ref name="fired" scoped="" ref="0x7f102aff4e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f102aff3800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102aff3340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102aff1340"/>
        <function-ref name="start" scoped="" ref="0x7f102aff4430"/>
        <function-ref name="stop" scoped="" ref="0x7f102aff4940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f102afefd20" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f102afefd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cb5d5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f102cb5d930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102afec670"/>
        <function-ref name="fired" scoped="" ref="0x7f102afed550"/>
        <function-ref name="startAt" scoped="" ref="0x7f102afec020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102afeda10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102afecb30"/>
        <function-ref name="start" scoped="" ref="0x7f102afeeb60"/>
        <function-ref name="stop" scoped="" ref="0x7f102afed090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f102aff19b0" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f102aff19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102aff07e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102afef1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102aff0ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f102afef670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f102baa19c0" loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f102baa19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102baa1d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f102ba9f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f102baa4850" loc="49:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f102baa4850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102baa1090"/>
        <function-ref name="fired" scoped="" ref="0x7f102baa2090"/>
        <function-ref name="startAt" scoped="" ref="0x7f102baa2a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102baa2550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f102baa1550"/>
        <function-ref name="start" scoped="" ref="0x7f102baa36a0"/>
        <function-ref name="stop" scoped="" ref="0x7f102baa3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f102baa92f0" loc="48:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102baa92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102baa6870"/>
        <function-ref name="fired" scoped="" ref="0x7f102baa8e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f102baa7c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f102baa7780"/>
        <function-ref name="getdt" scoped="" ref="0x7f102baa41e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f102baa6cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102baa7300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f102baa8020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f102baa6260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f102baa84f0"/>
        <function-ref name="stop" scoped="" ref="0x7f102baa89c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f102ba4fa00" loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f102ba4fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102ba4fd80"/>
        <function-ref name="runTask" scoped="" ref="0x7f102ba4e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f102ba54640" loc="49:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f102ba54640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102ba50c40"/>
        <function-ref name="fired" scoped="" ref="0x7f102ba521e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f102ba50020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f102ba52ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f102ba4f590"/>
        <function-ref name="gett0" scoped="" ref="0x7f102ba4f110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102ba52660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f102ba53390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f102ba50630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f102ba53860"/>
        <function-ref name="stop" scoped="" ref="0x7f102ba53d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f102ba5a150" loc="48:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102ba5a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102ba56700"/>
        <function-ref name="fired" scoped="" ref="0x7f102ba59c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f102ba57a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f102ba575b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f102ba54090"/>
        <function-ref name="gett0" scoped="" ref="0x7f102ba56ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102ba57110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f102ba5ad60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f102ba560d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f102ba592a0"/>
        <function-ref name="stop" scoped="" ref="0x7f102ba59790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f102ba4c2b0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f102ba4c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102ba4b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f102ba4b690" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f102ba4b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f102ba495b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f102ba48020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f102ba49a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f102ba484e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f102ba428c0" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102ba428c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102ba2ecf0"/>
        <function-ref name="fired" scoped="" ref="0x7f102ba2f320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f102ba2e0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f102ba2fc20"/>
        <function-ref name="getdt" scoped="" ref="0x7f102ba2d660"/>
        <function-ref name="gett0" scoped="" ref="0x7f102ba2d1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102ba2f7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f102ba304e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f102ba2e6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f102ba309b0"/>
        <function-ref name="stop" scoped="" ref="0x7f102ba30e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f102ba392c0" loc="49:../../../..//tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f102ba392c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102ba35870"/>
        <function-ref name="fired" scoped="" ref="0x7f102ba38e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f102ba36c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f102ba36780"/>
        <function-ref name="getdt" scoped="" ref="0x7f102ba341e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f102ba35cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102ba36300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f102ba38020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f102ba35260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f102ba384f0"/>
        <function-ref name="stop" scoped="" ref="0x7f102ba389c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f102ba1cc60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f102ba1cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba1b210"/>
        <function-ref name="write" scoped="" ref="0x7f102ba1b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f102ba26020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f102ba26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f102ba20c70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f102ba20c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba1f020"/>
        <function-ref name="write" scoped="" ref="0x7f102ba1f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f102ba1a670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f102ba1a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba1a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba1ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f102ba13e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f102ba13e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba12210"/>
        <function-ref name="write" scoped="" ref="0x7f102ba123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f102ba1ae50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f102ba1ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba19210"/>
        <function-ref name="write" scoped="" ref="0x7f102ba193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f102ba062f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f102ba062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba06670"/>
        <function-ref name="write" scoped="" ref="0x7f102ba06800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f102ba092f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f102ba092f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba09670"/>
        <function-ref name="write" scoped="" ref="0x7f102ba09800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f102ba25370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f102ba25370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba256f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f102ba0e670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f102ba0e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba0e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba0eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f102ba0a2f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f102ba0a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba0a670"/>
        <function-ref name="write" scoped="" ref="0x7f102ba0a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f102ba1fc60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f102ba1fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba1e020"/>
        <function-ref name="write" scoped="" ref="0x7f102ba1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f102ba1ec60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f102ba1ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba1c020"/>
        <function-ref name="write" scoped="" ref="0x7f102ba1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f102ba14670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f102ba14670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba149f0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba14b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f102ba17e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f102ba17e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba15210"/>
        <function-ref name="write" scoped="" ref="0x7f102ba153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f102ba19670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f102ba19670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba199f0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba19b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f102ba28970" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f102ba28970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f102ba28cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f102ba28e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f102ba27030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f102ba24d00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f102ba24d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba220a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f102ba22370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f102ba22370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f102ba0da70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f102ba0da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba0ddf0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f102ba22ac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f102ba22ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba22e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f102ba0aad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f102ba0aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba0ae50"/>
        <function-ref name="write" scoped="" ref="0x7f102ba09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f102ba24060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f102ba24060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba243e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f102ba0fe50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f102ba0fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba0e210"/>
        <function-ref name="write" scoped="" ref="0x7f102ba0e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f102ba1e480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f102ba1e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba1e800"/>
        <function-ref name="write" scoped="" ref="0x7f102ba1e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f102ba1f480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f102ba1f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba1f800"/>
        <function-ref name="write" scoped="" ref="0x7f102ba1f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f102ba27950" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f102ba27950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba27cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f102ba11e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f102ba11e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba0f210"/>
        <function-ref name="write" scoped="" ref="0x7f102ba0f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f102ba12670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f102ba12670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba129f0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba12b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f102ba0f670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f102ba0f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba0f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba0fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f102ba07ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f102ba07ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba07e50"/>
        <function-ref name="write" scoped="" ref="0x7f102ba06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f102ba09ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f102ba09ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba09e50"/>
        <function-ref name="write" scoped="" ref="0x7f102ba07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f102ba15670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f102ba15670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba159f0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba15b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f102ba12e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f102ba12e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba11210"/>
        <function-ref name="write" scoped="" ref="0x7f102ba113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f102ba0bad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f102ba0bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba0be50"/>
        <function-ref name="write" scoped="" ref="0x7f102ba0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f102ba18670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f102ba18670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba189f0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba18b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f102ba06ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f102ba06ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102ba06e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102ba05020"/>
        <function-ref name="write" scoped="" ref="0x7f102ba051b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102ba05340"/>
        <function-ref name="readDone" scoped="" ref="0x7f102ba054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f102ba27300" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f102ba27300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba27680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f102ba20490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f102ba20490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba20810"/>
        <function-ref name="write" scoped="" ref="0x7f102ba209a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f102ba1c480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f102ba1c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba1c800"/>
        <function-ref name="write" scoped="" ref="0x7f102ba1c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f102ba14e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f102ba14e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba13210"/>
        <function-ref name="write" scoped="" ref="0x7f102ba133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f102ba19e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f102ba19e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba18210"/>
        <function-ref name="write" scoped="" ref="0x7f102ba183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f102ba13670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f102ba13670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba139f0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba13b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f102ba1b670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f102ba1b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba1b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba1bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f102ba26670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f102ba26670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba269f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f102ba1be50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f102ba1be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba1a210"/>
        <function-ref name="write" scoped="" ref="0x7f102ba1a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102ba29d00" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102ba29d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102ba280a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102ba28230"/>
        <function-ref name="request" scoped="" ref="0x7f102ba283c0"/>
        <function-ref name="granted" scoped="" ref="0x7f102ba28550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102ba286e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f102ba21160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f102ba21160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba214e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f102ba21e00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f102ba21e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba201c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f102ba0b2f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f102ba0b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba0b670"/>
        <function-ref name="write" scoped="" ref="0x7f102ba0b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f102ba0cad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f102ba0cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba0ce50"/>
        <function-ref name="write" scoped="" ref="0x7f102ba0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f102ba246b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f102ba246b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba24a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f102ba0c2f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f102ba0c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba0c670"/>
        <function-ref name="write" scoped="" ref="0x7f102ba0c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f102ba072f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f102ba072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba07670"/>
        <function-ref name="write" scoped="" ref="0x7f102ba07800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f102ba15e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f102ba15e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba14210"/>
        <function-ref name="write" scoped="" ref="0x7f102ba143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f102ba11670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f102ba11670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba119f0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba11b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f102ba26cc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f102ba26cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba250a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f102ba259c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f102ba259c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba25d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f102ba18e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f102ba18e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba17210"/>
        <function-ref name="write" scoped="" ref="0x7f102ba173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f102ba217b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f102ba217b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f102ba21b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f102ba17670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f102ba17670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba179f0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba17b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f102ba0ee50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f102ba0ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f102ba0d610"/>
        <function-ref name="write" scoped="" ref="0x7f102ba0d7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f102ba057a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f102ba057a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f102ba05b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f102ba05cb0"/>
        <function-ref name="write" scoped="" ref="0x7f102ba05e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f102ba04020"/>
        <function-ref name="readDone" scoped="" ref="0x7f102ba041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f102b9dba20" loc="46:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f102b9dba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f102b9dbda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f102b9da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f102b9d9920" loc="45:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f102b9d9920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102b9db560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102b9df9a0" loc="44:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102b9df9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102b9dfd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f102b9d5a20" loc="48:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f102b9d5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f102b9d5da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f102b9d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f102b9d6940" loc="47:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f102b9d6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102b9d5560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102b9d6080" loc="46:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102b9d6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102b9d6400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f102b9ddaa0" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f102b9ddaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f102b9dde20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f102b9c7020"/>
        <function-ref name="isState" scoped="" ref="0x7f102b9c71b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f102b9c7340"/>
        <function-ref name="requestState" scoped="" ref="0x7f102b9c74d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f102b9c7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f102b9b9020" loc="44:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f102b9b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b9b93a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b9b9530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b9b96c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b9b9850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b9b99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f102b9ba220" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f102b9ba220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b9ba5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b9ba730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b9ba8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b9baa50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b9babe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f102b9b5e60" loc="45:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f102b9b5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b9b4210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b9b43a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b9b4530"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b9b46c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b9b4850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f102b9b8a20" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f102b9b8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b9b8da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b9b5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b9b51b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b9b5340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b9b54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f102b9b38f0" loc="47:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f102b9b38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f102b9b3c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f102b9b3e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102b9b5750" loc="41:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102b9b5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102b9b5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f102b9b2170" loc="48:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102b9b2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f102b9b24f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f102b9b2680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f102b9b2810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f102b9b4ae0" loc="46:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f102b9b4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f102b9b4e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f102b9b3020"/>
        <function-ref name="isState" scoped="" ref="0x7f102b9b31b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f102b9b3340"/>
        <function-ref name="requestState" scoped="" ref="0x7f102b9b34d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f102b9b3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f102b9b6690" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f102b9b6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f102b9b6a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f102b9b6ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f102b9b6d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f102b9a1020"/>
        <function-ref name="requestState" scoped="" ref="0x7f102b9a11b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f102b9a1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f102b99b950" loc="47:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f102b99b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b99bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f102b99eaa0" loc="42:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f102b99eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b99ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f102b99b200" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f102b99b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b99b580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f102b9953f0" loc="49:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f102b9953f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b995770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102b996b70" loc="45:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102b996b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102b995020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f102b999e30" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f102b999e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b9961e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f102b995a70" loc="50:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102b995a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f102b995df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f102b994020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f102b9941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f102b996570" loc="44:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f102b996570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b9968f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f102b966020" loc="75:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f102b966020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b9663a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f102b9666b0" loc="76:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f102b9666b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b966a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b966bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b966d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b965020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b9651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f102b96a8e0" loc="65:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f102b96a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b96ac60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b96adf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b969020"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b9691b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b969340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f102b969c90" loc="68:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f102b969c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b9680a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b968230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b9683c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b968550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b9686e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f102b9695e0" loc="66:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f102b9695e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b969960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102b96bbe0" loc="64:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102b96bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102b96a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102b96a1b0"/>
        <function-ref name="request" scoped="" ref="0x7f102b96a340"/>
        <function-ref name="granted" scoped="" ref="0x7f102b96a4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102b96a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f102b968a50" loc="69:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f102b968a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b968dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f102b967170" loc="71:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f102b967170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102b9674f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f102b967680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b967810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b9679a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f102b967b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f102b95cd70" loc="58:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f102b95cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b95b180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b95b310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b95b4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b95b630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b95b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f102b95bb10" loc="59:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f102b95bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b95a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f102b92ddb0" loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f102b92ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f102b92b180"/>
        <function-ref name="runTask" scoped="" ref="0x7f102b92b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f102b95a2f0" loc="60:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f102b95a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f102b95a670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f102b95a800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f102b95a990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f102b95ab20"/>
        <function-ref name="getPower" scoped="" ref="0x7f102b95acb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f102b95ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f102b95ea20" loc="51:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f102b95ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b95eda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b95d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b95d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b95d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b95d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f102b959b70" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f102b959b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f102b958020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f102b9581b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f102b958340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f102b9584d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f102b959170" loc="61:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102b959170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f102b9594f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f102b959680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f102b959810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f102b95e370" loc="49:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f102b95e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b95e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f102b9607b0" loc="46:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f102b9607b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102b960b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102b960cc0"/>
        <function-ref name="request" scoped="" ref="0x7f102b960e50"/>
        <function-ref name="granted" scoped="" ref="0x7f102b95f020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102b95f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f102b95f4d0" loc="48:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f102b95f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b95f850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b95f9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b95fb70"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b95fd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b95e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f102b95d840" loc="52:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f102b95d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b95dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f102b95c020" loc="54:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f102b95c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102b95c3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f102b95c530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b95c6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b95c850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f102b95c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f102b90ddd0" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f102b90ddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f102b90c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f102b90c410" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f102b90c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f102b90c790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f102b90c920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f102b90cab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f102b90cc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f102b900b80" loc="46:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f102b900b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f102b8ff020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f102b8ff1b0"/>
        <function-ref name="start" scoped="" ref="0x7f102b8ff340"/>
        <function-ref name="stop" scoped="" ref="0x7f102b8ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f102b8fe860" loc="51:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f102b8fe860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b8febe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b8fed70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b8fd020"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b8fd1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b8fd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f102b8fd690" loc="52:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f102b8fd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b8fda10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f102b904ce0" loc="43:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f102b904ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b9010a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b901230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b9013c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b901550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b9016e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f102b900080" loc="45:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f102b900080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f102b900400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f102b900590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f102b900720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f102b9008b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f102b8ff800" loc="47:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f102b8ff800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f102b8ffb80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f102b8ffd10"/>
        <function-ref name="isState" scoped="" ref="0x7f102b8fe020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f102b8fe1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f102b8fe340"/>
        <function-ref name="forceState" scoped="" ref="0x7f102b8fe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f102b8fdd90" loc="53:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f102b8fdd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f102b8fc180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f102b8fc310"/>
        <function-ref name="start" scoped="" ref="0x7f102b8fc4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f102b8fc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f102b901980" loc="44:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f102b901980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b901d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f102b8f92d0" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f102b8f92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f102b8f9650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f102b8f97e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f102b8f9970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f102b8f9b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f102b8fb580" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f102b8fb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f102b8fb900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f102b8fba90"/>
        <function-ref name="isState" scoped="" ref="0x7f102b8fbc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f102b8fbdb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f102b8fa020"/>
        <function-ref name="forceState" scoped="" ref="0x7f102b8fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f102b8ecd70" loc="45:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f102b8ecd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b8ea180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b8ea310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b8ea4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b8ea630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b8ea7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f102b8ef350" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f102b8ef350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b8ef6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b8ef860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b8ef9f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b8efb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b8efd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f102b8ec020" loc="41:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f102b8ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f102b8ec3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f102b8ec530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f102b8ec6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f102b8ec850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f102b8ec9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f102b8e61c0" loc="44:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f102b8e61c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f102b8e6540"/>
        <function-ref name="noAck" scoped="" ref="0x7f102b8e66d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f102b8e6860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f102b8e9410" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f102b8e9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f102b8e9790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f102b8e9920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f102b8e9ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f102b8e9c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f102b8e9dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f102b8c7690" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f102b8c7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b8c7a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f102b8c8860" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f102b8c8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b8c8be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b8c8d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b8c7020"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b8c71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b8c7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f102b8c5610" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f102b8c5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f102b8c5990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f102b8c5b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f102b8c5cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f102b8c5e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f102b8c3020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f102b8c31b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f102b8c3340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f102b8c34d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f102b8c3660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f102b8c37f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f102b8c3980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f102b8c3b10"/>
        <function-ref name="sync" scoped="" ref="0x7f102b8c3ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f102b8c2020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f102b8c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f102b8c98b0" loc="54:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f102b8c98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f102b8c9c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f102b8c9dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f102b8c8020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f102b8c81b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f102b8c8340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f102b8c84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f102b8cace0" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f102b8cace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f102b8c90a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f102b8c11f0" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f102b8c11f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f102b8c1570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f102b8c1700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f102b8c1890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f102b8c1a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f102b8c1bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f102b8c1d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f102b8cba80" loc="52:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f102b8cba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102b8cbe00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f102b8ca020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b8ca1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b8ca340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f102b8ca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f102b8cf020" loc="48:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f102b8cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f102b8cf3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b8cf530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b8cf6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f102b8cf850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f102b8cf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f102b8cddf0" loc="50:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f102b8cddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b8cc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f102b8c7ce0" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f102b8c7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f102b8c60a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f102b8c6230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f102b8c63c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f102b8c6550"/>
        <function-ref name="getPower" scoped="" ref="0x7f102b8c66e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f102b8c6870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f102b8c24d0" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f102b8c24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f102b8c2950"/>
        <function-ref name="changed" scoped="" ref="0x7f102b8c2ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f102b8c2c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f102b8c2e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f102b8c6b70" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f102b8c6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f102b8c5020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f102b8c51b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f102b8c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f102b8cd210" loc="49:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f102b8cd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b8cd590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f102b8c0d30" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f102b8c0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f102b8bf0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f102b8bf270"/>
        <function-ref name="led1On" scoped="" ref="0x7f102b8bf400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f102b8bf590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f102b8bf720"/>
        <function-ref name="get" scoped="" ref="0x7f102b8bf8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f102b8bfa40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f102b8be1b0"/>
        <function-ref name="set" scoped="" ref="0x7f102b8bfbd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f102b8bfd60"/>
        <function-ref name="led2On" scoped="" ref="0x7f102b8be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f102b8cc470" loc="51:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f102b8cc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f102b8cc7f0"/>
        <function-ref name="source" scoped="" ref="0x7f102b8cc980"/>
        <function-ref name="address" scoped="" ref="0x7f102b8ccb10"/>
        <function-ref name="destination" scoped="" ref="0x7f102b8ccca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f102b8cce30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f102b8cb020"/>
        <function-ref name="type" scoped="" ref="0x7f102b8cb1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f102b8cb340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f102b8cb4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f102b8cb660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f102b8cb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f102b8c00f0" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f102b8c00f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f102b8c0470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f102b8c0600"/>
        <function-ref name="request" scoped="" ref="0x7f102b8c0790"/>
        <function-ref name="granted" scoped="" ref="0x7f102b8c0920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f102b8c0ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f102b81a020" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f102b81a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102b81a3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f102b81a530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b81a6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b81a850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f102b81a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f102b820910" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f102b820910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b820c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f102b81ac30" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f102b81ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f102b818020"/>
        <function-ref name="source" scoped="" ref="0x7f102b8181b0"/>
        <function-ref name="address" scoped="" ref="0x7f102b818340"/>
        <function-ref name="destination" scoped="" ref="0x7f102b8184d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f102b818660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f102b8187f0"/>
        <function-ref name="type" scoped="" ref="0x7f102b818980"/>
        <function-ref name="setType" scoped="" ref="0x7f102b818b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f102b818ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f102b818e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f102b817020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f102b815780" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f102b815780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f102b815b00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f102b815c90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f102b815e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f102b814020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f102b8141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f102b8151b0" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f102b8151b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f102b815530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f102b814400" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f102b814400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f102b814780"/>
        <function-ref name="source" scoped="" ref="0x7f102b814910"/>
        <function-ref name="address" scoped="" ref="0x7f102b814aa0"/>
        <function-ref name="destination" scoped="" ref="0x7f102b814c30"/>
        <function-ref name="setSource" scoped="" ref="0x7f102b814dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f102b813020"/>
        <function-ref name="type" scoped="" ref="0x7f102b8131b0"/>
        <function-ref name="setType" scoped="" ref="0x7f102b813340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f102b8134d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f102b813660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f102b8137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f102b8115a0" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="Relay_AppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f102b8115a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f102cd38db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f102cb5d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f102b80da80"/>
        <function-ref name="fired" scoped="" ref="0x7f102b80f090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f102b80fe10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f102b80f990"/>
        <function-ref name="getdt" scoped="" ref="0x7f102b80c4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f102b80c020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f102b80f510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f102b810200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f102b80d470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f102b8106d0"/>
        <function-ref name="stop" scoped="" ref="0x7f102b810ba0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../..//tos/interfaces/Init.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f102cd33020" loc="62:../../../..//tos/interfaces/Init.nc">
        <documentation loc="53:../../../..//tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../..//tos/interfaces/Boot.nc">
      <documentation loc="42:../../../..//tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f102cd37c10" loc="60:../../../..//tos/interfaces/Boot.nc">
        <documentation loc="51:../../../..//tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f102cd05020" loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f102cd07270" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f102cd06840" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f102cd09b00" loc="42:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f102cd079e0" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f102cd0cd10" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f102cd09420" loc="41:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f102cd06120" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../..//tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f102ce52020" loc="62:../../../..//tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../..//tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f102d117c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f102ccb3020" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f102ccb4cc0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f102ccb7390" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f102ccfeb60"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f102ccfc650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f102ccb3890" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f102ccb27b0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f102ccb4560" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f102ccb2020" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f102ccb7b30" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f102ccb6350" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f102ccb6da0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f102ccfeb60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f102ccfc650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f102ccb6b20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f102ccfeb60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f102ccfc650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f102cca60e0" loc="44:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f102cca3730" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f102cca34b0" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f102cca22e0" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f102cca2060" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f102cca4ca0" loc="73:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f102cca43e0" loc="68:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f102cca6a90" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f102cca6810" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f102ccad3e0" loc="40:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f102ccadd60" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f102ccadae0" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f102ccab790" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f102ccab510" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f102ccaa2a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f102ccaa020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f102ccaa990" loc="45:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f102ccbd810" loc="52:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f102ccba2a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f102ccba020" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f102ccbb020" loc="53:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f102ccc3ab0" loc="45:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f102ccbb760" loc="54:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f102ccbf9b0" loc="47:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f102ccbd120" loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f102ccbf270" loc="46:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f102ccbe0e0" loc="48:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f102ccbe9f0" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f102ccbe770" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f102ccbacb0" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f102ccbaa30" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f102cc7c1f0" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../..//tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../..//tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f102cd75a80" loc="85:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f102cd741f0" loc="86:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f102cd752b0" loc="79:../../../..//tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../..//tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../..//tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f102cf8e810" loc="52:../../../..//tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../..//tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../..//tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../..//tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f102d1d0020" loc="57:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f102d1cf020" loc="72:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../..//tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f102d1d0790" loc="65:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../..//tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f102d1c4270" loc="67:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f102d1c4ac0" loc="75:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../..//tos/interfaces/Receive.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f102caf59c0" loc="78:../../../..//tos/interfaces/Receive.nc">
        <documentation loc="58:../../../..//tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
              <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102caf5060" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f102caf53b0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f102caf56e0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../..//tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f102cae0730" loc="113:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../..//tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f102cae04b0" loc="113:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f102cadec80" loc="138:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f102cadea00" loc="138:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f102cae3a80" loc="104:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f102cade020" loc="130:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../..//tos/interfaces/Packet.nc">
      <documentation loc="42:../../../..//tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f102cadc8a0" loc="65:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="58:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102cadc620" loc="65:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f102cada950" loc="78:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="67:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102cada6d0" loc="78:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f102cad7d30" loc="126:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="109:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102cad7730" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f102cad7a60" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f102cad9da0" loc="106:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="96:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f102cad8dd0" loc="94:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="80:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102cad8810" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f102cad8b40" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../..//tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f102cafc2c0" loc="80:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f102cafd940" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f102cafdcc0" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f102cafc020" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f102caf8970" loc="135:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102caf8370" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f102caf86a0" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f102caf7a60" loc="123:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f102cafa630" loc="96:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102cafa3b0" loc="96:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f102caf9b80" loc="110:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102caf95a0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f102caf98f0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../..//tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f102cb4c6f0" loc="53:../../../..//tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f102cb4c6f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f102cae8420" loc="136:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f102caedd60" loc="83:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f102caebb10" loc="114:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f102caeb540" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f102caeb880" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f102caecd60" loc="98:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f102cae7460" loc="151:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f102cae8bb0" loc="144:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f102caec570" loc="92:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f102caee2a0" loc="64:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f102caee020" loc="64:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f102cae9aa0" loc="129:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f102cae94d0" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f102cae9810" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f102caeed60" loc="73:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f102caeeae0" loc="73:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f102caed650" loc="78:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../..//tos/interfaces/Leds.nc">
      <documentation loc="33:../../../..//tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f102cb54530" loc="61:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="58:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f102cb54ce0" loc="67:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="63:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f102cb534e0" loc="72:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="69:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f102cb52490" loc="83:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="79:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f102cb51bd0" loc="100:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="96:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f102cb4f420" loc="117:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="103:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f102cb53c70" loc="77:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="74:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f102cb4e020" loc="134:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="120:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f102cb4fd10" loc="134:../../../..//tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f102cb56d60" loc="56:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="53:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f102cb52c70" loc="89:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="86:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f102cb51420" loc="94:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="91:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../..//tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../..//tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f102c991a60" loc="44:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f102c9901f0" loc="45:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f102c992bb0" loc="42:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f102c98f070" loc="47:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f102c991350" loc="43:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f102c990910" loc="46:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f102c996dd0" loc="40:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f102c9924c0" loc="41:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f102c965c20" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f102c964390" loc="80:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f102c960c10" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f102c960990" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f102c9664a0" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f102c963270" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f102c95f520" loc="117:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f102c964ad0" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f102c965480" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f102c961940" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f102c966c40" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f102c9685f0" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f102c9639f0" loc="92:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f102c960120" loc="101:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f102c9611f0" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f102c968d20" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../..//tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../..//tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f102c71d840" loc="177:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f102cb0f180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f102c71d5c0" loc="177:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f102c727400" loc="88:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f102c727180" loc="88:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f102c729840" loc="68:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f102c728350" loc="78:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f102c7280d0" loc="78:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f102c723d00" loc="121:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f102c723720" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f102c723a70" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f102c725800" loc="103:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f102c725220" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f102c725570" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f102c7202e0" loc="147:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f102c720060" loc="147:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f102c71f680" loc="162:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f102c71f0d0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f102c71f3f0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f102cb10d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f102c7220b0" loc="136:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f102c724e00" loc="136:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f102c71bd00" loc="187:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f102cb0f180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f102c71b720" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f102c71ba70" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f102cb0f180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f102c71ab50" loc="195:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f102cb0f180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../..//tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f102c7175f0" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c717370" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f102c7167d0" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c716550" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f102c714940" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c7146c0" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../..//tos/interfaces/Send.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f102c705020" loc="75:../../../..//tos/interfaces/Send.nc">
        <documentation loc="57:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c709a30" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f102c709d60" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f102c702660" loc="125:../../../..//tos/interfaces/Send.nc">
        <documentation loc="115:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c702060" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f102c702390" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f102c700790" loc="112:../../../..//tos/interfaces/Send.nc">
        <documentation loc="102:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f102c704350" loc="89:../../../..//tos/interfaces/Send.nc">
        <documentation loc="77:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c7040d0" loc="89:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f102c703870" loc="100:../../../..//tos/interfaces/Send.nc">
        <documentation loc="91:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c703290" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f102c7035e0" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f102c691920" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f102c691920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f102c691b60" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c691b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f102c68c970" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c691b60"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c68c6f0" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f102c68bb40" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c68b8c0" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f102c68e750" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c68e4d0" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f102c68d020" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c691b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c6898a0" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f102c689c00" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c691b60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../..//tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../..//tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f102c67d030" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c67e9e0" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f102c67ed70" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f102c67c2a0" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c67c020" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f102c67e1f0" loc="57:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f102c6807f0" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f102c680570" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f102c655430" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c6551b0" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f102c657720" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c6574a0" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f102c65adc0" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f102c65ab40" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f102c65a2a0" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f102c65a020" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f102c658880" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f102c658600" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f102c6565e0" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c656360" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../..//tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../..//tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f102c649e60" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../..//tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f102c649850" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f102c649bd0" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f102c6630c0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f102c665aa0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f102c665df0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f102c6606d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f102c6600d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f102c660440" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f102c663ba0" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f102d87f110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f102c663920" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f102c661600" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f102c661380" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f102c6652a0" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f102c665020" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f102c662720" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f102c6624a0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../..//tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../..//tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f102c64d630" loc="65:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c64d3b0" loc="65:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f102c6516f0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c6510d0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f102c651460" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f102c64e5f0" loc="59:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../..//tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c64e370" loc="59:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f102c650af0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c6504d0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f102c650860" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f102c64c630" loc="71:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c64c3b0" loc="71:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../..//tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f102c65c0b0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../..//tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c666de0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../..//tos/interfaces/Resource.nc">
      <documentation loc="63:../../../..//tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f102c640cc0" loc="120:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="104:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f102c641cc0" loc="97:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="90:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f102c641350" loc="88:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="78:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f102c6404f0" loc="102:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="99:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f102c63f8b0" loc="128:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="122:../../../..//tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f102c61fca0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f102c61f6e0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f102c61fa10" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f102c61c020" loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f102c61a930" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f102c61bab0" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f102c61a360" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f102c61a690" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f102c61b2b0" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f102c61cbb0" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f102c61b020" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f102c61e780" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f102c61e500" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../..//tos/interfaces/Random.nc">
      <documentation loc="34:../../../..//tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f102c617b50" loc="52:../../../..//tos/interfaces/Random.nc">
        <documentation loc="48:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f102c617350" loc="46:../../../..//tos/interfaces/Random.nc">
        <documentation loc="42:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../..//tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f102c621270" loc="95:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f102c621a80" loc="105:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f102c60f020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c611c90" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f102c611490" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f102cb4a720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f102cb47090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c611190" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f102c60e360" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f102cb47b90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f102cb454f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102c60e060" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f102c626070" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f102c6230e0" loc="97:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f102c6258f0" loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f102c628730" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f102c6277e0" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f102c6268e0" loc="76:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f102c625120" loc="83:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f102c627020" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../..//tos/interfaces/State.nc">
      <documentation loc="33:../../../..//tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f102c609a70" loc="71:../../../..//tos/interfaces/State.nc">
        <documentation loc="68:../../../..//tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f102c60b020" loc="56:../../../..//tos/interfaces/State.nc">
        <documentation loc="53:../../../..//tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f102c6092a0" loc="66:../../../..//tos/interfaces/State.nc">
        <documentation loc="63:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f102c609020" loc="66:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f102c60b790" loc="61:../../../..//tos/interfaces/State.nc">
        <documentation loc="58:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f102c613ca0" loc="45:../../../..//tos/interfaces/State.nc">
        <documentation loc="40:../../../..//tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f102c613a20" loc="45:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f102c60c7a0" loc="51:../../../..//tos/interfaces/State.nc">
        <documentation loc="47:../../../..//tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f102c60c520" loc="51:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f102c5ae640" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f102c5ae060" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f102c5ae3b0" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f102c5af020" loc="93:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f102c5b1690" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f102c5b1020" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f102c5b1400" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f102c5b7a40" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f102c5b77c0" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f102c5af8a0" loc="98:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f102c5b3540" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f102c5b32c0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f102c5b6b90" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f102c5b6910" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f102c5ad8a0" loc="117:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f102c5b26b0" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f102c5b2430" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f102c5ad070" loc="112:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f102c5b4350" loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f102c679670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f102c679dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f102c5b4b40" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f102c5b7020" loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f102c5b61f0" loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f102c5b3ce0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../..//tos/interfaces/Read.nc">
      <documentation loc="33:../../../..//tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f102c5a92b0" loc="49:../../../..//tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f102c5a92b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f102c5a9b70" loc="55:../../../..//tos/interfaces/Read.nc">
        <documentation loc="50:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f102c5a78f0" loc="63:../../../..//tos/interfaces/Read.nc">
        <documentation loc="57:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f102c5a92b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f102c5a7340" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f102c5a7660" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f102c5a92b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f102c57dc10" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f102cb598b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f102c57d990" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f102c57b710" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f102cb598b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f102c57b490" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../..//tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f102c59cc50" loc="48:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../..//tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f102c679670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f102c679dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../..//tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f102c598020" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f102c598020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f102c598260" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c598260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f102c594e00" loc="109:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c598260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f102c597e40" loc="78:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f102c594460" loc="103:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c598260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c598260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f102c596e60" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c598260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f102c5941d0" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c598260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f102c596640" loc="88:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f102c593620" loc="116:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c598260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f102c598dc0" loc="66:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c598260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f102c598b40" loc="66:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c598260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f102c597680" loc="73:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../..//tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f102c585560" loc="50:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f102c5844f0" loc="60:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f102c585d40" loc="55:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f102cb0f180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f102c586cd0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f102cb0f180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f102c5866f0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f102cb0f180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f102c586a40" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f102cb0f560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f102c578e40" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f102cb598b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f102c581e80" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f102cb598b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f102c581020" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f102c581890" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f102c581be0" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f102c57f610" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f102cb598b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f102c580770" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f102c57f020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f102c57f370" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../..//tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../..//tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f102c588c30" loc="68:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f102c588470" loc="61:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f102c58ace0" loc="54:../../../..//tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f102c58a420" loc="53:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../..//tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f102c4744f0" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f102c4744f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f102c474730" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c474730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f102c473070" loc="64:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102c474730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f102c471190" loc="76:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f102c4738f0" loc="71:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f102c4718f0" loc="82:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../..//tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f102c3abbb0" loc="54:../../../..//tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f102c3aad70" loc="66:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f102c3aa5c0" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f102c3aa340" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f102c3ab350" loc="53:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../..//tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f102c385a60" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f102c383540" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f102c3852d0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f102c384cf0" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f102c384a70" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f102c389b00" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f102c3842b0" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f102c271270" loc="24:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f102c271ac0" loc="31:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f102c270350" loc="39:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f102c24ab60" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f102c24a580" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f102c24a8d0" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f102c245dd0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f102c245490" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f102c2457e0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f102c245b30" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f102c2466b0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f102cb598b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f102c2460d0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f102c246420" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f102c24b730" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f102cb598b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f102c24b150" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f102c24b4a0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f102c2472c0" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f102c249930" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f102c249c80" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f102c247020" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../..//tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f102c22bdf0" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f102c22b480" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f102c22b810" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f102c22bb50" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f102c2283c0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f102c2276a0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f102c227a30" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f102c227d70" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f102c228110" loc="89:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../..//tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f102c22fc90" loc="45:../../../..//tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../..//tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f102c22fa10" loc="45:../../../..//tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../..//tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f102c14b6f0" loc="53:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f102c14a070" loc="61:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f102c142710" loc="39:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f102c17e020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f102c17e440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../..//tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../..//tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f102c1482a0" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f102c148020" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f102c147680" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f102c147400" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f102c148b10" loc="68:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f102c1452a0" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f102c145020" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../..//tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../..//tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f102c13cca0" loc="65:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f102c13c480" loc="59:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f102c1332a0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f102c133020" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f102c134780" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f102c110af0" loc="213:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f102c11b790" loc="143:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f102c128610" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f102c19a080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f102c19a8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f102c128390" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f102c19a080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f102c19a8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f102c11e870" loc="123:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f102c125a90" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f102c195080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f102c1958c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f102c125810" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f102c195080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f102c1958c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f102c115e70" loc="180:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f102c111480" loc="197:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f102c125070" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f102c198020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f102c1987b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f102c1242b0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f102c195080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f102c1958c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f102c120020" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f102c122d30" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f102c122610" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f102c115740" loc="179:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f102c127840" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f102c198020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f102c1987b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f102c1275c0" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f102c198020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f102c1987b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f102c123420" loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f102c1145d0" loc="181:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f102c123e00" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f102c123b80" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f102c11f910" loc="113:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f102c11e0e0" loc="118:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f102c116840" loc="177:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f102c119790" loc="163:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f102c11c7e0" loc="133:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f102c115020" loc="178:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f102c11a020" loc="148:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f102c114cf0" loc="182:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f102c120800" loc="103:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f102c1a0dd0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f102c19c680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f102c1124c0" loc="187:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f102c110350" loc="207:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f102c124c50" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f102c1249d0" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f102c10f4d0" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f102c10f250" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f102c128df0" loc="55:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f102c19a080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f102c19a8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f102c11c020" loc="128:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f102c11a770" loc="153:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f102c116020" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f102c16ce70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f102c16b2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f102c117cf0" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f102c16ce70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f102c16b2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f102c1172a0" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f102c17e020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f102c17e440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f102c117020" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f102c17e020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f102c17e440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f102c10fd90" loc="231:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f102c112cb0" loc="192:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f102c11f070" loc="108:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f102c111be0" loc="202:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f102c119020" loc="158:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f102c11b020" loc="138:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f102c0a8600" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f102c080070" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f102c093b10" loc="31:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f102c088d50" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f102c088ad0" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f102c09b270" loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f102c084350" loc="71:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f102c08dcf0" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f102c094c50" loc="28:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f102c0929c0" loc="34:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f102c096c00" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f102c096980" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f102c097120" loc="21:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f102c08f790" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f102c086c80" loc="66:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f102c0818f0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f102c088390" loc="61:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f102c07cb60" loc="91:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f102c077270" loc="100:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f102c0990e0" loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f102c08f020" loc="38:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f102c08e910" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f102c094500" loc="27:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f102c09c020" loc="7:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f102c089ba0" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f102c089920" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f102c09f7e0" loc="6:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f102c085b80" loc="69:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f102c0807d0" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f102c07a350" loc="94:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f102c078a90" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f102c082270" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f102c07f020" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f102c086520" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f102c07dbb0" loc="87:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f102c099800" loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f102c08a020" loc="53:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f102c07d020" loc="86:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f102c081190" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f102c08d520" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f102c08d2a0" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f102c07aaf0" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f102c0891f0" loc="57:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f102c084ac0" loc="72:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f102c09caa0" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f102c158b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f102c157020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f102c09c820" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f102c158b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f102c157020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f102c090870" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f102c098980" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f102c098700" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f102c08e120" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f102c08fe70" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f102c07c3b0" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f102c096270" loc="24:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f102c098020" loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f102c08a9e0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f102c08a760" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f102d87e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f102c09b9a0" loc="12:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f102c07f740" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f102c0829e0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f102c085420" loc="68:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f102c08b740" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f102c08b4c0" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f102c090120" loc="35:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f102c0933b0" loc="29:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f102c0782b0" loc="96:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f102c097aa0" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f102c097820" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f102c07b350" loc="92:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f102c092270" loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f102c07bb10" loc="93:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../..//tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../..//tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f102bfdb780" loc="90:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f102bfd9020" loc="98:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f102bfa4900" loc="56:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f102bfa3a20" loc="73:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f102bfa4070" loc="46:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f102bfa31f0" loc="65:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f102bfa2390" loc="81:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../..//tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f102bf98b50" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f102bfa0b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f102bf988d0" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f102bfa0b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f102bf9cb80" loc="53:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f102bf996b0" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f102bfa0b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f102bf99430" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f102bfa0b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f102bf98020" loc="70:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f102bfa0b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../..//tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../..//tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f102bd935e0" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f102bd93360" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f102bd80b00" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f102bd801c0" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f102bd80530" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f102bd80860" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f102bd7e880" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f102bd7e2c0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f102bd7e5f0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f102bd66530" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f102bd66530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f102bd66770" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102bd66770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f102bd652e0" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../..//tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102bd66770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f102bd65060" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f102bd66770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f102bd03580" loc="43:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f102bcd19e0" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f102bcd1020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f102bcd1750" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f102bcd27f0" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f102bcd2020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f102bcd6d30" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f102bce73d0" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f102d87e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102bce7150" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f102bce83d0" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f102d1d4090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102bce8150" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f102bce4350" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102bce40d0" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f102bce5390" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f102bce5110" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f102cb00ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f102cafd180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../..//tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f102bb6e910" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f102bb6e910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f102bb6b270" loc="61:../../../..//tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../..//tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f102d87e920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f102b9dc5e0" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f102b9dc5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f102b9d92a0" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../..//tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f102d1cbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f102b9dc5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f102b9d9020" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f102b9dc5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
