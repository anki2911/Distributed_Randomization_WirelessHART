<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="17:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4ac41bdc40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4ac43973f0"/></to>
    </wire>
    <wire loc="72:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4ac43973f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4ac41d9590"/></to>
    </wire>
    <wire loc="19:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ac41578f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ac2e8d020"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ac2e8d020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ac2987a40"/></to>
    </wire>
    <wire loc="20:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f4ac413b7a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3cfe140"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3cfe140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3cd4880"/></to>
    </wire>
    <wire loc="21:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ac41b1590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ac40009a0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ac40009a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ac3ff9400"/></to>
    </wire>
    <wire loc="22:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7f4ac414a9e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac2e77560"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ac2e77560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ac309f2c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7f4ac4146020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac2e70020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ac2e70020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ac309f2c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ac41315f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ac2e8dc30"/></to>
    </wire>
    <wire loc="31:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ac41315f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ac2e80020"/></to>
    </wire>
    <wire loc="32:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ac41315f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ac2e7b780"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ac2e7b780"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ac3cfa630"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ac2e80020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ac3cfa630"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ac2e8dc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ac2986720"/></to>
    </wire>
    <wire loc="29:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="R_A" scoped="" ref="0x7f4ac4153220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ac2e86910"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ac2e86910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ac3cfc3f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="R_B" scoped="" ref="0x7f4ac41538e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ac2e7b1b0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ac2e7b1b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ac3cfc3f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac2e66610"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7f4ac3f75200"/></to>
    </wire>
    <wire loc="493:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f4ac3f75200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e46100"/></to>
    </wire>
    <wire loc="37:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f4ac412c1d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac2e67390"/></to>
    </wire>
    <wire loc="40:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac2e607a0"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7f4ac3f73200"/></to>
    </wire>
    <wire loc="494:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f4ac3f73200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e42d10"/></to>
    </wire>
    <wire loc="41:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f4ac413a510"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac2e625b0"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac43968d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac2f73dd0"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac43968d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac2ffbb70"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac43968d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac301b750"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac43968d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac303c080"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac43968d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac3171130"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac43968d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac3271620"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac43968d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac3362c60"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac43968d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac3b587e0"/></to>
    </wire>
    <wire loc="103:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac43968d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac2774140"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac43968d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac3822020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac43968d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac3c094a0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4ac41d9c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4ac4c4e3a0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4ac4c4e3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4ac43dd140"/></to>
    </wire>
    <wire loc="68:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f4ac41cc6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac4399880"/></to>
    </wire>
    <wire loc="48:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ac4399880"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac4394a70"/></to>
    </wire>
    <wire loc="71:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac41ccdc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac43968d0"/></to>
    </wire>
    <wire loc="49:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ac43901c0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ac4372020"/></to>
    </wire>
    <wire loc="46:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ac4372020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac436f020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f4ac43908a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac4393c80"/></to>
    </wire>
    <wire loc="56:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f4ac438f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac3fd6dd0"/></to>
    </wire>
    <wire loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ac436f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac4359cb0"/></to>
    </wire>
    <wire loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ac43686c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ac43583d0"/></to>
    </wire>
    <wire loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4ac44b54c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4ac4357680"/></to>
    </wire>
    <wire loc="113:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f4ac43145a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ac42516d0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f4ac4302020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ac424ab30"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f4ac430b700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ac4257160"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f4ac42efa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ac4230cb0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f4ac4312aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ac4258480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f4ac42f5020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ac4230020"/></to>
    </wire>
    <wire loc="170:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f4ac42eca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ac4219cb0"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f4ac42fc5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ac422a220"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f4ac4315b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ac42a79d0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f4ac42f1a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ac423f2f0"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f4ac42f73e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ac4240610"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f4ac43015a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ac4241220"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f4ac430a700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ac424f7a0"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f4ac42eea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ac42282f0"/></to>
    </wire>
    <wire loc="140:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f4ac42ffbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ac423a6d0"/></to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f4ac4311890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ac4250ac0"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f4ac4325060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac42b5540"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f4ac42f5da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ac4229610"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f4ac431b0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ac4259020"/></to>
    </wire>
    <wire loc="161:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f4ac42fba50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ac42226d0"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f4ac43056d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ac425fa90"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f4ac42f0a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ac42387a0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f4ac430dcf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ac4260de0"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f4ac42f61f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ac4239ac0"/></to>
    </wire>
    <wire loc="163:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f4ac42eda20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ac42207a0"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f4ac42fd0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ac4232b30"/></to>
    </wire>
    <wire loc="120:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f4ac43046c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac42ad3e0"/></to>
    </wire>
    <wire loc="162:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f4ac42f4b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ac4221ac0"/></to>
    </wire>
    <wire loc="128:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f4ac42f2a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ac4248cb0"/></to>
    </wire>
    <wire loc="169:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f4ac42f3a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ac4219020"/></to>
    </wire>
    <wire loc="127:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f4ac42f8570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ac4248020"/></to>
    </wire>
    <wire loc="168:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f4ac42f9020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ac421bb30"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f4ac42b3450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ac42b4d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4ac42b3aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f4ac4213a90"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4ac42b1120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f4ac4210260"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ac425e930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac42b5540"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ac425c020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ac42b4d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ac4255020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac42b5540"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ac42547a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ac42b4d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ac424e610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac42b5540"/></to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ac424dc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ac42b4d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f4ac42ab2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ac42acbf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4ac42ab940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f4ac42109f0"/></to>
    </wire>
    <wire loc="123:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4ac42aa020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f4ac420f240"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ac4247b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac42ad3e0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ac42442f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ac42acbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ac423e160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac42ad3e0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ac423d7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ac42acbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ac4237610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac42ad3e0"/></to>
    </wire>
    <wire loc="144:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ac4235c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ac42acbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ac422fb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac42ad3e0"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ac422d2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ac42acbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ac4227160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac42ad3e0"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ac42267a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ac42acbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ac421f610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac42ad3e0"/></to>
    </wire>
    <wire loc="165:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ac421ec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ac42acbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ac4218b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac42ad3e0"/></to>
    </wire>
    <wire loc="172:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ac42162f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ac42acbf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac43db040"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f4ac43d7490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f4ac47c93b0"/></to>
    </wire>
    <wire loc="59:ReceivingBufferC.nc">
      <from><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7f4ac4123db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:ReceivingBufferC.nc">
      <from><interface-ref name="updateSchedule" scoped="" ref="0x7f4ac411f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:ReceivingBufferC.nc">
      <from><interface-ref name="initializeFlow" scoped="" ref="0x7f4ac4124e70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:ReceivingBufferC.nc">
      <from><interface-ref name="initializeSchedule" scoped="" ref="0x7f4ac4121100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:ReceivingBufferC.nc">
      <from><interface-ref name="initializeCluster" scoped="" ref="0x7f4ac4120080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:ReceivingBufferC.nc">
      <from><interface-ref name="PermutateCipher" scoped="" ref="0x7f4ac411d020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ac3fd6dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac3ffcdc0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f4ac3ff8b90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f4ac3ffa5a0"/></to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f4ac3ffa5a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3dbd020"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f4ac3ff6e30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f4ac3fd8830"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f4ac3fd8830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3da9b90"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f4ac3ff4020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f4ac3fd7b50"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f4ac3fd7b50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3da4710"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3dac2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f4ac3f7d200"/></to>
    </wire>
    <wire loc="486:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f4ac3f7d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e5a740"/></to>
    </wire>
    <wire loc="62:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3da8de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f4ac3f7b200"/></to>
    </wire>
    <wire loc="487:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f4ac3f7b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e54100"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3da3930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f4ac3f79200"/></to>
    </wire>
    <wire loc="488:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f4ac3f79200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e50d10"/></to>
    </wire>
    <wire loc="442:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f4ac3fbe020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ef3100"/></to>
    </wire>
    <wire loc="455:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f4ac3faa020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ec3d10"/></to>
    </wire>
    <wire loc="531:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f4ac3f60560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3eb5d10"/></to>
    </wire>
    <wire loc="551:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f4ac3f3c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e29100"/></to>
    </wire>
    <wire loc="532:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f4ac3f5e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3eb0740"/></to>
    </wire>
    <wire loc="460:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f4ac3fa6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3eb9100"/></to>
    </wire>
    <wire loc="473:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f4ac3f91200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e8ae00"/></to>
    </wire>
    <wire loc="497:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f4ac3f6d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e34d10"/></to>
    </wire>
    <wire loc="535:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f4ac3f58580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ea7d10"/></to>
    </wire>
    <wire loc="545:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f4ac3f48570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e46100"/></to>
    </wire>
    <wire loc="557:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f4ac3f34580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e25d10"/></to>
    </wire>
    <wire loc="445:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f4ac3fb8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ee4100"/></to>
    </wire>
    <wire loc="536:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f4ac3f56580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ea2740"/></to>
    </wire>
    <wire loc="450:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f4ac3fb4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3edb740"/></to>
    </wire>
    <wire loc="463:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f4ac3fa0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3eab100"/></to>
    </wire>
    <wire loc="476:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f4ac3f8b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e7cd10"/></to>
    </wire>
    <wire loc="489:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f4ac3f77200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e4b740"/></to>
    </wire>
    <wire loc="500:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f4ac3f67200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e25d10"/></to>
    </wire>
    <wire loc="440:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f4ac3fc3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3efdd10"/></to>
    </wire>
    <wire loc="453:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f4ac3fae020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ecd860"/></to>
    </wire>
    <wire loc="466:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f4ac3f9a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e9c100"/></to>
    </wire>
    <wire loc="530:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f4ac3f63580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3eb5d10"/></to>
    </wire>
    <wire loc="548:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f4ac3f42570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e38100"/></to>
    </wire>
    <wire loc="555:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f4ac3f36570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e25d10"/></to>
    </wire>
    <wire loc="541:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f4ac3f4e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e5fd10"/></to>
    </wire>
    <wire loc="471:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f4ac3f96020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e93a60"/></to>
    </wire>
    <wire loc="484:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f4ac3f81200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e63100"/></to>
    </wire>
    <wire loc="495:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f4ac3f71200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e3d740"/></to>
    </wire>
    <wire loc="549:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f4ac3f40570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e34d10"/></to>
    </wire>
    <wire loc="538:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f4ac3f54570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e6dd10"/></to>
    </wire>
    <wire loc="443:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f4ac3fbc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3eefd10"/></to>
    </wire>
    <wire loc="456:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f4ac3fa8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ebe740"/></to>
    </wire>
    <wire loc="461:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f4ac3fa4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3eb5d10"/></to>
    </wire>
    <wire loc="474:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f4ac3f8f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e85740"/></to>
    </wire>
    <wire loc="498:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f4ac3f6b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e2e740"/></to>
    </wire>
    <wire loc="540:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f4ac3f50580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e63100"/></to>
    </wire>
    <wire loc="438:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f4ac3fd0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3f066d0"/></to>
    </wire>
    <wire loc="451:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f4ac3fb2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ed6100"/></to>
    </wire>
    <wire loc="464:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f4ac3f9e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ea7d10"/></to>
    </wire>
    <wire loc="477:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f4ac3f89200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e76740"/></to>
    </wire>
    <wire loc="542:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f4ac3f4c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e9c100"/></to>
    </wire>
    <wire loc="546:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f4ac3f46570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e42d10"/></to>
    </wire>
    <wire loc="552:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f4ac3f3a570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e25d10"/></to>
    </wire>
    <wire loc="482:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f4ac3f85200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e6dd10"/></to>
    </wire>
    <wire loc="543:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f4ac3f4a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e98d10"/></to>
    </wire>
    <wire loc="441:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f4ac3fc0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ef8740"/></to>
    </wire>
    <wire loc="454:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f4ac3fac020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ec8270"/></to>
    </wire>
    <wire loc="467:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f4ac3f98020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e98d10"/></to>
    </wire>
    <wire loc="539:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f4ac3f52580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e68740"/></to>
    </wire>
    <wire loc="550:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f4ac3f3e570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e2e740"/></to>
    </wire>
    <wire loc="472:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f4ac3f94200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e8e460"/></to>
    </wire>
    <wire loc="485:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f4ac3f7f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e5fd10"/></to>
    </wire>
    <wire loc="496:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f4ac3f6f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e38100"/></to>
    </wire>
    <wire loc="444:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f4ac3fba020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3eea740"/></to>
    </wire>
    <wire loc="449:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f4ac3fb6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ee0d10"/></to>
    </wire>
    <wire loc="462:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f4ac3fa2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3eb0740"/></to>
    </wire>
    <wire loc="475:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f4ac3f8d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e80100"/></to>
    </wire>
    <wire loc="499:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f4ac3f69200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e29100"/></to>
    </wire>
    <wire loc="439:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f4ac3fc5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3f01100"/></to>
    </wire>
    <wire loc="452:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f4ac3fb0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ed2d10"/></to>
    </wire>
    <wire loc="465:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f4ac3f9c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3ea2740"/></to>
    </wire>
    <wire loc="478:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f4ac3f87200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e71100"/></to>
    </wire>
    <wire loc="534:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f4ac3f5a560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3eab100"/></to>
    </wire>
    <wire loc="547:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f4ac3f44570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e3d740"/></to>
    </wire>
    <wire loc="533:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f4ac3f5c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3eab100"/></to>
    </wire>
    <wire loc="483:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f4ac3f83200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e68740"/></to>
    </wire>
    <wire loc="554:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f4ac3f38570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e29100"/></to>
    </wire>
    <wire loc="558:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f4ac3f31580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3e4b740"/></to>
    </wire>
    <wire loc="529:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f4ac3f651f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ac3eb9100"/></to>
    </wire>
    <wire loc="63:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ac2987a40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ac297aa20"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ac2986720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ac3cfa630"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ac2e8b8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ac2985400"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ac2985400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ac3cf92d0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4ac2e89020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f4ac2984a80"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4ac2984a80"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ac3cf8990"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ac3cfa630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ac3ccf760"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ac3cf92d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ac3cd0020"/></to>
    </wire>
    <wire loc="85:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ac3cf8990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ac3ccd810"/></to>
    </wire>
    <wire loc="60:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ac2979780"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ac3d54940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ac2978400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ac3cf92d0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ac3d54940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ac3d084b0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ac3d06400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ac3cfd1d0"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ac3cfd1d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ac3cd3980"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ac3d05060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ac3cf92d0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ac3d04720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ac3cfa630"/></to>
    </wire>
    <wire loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f4ac3d03480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f4ac3d03c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3cd4880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3cb0b70"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ac3cd3980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ac2f35020"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f4ac3cfa020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f4ac3cd1900"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f4ac3cd1900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f4ac2f33df0"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ac3ccf760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ac2f31a80"/></to>
    </wire>
    <wire loc="89:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ac3cf3cd0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ac31ed550"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ac31ed550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ac31dea80"/></to>
    </wire>
    <wire loc="86:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ac3ce2b20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ac3cc3bb0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ac3cc3bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ac3c9f700"/></to>
    </wire>
    <wire loc="81:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ac3cfc3f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ac3cd2cb0"/></to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ac3cd2cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ac2f33210"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ac3ccd810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ac3ca0670"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ac3cd0020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ac2f32470"/></to>
    </wire>
    <wire loc="90:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ac3ceddc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ac31e9660"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ac31e9660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ac31dbaf0"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3cb0b70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ac2f66b80"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac3cbad40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac2f2f8b0"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f4ac3caed20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f4ac2f30ce0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac3cc5970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac3ca1670"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac3ca1670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac31f2670"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ac3c9f700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ac2f66080"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ac3ca0670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f4ac31ef6e0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4ac3cb9020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4ac3c9e2e0"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4ac3c9e2e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4ac2f51020"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ac3cc2a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ac3c9f080"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ac3c9f080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ac31eea70"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f4ac2f260f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac3ca9210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ac2f2e860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f4ac3ca2170"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f4ac3ca2170"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f4ac2fcfc90"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ac2f2d690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ac3ca1020"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ac3ca1020"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ac2fcea50"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ac2f284d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ac3418b30"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac2f2dce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac31f2670"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac31f2670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac31e4d20"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac2f2cb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac31ee0c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac31ee0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac31df640"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4ac2f2a610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4ac3c13b80"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4ac3c13b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4ac3c08970"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f4ac2f271f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac3c99990"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac3c99990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac3c92020"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ac2f26d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ac40009a0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ac2f66b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f4ac2f63d90"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ac31eea70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ac31de020"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4ac2f51020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4ac2f4f410"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f4ac2fcfc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f4ac2fc4a20"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ac2f66080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ac2f5f2d0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f4ac3ca4d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ac2fcf5e0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ac2fcf5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f4ac2fc4370"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4ac31ef6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f4ac31e0c50"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac3ca9210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac2fd1be0"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac2fd1be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac2fc67b0"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f4ac3ca4020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ac2fd08e0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ac2fd08e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f4ac2fc54d0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f4ac3ca3420"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f4ac2fcd170"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f4ac2fcd170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f4ac2fc2020"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ac2fcea50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ac2fc3840"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f4ac2f63d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3c9d9f0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3c9d9f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3c95690"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ac2fcc6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ac3024220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ac3024220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ac301ea20"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ac3023020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ac2f55350"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ac2f55350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4ac2f51d70"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ac2f51d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ac2f6ace0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ac2f6ace0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4ac2f64860"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ac2f64860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ac3c9a600"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ac3c9a600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ac3c942e0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ac2fcc020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ac2f67980"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ac2f67980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4ac2f63690"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ac2f63690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ac3004aa0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ac3004aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ac2fffe30"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ac3000950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ac3c99300"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ac3c99300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ac32757c0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ac32757c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ac326f020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac3c92e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac3c23720"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac3c23720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac3c09b10"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f4ac3c893f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f4ac3c1ea60"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f4ac3c1ea60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f4ac3c06740"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f4ac3c8f020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ac33706c0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f4ac3c8f020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ac32785c0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ac32785c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ac3271ca0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ac33706c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ac3360320"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ac3c80d30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ac336d020"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ac336d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ac3360bc0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f4ac3c88ae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac336dcb0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac336dcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac335f970"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac3c7b020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac31f2670"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac3c74660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac31ee0c0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4ac3c7f020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4ac3041a20"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4ac3041a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4ac303ba20"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f4ac3c6fe40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ac3043aa0"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ac3043aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ac3827280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ac3c7f7f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ac40009a0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f4ac3c6a9e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f4ac3c6ca10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f4ac3c6da00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f4ac3c10020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f4ac3c05b40"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f4ac3bf9d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ac3b55220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ac3b55220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ac3b4fd20"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4ac3bf6060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4ac3a51e60"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4ac3a51e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a43b60"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f4ac3bf5380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f4ac3a4d6a0"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f4ac3a4d6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a35d70"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f4ac3bf46a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f4ac3a4bce0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f4ac3a4bce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a2a710"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ac3bf20e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ac3a13d60"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ac3a13d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f4ac38f5a30"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4ac3bdc1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac34a4e20"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac34a4e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac38a8960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ac3bdb2b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f4ac34a17b0"/></to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ac34a17b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ac3bdb9c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f4ac349fae0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ac349fae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ac3bdda40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f4ac34a2ad0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ac34a2ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ac3bdd120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ac349e160"/></to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ac349e160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ac3be1b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f4ac3496870"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ac3496870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ac3be83d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f4ac3491880"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ac3491880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ac3be8c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f4ac34900a0"/></to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ac34900a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ac3be45f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ac349be50"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ac349be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac3be0020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac3499670"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac3499670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ac3be9520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f4ac3483500"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ac3483500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ac3be5a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f4ac3485ce0"/></to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ac3485ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ac3be08e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ac3497e50"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ac3497e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ac3bdf1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f4ac3499e50"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ac3499e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac3bdfa70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac3498e50"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac3498e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f4ac3bdad90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac3471a80"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac3471a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac38a8960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f4ac3bda020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac34459e0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac34459e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac38a8960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ac3bea810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ac3418b30"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ac3c01020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ac3417d30"/></to>
    </wire>
    <wire loc="23:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ac3417d30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ac33fc310"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f4ac3bce820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f4ac3bcf940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ac3b587e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac3b4f490"/></to>
    </wire>
    <wire loc="51:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ac3b4f490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac2902590"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ac3b4fd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ac2902de0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ac2902590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac28fb640"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ac2902de0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ac28f41d0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ac28fb640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac28de340"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f4ac28eeb90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ac28fa020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ac28fa020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ac28debd0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ac28f0690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ac3adc020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ac3adc020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ac3a9f0f0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac28dbdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac28e5e70"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac28e5e70"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac3b314d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac28d8440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac28e25d0"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac28e25d0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac3b2e280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac28d7760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac28e18f0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac28e18f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac3b2dba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac3b314d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ac43046c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac3b2e280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f4ac4302020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac3b2dba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f4ac42f8570"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac3b314d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ac43046c0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac3b2e280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f4ac42ffbe0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac3b2dba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f4ac42f61f0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac3b314d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ac43046c0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac3b2e280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f4ac42fd0c0"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac3b2dba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f4ac42f5020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac3b314d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ac43046c0"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac3b2e280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f4ac42fc5a0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac3b2dba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f4ac42f5da0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac3b314d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ac43046c0"/></to>
    </wire>
    <wire loc="79:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac3b2e280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f4ac42fba50"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac3b2dba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f4ac42f4b80"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac3b314d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ac43046c0"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac3b2e280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f4ac42f9020"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac3b2dba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f4ac42f3a20"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f4ac3a9d540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ac3ad2020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ac3ad2020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ac3ac10a0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac3abf2c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ac43046c0"/></to>
    </wire>
    <wire loc="73:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f4ac3a4f090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a3e710"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f4ac3a4e390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a391d0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f4ac3a54c70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a47020"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f4ac3a4c9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a2fb60"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a462f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4ac3fbe020"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a42de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f4ac3f91200"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a3d930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f4ac3fc0020"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a38480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4ac3fd0020"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a33020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f4ac3f89200"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a2ede0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f4ac3f94200"/></to>
    </wire>
    <wire loc="69:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a29930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f4ac3f8b200"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ac3a13150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ac3a0ba20"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ac3a12a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f4ac38e6a70"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac39f85d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f4ac43015a0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f4ac39f78f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f4ac42f1a20"/></to>
    </wire>
    <wire loc="55:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac39f67a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f4ac3f94200"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ac38f4610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4ac39e78a0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f4ac39e78a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4ac39d38a0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ac38e4610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4ac39e98f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f4ac39e98f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4ac39d9810"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f4ac39dca30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f4ac39c8a30"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f4ac39e38a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f4ac39d08a0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f4ac39e18a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f4ac39ce8a0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f4ac39ed8a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f4ac39d58a0"/></to>
    </wire>
    <wire loc="80:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f4ac39de8a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f4ac39ca8a0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f4ac39e68a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f4ac39d28a0"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f4ac39dba30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f4ac39c7a30"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f4ac39e08a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f4ac39cd8a0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f4ac39e88a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f4ac39d48a0"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f4ac39dda30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f4ac39c9a30"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f4ac39e48a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f4ac39d18a0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f4ac39e28a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f4ac39cf8a0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f4ac39ee8a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f4ac39d68a0"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f4ac39df8a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f4ac39cc8a0"/></to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ac34a1160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac3495880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ac348a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ac34910a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ac347f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ac3481500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ac349f490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ac3487880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ac3482500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ac348d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ac348e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac34a3a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac38a5680"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac38a5680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac389f920"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ac349ee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ac349d490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ac3486c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ac349dbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ac3482ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ac34870a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ac3498670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ac34880a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ac348a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ac3488880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ac3480ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ac3481ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ac348e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ac34890a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ac3483ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ac3490880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ac347fce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ac38a4630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ac34a2480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ac349b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ac3497670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ac348c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ac348c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac34950a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ac349c2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ac349b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ac349e7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ac3485500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ac3480500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ac348d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ac3489880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ac34a1e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ac348f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ac349c940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ac348f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ac34860a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ac347e9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ac38a4630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f4ac38a4630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ac389bbb0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac3898020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac3898db0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac38a8960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac389c810"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac3897ba0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f4ac3893020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ac382b770"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ac382b770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ac3827280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4ac3896400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac380ac40"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac380ac40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac27f9c30"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4ac3894080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4ac38098f0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4ac38098f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4ac27f60c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4ac388a680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4ac34cc020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4ac34cc020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4ac27f42b0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ac3893df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ac40009a0"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f4ac3885120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ac3827280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ac3822b70"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4ac27f42b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4ac37a0510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4ac27f60c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4ac37a4dd0"/></to>
    </wire>
    <wire loc="105:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac27f9c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac37a9a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ac27f78f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ac27ec2c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ac27ec2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ac362d8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4ac37a4dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4ac3727440"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ac27f66d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ac37a3480"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ac37a3480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ac3727a50"/></to>
    </wire>
    <wire loc="111:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ac379e600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ac27f4a50"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac27df760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac37a45e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4ac379f370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac27ed640"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac27ed640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac362e5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ac37996a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ac27e7c10"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ac27e7c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ac3632a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac37a45e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac3729c40"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4ac37a0510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4ac3726700"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac37a9a20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac372ae80"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ac3725e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ac379e600"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4ac3725060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f4ac379f370"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ac3720de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ac37996a0"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f4ac3724490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ac3718860"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ac3718860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f4ac370b020"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ac371f5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ac40009a0"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f4ac371ec50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ac370d8a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ac3706750"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ac37113b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ac3707dc0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f4ac36d8700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f4ac3f63580"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f4ac36d6670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f4ac3f5e580"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f4ac36d4670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f4ac3f5c580"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f4ac36d2670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f4ac3f56580"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f4ac36d0670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f4ac3f58580"/></to>
    </wire>
    <wire loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f4ac36dd5b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f4ac3586430"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ac27e6440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ac362f9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ac27e6a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ac3592880"/></to>
    </wire>
    <wire loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ac3592880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f4ac3586430"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ac27eb2b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ac3718860"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ac27eca60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ac362b130"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ac362b130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ac359a060"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac362a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac27df760"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ac362d8a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ac359cbf0"/></to>
    </wire>
    <wire loc="106:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ac359cbf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ac2771850"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f4ac3632a80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ac36285c0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac362e5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac359de60"/></to>
    </wire>
    <wire loc="105:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac359de60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac2772970"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ac362f9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ac3616020"/></to>
    </wire>
    <wire loc="108:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ac359a060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ac2770c30"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac359a930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac362a020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ac36154b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ac359a060"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f4ac3616690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ac37113b0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f4ac3616e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ac370d8a0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ac359b400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ac2770020"/></to>
    </wire>
    <wire loc="109:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac276c590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac359a930"/></to>
    </wire>
    <wire loc="111:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4ac276cd50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ac2774750"/></to>
    </wire>
    <wire loc="75:../../../..//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f4ac2769020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f4ac357f250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f4ac370b020"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f4ac357bd40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f4ac3f63580"/></to>
    </wire>
    <wire loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f4ac3579cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f4ac3f5c580"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ac3464c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ac346fda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ac3468b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac3462670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ac345be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ac3462e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ac344e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ac34512f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ac346d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ac3456670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ac34522f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ac3467c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac3466c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ac345c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ac345fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ac3461670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac3470760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac38a5680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ac346caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ac346a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ac3455a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ac346a870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ac3452ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ac346ddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ac3457e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ac3466480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac3467480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ac346f750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ac3459e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ac345a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ac3457670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ac344fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ac3451ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ac345d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ac345ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ac3453ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ac3460670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ac344ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ac38a4630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ac346f100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ac3468370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ac3464480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ac345ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ac3461e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ac345b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ac3463670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ac346e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac3463e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ac3469020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ac3469cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ac34532f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ac3454ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ac346c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ac34542f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ac344f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ac345de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ac3459670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ac346eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ac346d770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ac3460e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ac3469670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ac345f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ac3456e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ac344d7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ac38a4630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ac3438c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ac3443da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ac343bb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac3436670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ac342ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ac3436e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ac34222f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ac34242f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ac3440120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ac342a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ac34252f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ac343ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac3439c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ac3430670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ac3432e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ac3434670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac3444760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac38a5680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ac343faa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ac343e120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ac3429a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ac343e870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ac3425ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ac3440dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ac342be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ac3439480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac343a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ac3443750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ac342ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ac342d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ac342b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ac3423ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ac3424ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ac3431670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ac342de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ac3426ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ac3433670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ac3422ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ac38a4630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ac3443100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ac343b370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ac3438480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ac3430e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ac3434e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ac342e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ac3437670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ac3441450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac3437e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ac343d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ac343dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ac34262f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ac3428ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ac343f450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ac34282f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ac34232f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ac3431e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ac342c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ac3441aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ac3440770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ac3433e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ac343d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ac3432670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ac342ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ac34207a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ac38a4630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f4ac33f9880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f4ac33ee020"/></to>
    </wire>
    <wire loc="20:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f4ac33ee020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f4ac33e9140"/></to>
    </wire>
    <wire loc="16:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f4ac33e4bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f4ac33edc50"/></to>
    </wire>
    <wire loc="21:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f4ac33edc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f4ac33d0150"/></to>
    </wire>
    <wire loc="17:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f4ac33e8530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ac3386a20"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f4ac33d4540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f4ac33d5590"/></to>
    </wire>
    <wire loc="11:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f4ac33d5590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac33849e0"/></to>
    </wire>
    <wire loc="18:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f4ac33cb950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f4ac33d2ca0"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f4ac33d2ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f4ac33a8a90"/></to>
    </wire>
    <wire loc="19:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f4ac33d09f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f4ac33d4540"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ac3398020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f4ac3392530"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f4ac3392530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ac338ee50"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac338b020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f4ac4325060"/></to>
    </wire>
    <wire loc="9:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3383c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f4ac3fae020"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4ac3369990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4ac335e900"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f4ac336b150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f4ac335d0f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f4ac335dae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ac3b55220"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f4ac3351500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f4ac3a54c70"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4ac3349820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4ac3a51e60"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f4ac3347b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f4ac3a4c9b0"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ac3352880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ac3a13150"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4ac3345020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac32a9c30"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac32a9c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac38a8960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac3345d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac32a88f0"/></to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac32a88f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac38a5680"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ac33426d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f4ac32a72f0"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ac32a72f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ac3342de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f4ac32a6cc0"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ac32a6cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ac3341530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f4ac32a4370"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ac32a4370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ac3341c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ac32a3d00"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ac32a3d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac3343e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac329dc60"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac329dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ac3344780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f4ac32847a0"/></to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ac32847a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ac38a4630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ac3343550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ac32892f0"/></to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ac32892f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac33403e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac329e480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac329e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac333f5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac329be50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac329be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac333e020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac329a670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac329a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ac3340e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f4ac32a17b0"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ac32a17b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ac333d9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f4ac3287ad0"/></to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ac3287ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ac333e890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f4ac32882f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ac32882f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ac333d130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f4ac3288ad0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ac3288ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ac3336d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ac3278df0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ac3278df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ac3270550"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac3359d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac31f2670"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac3358bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac31ee0c0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4ac3357950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ac31ed550"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ac334abe0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ac31e5480"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ac31e5480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ac31d78b0"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ac333a6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ac40009a0"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ac329cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ac32a6020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ac329fc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ac3292e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ac329ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ac32862f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ac328e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ac329ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ac3294670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ac3296e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ac3298670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ac32a2370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ac328da70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ac32a2ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ac3289ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ac32a3060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ac328fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ac329d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ac32a7940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ac3290e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ac3291670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ac328f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ac3295670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ac3291e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ac328aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ac3297670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ac3286ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ac38a4630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ac329f490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ac329c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ac3294e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ac3298e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ac3292670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ac329b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ac32a6670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ac32a1160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ac32a1e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ac328a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ac328cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ac32a36b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ac328c2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ac32872f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ac3295e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ac3290670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ac32a49c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ac3297e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ac3296670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ac328ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f4ac3274020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f4ac326f7c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ac325a150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ac40009a0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4ac326e020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4ac3a51e60"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f4ac326d380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f4ac3a4f090"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f4ac326c6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f4ac3a4e390"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ac326ba50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ac3a12a20"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4ac326a6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac308fd00"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ac308fd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ac38a8960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ac3269530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f4ac306cad0"/></to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ac306cad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ac38a4630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ac3268ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ac308a6b0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ac308a6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ac32683a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f4ac3088370"/></to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ac3088370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac3267330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac31f2670"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac32661e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac31ee0c0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4ac3263d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ac31ed550"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4ac3266b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4ac3c13b80"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac325e3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac3081e50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac3081e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac325ecb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac3080670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac3080670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ac3260b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f4ac3087160"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ac3087160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ac325c6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f4ac306c2f0"/></to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ac306c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ac325d590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f4ac306e2f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ac306e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ac325de00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f4ac306ead0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ac306ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ac325b020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ac3070ad0"/></to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ac3070ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ac325b8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f4ac308d300"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ac308d300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f4ac324e9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ac31777c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ac3adc020"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f4ac31d1820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4ac31804e0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f4ac31d3b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4ac316b610"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f4ac316b610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4ac30b22b0"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f4ac316f020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac30c0150"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ac3171130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac313c020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ac313c020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac26679d0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f4ac30ba640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ac310f2f0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ac310a850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ac313c870"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ac313c870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ac26605f0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ac30b1690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ac315bb70"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ac315bb70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ac3153610"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ac26679d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac264b360"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f4ac265bd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ac2666260"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ac2666260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ac264bbf0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ac265d9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ac315bb70"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac2624dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac2650020"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac2650020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac3b314d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac2622440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac264f760"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac264f760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac3b2e280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac2621760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac264ea80"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac264ea80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac3b2dba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f4ac3150b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ac3ad2020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f4ac31079c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f4ac30b5a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ac30a88c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ac309f2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f4ac309f2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ac316f020"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ac3082c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ac308c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ac3086c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ac3079e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ac3080e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ac308b370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ac3074670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ac30702f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ac3085c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac3084c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ac307a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ac307ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ac307f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac308e970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac38a5680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ac308ad00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ac3073a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ac3088ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ac308a060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ac3075e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ac3084480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac3085480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ac308d950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ac3077e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ac3078670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ac3075670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ac306dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ac307b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ac3078e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ac3071ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ac307e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ac3086490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ac3082480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ac307ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ac307fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ac3079670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ac3081670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ac308c670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ac3087e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ac30712f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ac3072ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ac30722f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ac306d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ac307be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ac3077670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ac308ccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ac308b9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ac307ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ac30877b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ac307c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ac3074e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ac306b7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ac38a4630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f4ac303f920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f4ac303c940"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ac30459a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ac303c080"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ac301be60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4ac3023020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ac301aae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ac301c690"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ac301c690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ac3827280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4ac30198f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4ac3041a20"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac3018170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac31ee0c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4ac3000200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4ac2ffb570"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ac2ffa3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4ac3000950"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac2ffaa70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac31ee0c0"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ac2fc2d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4ac2fcc6b0"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ac2fc1b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4ac2fcc020"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac2fc02f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac31f2670"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac2fbf170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac31ee0c0"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4ac2fbfb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ac2f71410"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f4ac2f93db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f4ac2f65800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ac2f61580"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ac2f61580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ac3827280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ac2f4c1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ac3ca0670"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ac2e80c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ac3cf92d0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ac2e7a400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ac3cf92d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../..//tos/system/MainC.nc">
      <documentation loc="45:../../../..//tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../..//tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../..//tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../..//tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../..//tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../..//tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../..//tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../..//tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../..//tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../..//tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="ReceivingBufferC" loc="4:ReceivingBufferC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../..//tos/system/LedsC.nc">
      <documentation loc="34:../../../..//tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../..//tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../..//tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ReceivingBuffer_AppC.AMSenderC" loc="47(ReceivingBuffer_AppC.AMSenderC):../../../..//tos/system/AMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceivingBuffer_AppC.AMSenderC.SenderC" loc="47(ReceivingBuffer_AppC.AMSenderC.SenderC):../../../..//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceivingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(ReceivingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP):../../../..//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../..//tos/system/AMQueueP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../..//tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../..//tos/system/StateImplC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../..//tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../..//tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../..//tos/system/ArbiterP.nc">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../..//tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../..//tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../..//tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../..//tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ac41bf200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ac41bf200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../..//tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../..//tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../..//tos/system/RandomC.nc">
      <documentation loc="33:../../../..//tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../..//tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../..//tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ReceivingBuffer_AppC.R_A" loc="43(ReceivingBuffer_AppC.R_A):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceivingBuffer_AppC.R_B" loc="43(ReceivingBuffer_AppC.R_B):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceivingBuffer_AppC.Timer1" loc="44(ReceivingBuffer_AppC.Timer1):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceivingBuffer_AppC.Timer2" loc="44(ReceivingBuffer_AppC.Timer2):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceivingBuffer_AppC.ADC0" loc="42(ReceivingBuffer_AppC.ADC0):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ReceivingBuffer_AppC.ADC1" loc="42(ReceivingBuffer_AppC.ADC1):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f4ac42e7890" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f4ac42e7c30" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f4ac42e5020" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f4ac42e53a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f4ac42e5720" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f4ac42e5a90" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f4ac42e5e20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f4ac42e4200" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f4ac42e45d0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f4ac42a9e70" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f4ac42a6270" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f4ac3f2c9f0" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f4ac3f2cda0" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f4ac3f2b1a0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f4ac3f2b550" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f4ac3f2b8c0" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../..//tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f4ac3d96da0" loc="47:../../../..//tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../..//tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f4ac3d80e20" loc="47:../../../..//tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../..//tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f4ac3d73ac0" loc="43:../../../..//tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../..//tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f4ac3d4fc80" loc="45:../../../..//tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f4ac3b119d0" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f4ac3b119d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f4ac3acd120" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f4ac3acd120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../..//tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f4ac3abca50" loc="55:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f4ac3abca50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f4ac3ab8290" loc="56:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f4ac3ab8290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f4ac3ab8680" loc="57:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f4ac3ab8680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f4ac3ab8e60" loc="58:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f4ac3ab8e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f4ac3ab7260" loc="59:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f4ac3ab7a60" loc="60:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f4ac3ab7a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../..//tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f4ac3adda20" loc="52:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f4ac3adda20"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f4ac3a96290" loc="53:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f4ac3a96290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f4ac3a96680" loc="54:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f4ac3a96680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f4ac3a96e60" loc="55:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f4ac3a96e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f4ac3a94260" loc="56:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../..//tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../..//tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f4ac3610020" loc="89:../../../..//tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f4ac36030d0" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../..//tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f4ac35e8800" loc="52:../../../..//tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ac33a6020" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ac33a6020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4ac33a67b0" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac33a67b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ac3182a60" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ac3182a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ac3137cc0" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ac3137cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ac3101230" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ac3101230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f4ac3101560" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../..//tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../..//tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f4ac2e85390" loc="43:../../../..//tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f4ac43968d0" loc="58:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac43968d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac4396c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f4ac43973f0" loc="57:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4ac43973f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4ac4397770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac4399880" loc="42:../../../..//tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac4399880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac4399c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f4ac43908a0" loc="6:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f4ac43908a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac4390c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac4394a70" loc="4:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac4394a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac4394df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f4ac43901c0" loc="5:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ac43901c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac4390540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f4ac438f020" loc="7:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f4ac438f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac438f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac4393c80" loc="2:../../../..//tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac4393c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac43890a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f4ac4372020" loc="39:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ac4372020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac43723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f4ac43686c0" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ac43686c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f4ac436e660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4ac4368bd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f4ac4368d60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4ac436e020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f4ac4368a40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f4ac436e1b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4ac436e340"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4ac436e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac436f020" loc="39:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac436f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac436f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f4ac43583d0" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ac43583d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f4ac4357340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4ac43588e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f4ac4358a70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4ac4358c00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f4ac4358750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f4ac4358d90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4ac4357020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4ac43571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f4ac4357680" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4ac4357680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f4ac4357a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac4359cb0" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac4359cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac43580a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f4ac43145a0" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f4ac43145a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac4314920"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac4314ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac4314c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac4314dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac4313020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac43131b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac4313340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac43134d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac4313660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f4ac4302020" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f4ac4302020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac43023a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac4302530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac43026c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac4302850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac43029e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac4302b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac4302d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac4301020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac43011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f4ac430b700" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f4ac430b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac430ba80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac430bc10"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac430bda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac430a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac430a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac430a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f4ac42efa20" loc="68:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f4ac42efa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42efda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac42ee020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac42ee1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac42ee340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac42ee4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac42ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f4ac4312aa0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f4ac4312aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac4312e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac4311020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac43111b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac4311340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac43114d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f4ac42f5020" loc="61:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f4ac42f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42f53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac42f5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac42f56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac42f5850"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac42f59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f4ac42eca20" loc="71:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f4ac42eca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42ecda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac42eb020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac42eb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac42eb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac42eb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac42eb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f4ac42fc5a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f4ac42fc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac42fc920"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac42fcab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac42fcc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac42fcdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac42fb020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac42fb1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac42fb340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac42fb4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac42fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f4ac4315b10" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f4ac4315b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac431c020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac431c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac431c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac431c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac431c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac431c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac431c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac431cb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac431cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f4ac42f1a20" loc="66:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f4ac42f1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42f1da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac42f0020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac42f01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac42f0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac42f04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac42f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f4ac42f73e0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f4ac42f73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42f7760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac42f78f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac42f7a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac42f7c10"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac42f7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f4ac43015a0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f4ac43015a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac4301a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac4301bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac4301d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac42ff020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac42ff1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac42ff340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac42ff4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac42ff660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac42ff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f4ac430a700" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f4ac430a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac430aa80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac430ac10"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac430ada0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac4304020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac43041b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac4304340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f4ac42eea20" loc="69:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f4ac42eea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42eeda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac42ed020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac42ed1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac42ed340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac42ed4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac42ed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f4ac42ffbe0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f4ac42ffbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac42fe020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac42fe1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac42fe340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac42fe4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac42fe660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac42fe7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac42fe980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac42feb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac42feca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f4ac4311890" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f4ac4311890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac4311c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac4311da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac430c020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac430c1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac430c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f4ac4325060" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f4ac4325060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac43253e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac4325570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac4325700"/>
        <function-ref name="get" scoped="" ref="0x7f4ac4325890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac4325a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac4325bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac4325d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac4324020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac43241b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac4324340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac43244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f4ac42f5da0" loc="62:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f4ac42f5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42f4180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac42f4310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac42f44a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac42f4630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac42f47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f4ac431b0c0" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f4ac431b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac431b440"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac431b5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac431b760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac431b8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac431ba80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac431bc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac431bda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac4314020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac43141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f4ac42fba50" loc="56:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f4ac42fba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac42fbdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac42fa020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac42fa1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac42fa340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac42fa4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac42fa660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac42fa7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac42fa980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac42fab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f4ac43056d0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f4ac43056d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac4305a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac4305be0"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac4305d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac430b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac430b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac430b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f4ac42f0a20" loc="67:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f4ac42f0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42f0da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac42ef020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac42ef1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac42ef340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac42ef4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac42ef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f4ac430dcf0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f4ac430dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac43120a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac4312230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac43123c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac4312550"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac43126e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f4ac42f61f0" loc="60:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f4ac42f61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42f6570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac42f6700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac42f6890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac42f6a20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac42f6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f4ac42eda20" loc="70:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f4ac42eda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42edda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac42ec020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac42ec1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac42ec340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac42ec4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac42ec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f4ac42fd0c0" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f4ac42fd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac42fd440"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac42fd5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac42fd760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac42fd8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac42fda80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac42fdc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac42fdda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac42fc020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac42fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f4ac43046c0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f4ac43046c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac4304a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac4304bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac4304d60"/>
        <function-ref name="get" scoped="" ref="0x7f4ac4303020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac43031b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac4303340"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac43034d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac4303660"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac43037f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac4303980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac4303b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f4ac42f4b80" loc="63:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f4ac42f4b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42f3020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac42f31b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac42f3340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac42f34d0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac42f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f4ac42f2a20" loc="65:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f4ac42f2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42f2da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac42f1020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac42f11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac42f1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac42f14d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac42f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f4ac42f3a20" loc="64:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f4ac42f3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42f2020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac42f21b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac42f2340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac42f24d0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac42f2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f4ac42f8570" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f4ac42f8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42f88f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac42f8a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac42f8c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac42f8da0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac42f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f4ac42f9020" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f4ac42f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac42f93a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac42f9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac42f96c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac42f9850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac42f99e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac42f9b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac42f9d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac42f8020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac42f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f4ac42b3aa0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4ac42b3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac42b3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f4ac42b3450" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f4ac42b3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac42b37d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f4ac42b1120" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4ac42b1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac42b14a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f4ac42b4d80" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ac42b4d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac42b3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ac42b5540" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac42b5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac42b58c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac42b5a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac42b5be0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac42b5d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac42b4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac42b41b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac42b4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac42b44d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac42b4660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac42b47f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac42b4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f4ac42ab940" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4ac42ab940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac42abcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f4ac42ab2f0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f4ac42ab2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac42ab670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f4ac42aa020" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4ac42aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac42aa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f4ac42acbf0" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ac42acbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac42ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ac42ad3e0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac42ad3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac42ad760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac42ad8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac42ada80"/>
        <function-ref name="get" scoped="" ref="0x7f4ac42adc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac42adda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac42ac020"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac42ac1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac42ac340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac42ac4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac42ac660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac42ac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ac425fa90" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ac425fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac425fe10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac425e020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac425e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac425e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac425e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac425e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ac42a79d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ac42a79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac42a7d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac4260020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac42601b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac4260340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac42604d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac4260660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac42607f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac4260980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac4260b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ac425c020" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ac425c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac425c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ac4260de0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ac4260de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac425f180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac425f310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac425f4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac425f630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac425f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ac425e930" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac425e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac425ecb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac425ee40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac425d020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac425d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac425d340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac425d4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac425d660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac425d7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac425d980"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac425db10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac425dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ac4257160" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ac4257160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42574e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac4257670"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac4257800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac4257990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac4257b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac4257cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ac4259020" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ac4259020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac42593a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac4259530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac42596c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac4259850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac42599e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac4259b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac4259d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac4258020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac42581b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ac42547a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ac42547a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac4254b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ac4258480" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ac4258480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac4258800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac4258990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac4258b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac4258cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac4258e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ac4255020" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac4255020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac42553a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac4255530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac42556c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac4255850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac42559e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac4255b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac4255d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac4254020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac42541b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac4254340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac42544d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ac424f7a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ac424f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac424fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac424fcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac424fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac424e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac424e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac424e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ac42516d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ac42516d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac4251a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac4251be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac4251d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac4250020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac42501b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac4250340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac42504d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac4250660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac42507f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ac424dc50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ac424dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac424c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ac4250ac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ac4250ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac4250e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac424f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac424f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac424f340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac424f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ac424e610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac424e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac424e990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac424eb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac424ecb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac424ee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac424d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac424d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac424d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac424d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac424d660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac424d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac424d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ac4248cb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ac4248cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42470a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac4247230"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac42473c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac4247550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac42476e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac4247870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ac424ab30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ac424ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac4249020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac42491b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac4249340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac42494d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac4249660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac42497f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac4249980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac4249b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac4249ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ac42442f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ac42442f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac4244670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ac4248020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ac4248020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42483a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac4248530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac42486c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac4248850"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac42489e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ac4247b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac4247b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac4245020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac42451b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac4245340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac42454d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac4245660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac42457f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac4245980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac4245b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac4245ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac4245e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac4244020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ac423f2f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ac423f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac423f670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac423f800"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac423f990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac423fb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac423fcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac423fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ac4241220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ac4241220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac42415a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac4241730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac42418c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac4241a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac4241be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac4241d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac4240020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac42401b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac4240340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ac423d7a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ac423d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac423db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ac4240610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ac4240610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac4240990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac4240b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac4240cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac4240e40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac423f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ac423e160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac423e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac423e4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac423e670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac423e800"/>
        <function-ref name="get" scoped="" ref="0x7f4ac423e990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac423eb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac423ecb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac423ee40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac423d020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac423d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac423d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac423d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ac42387a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ac42387a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac4238b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac4238cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac4238e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac4237020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac42371b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac4237340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ac423a6d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ac423a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac423aa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac423abe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac423ad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac4239020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac42391b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac4239340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac42394d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac4239660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac42397f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ac4235c50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ac4235c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac4234020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ac4239ac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ac4239ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac4239e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac4238020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac42381b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac4238340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac42384d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ac4237610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac4237610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac4237990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac4237b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac4237cb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac4237e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac4235020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac42351b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac4235340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac42354d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac4235660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac42357f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac4235980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ac4230cb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ac4230cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac422f0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac422f230"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac422f3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac422f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac422f6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac422f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ac4232b30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ac4232b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac4231020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac42311b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac4231340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac42314d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac4231660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac42317f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac4231980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac4231b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac4231ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ac422d2f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ac422d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac422d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ac4230020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ac4230020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42303a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac4230530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac42306c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac4230850"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac42309e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ac422fb40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac422fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac422e020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac422e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac422e340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac422e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac422e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac422e7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac422e980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac422eb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac422eca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac422ee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac422d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ac42282f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ac42282f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac4228670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac4228800"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac4228990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac4228b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac4228cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac4228e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ac422a220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ac422a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac422a5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac422a730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac422a8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac422aa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac422abe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac422ad70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac4229020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac42291b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac4229340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ac42267a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ac42267a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac4226b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ac4229610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ac4229610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac4229990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac4229b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac4229cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac4229e40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac4228020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ac4227160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac4227160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac42274e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac4227670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac4227800"/>
        <function-ref name="get" scoped="" ref="0x7f4ac4227990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac4227b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac4227cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac4227e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac4226020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac42261b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac4226340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac42264d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ac42207a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ac42207a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac4220b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac4220cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac4220e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac421f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac421f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac421f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ac42226d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ac42226d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac4222a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac4222be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac4222d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac4221020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac42211b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac4221340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac42214d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac4221660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac42217f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ac421ec50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ac421ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac421d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ac4221ac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ac4221ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac4221e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac4220020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac42201b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac4220340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac42204d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ac421f610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac421f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac421f990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac421fb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac421fcb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac421fe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac421e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac421e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac421e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac421e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac421e660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac421e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac421e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ac4219cb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ac4219cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42180a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac4218230"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac42183c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac4218550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac42186e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac4218870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ac421bb30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ac421bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac421a020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac421a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac421a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac421a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac421a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac421a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac421a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac421ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac421aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ac42162f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ac42162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac4216670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ac4219020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ac4219020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac42193a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac4219530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac42196c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac4219850"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac42199e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ac4218b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac4218b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac4217020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac42171b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac4217340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac42174d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac4217660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac42177f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac4217980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac4217b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac4217ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac4217e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac4216020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f4ac420f240" loc="7:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f4ac420f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac420f5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f4ac4213a90" loc="4:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f4ac4213a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac4213e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f4ac4210260" loc="5:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f4ac4210260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac42105e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f4ac42109f0" loc="6:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f4ac42109f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac4210d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f4ac44b54c0" loc="55:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4ac44b54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f4ac44b5840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f4ac47c93b0" loc="51:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f4ac47c93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f4ac47c9730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f4ac47c98c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f4ac47c9a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f4ac45f1bc0" loc="52:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f4ac45f1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f4ac472d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f4ac4370b40" loc="39:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ac4370b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f4ac41d8b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4ac41d81b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f4ac41d8340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4ac41d84d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f4ac41d8020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f4ac41d8660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4ac41d87f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4ac41d8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f4ac41ccdc0" loc="60:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ac41ccdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac41cb180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f4ac41d9590" loc="57:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4ac41d9590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4ac41d9910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f4ac41cc6c0" loc="59:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f4ac41cc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac41cca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f4ac41d9c00" loc="58:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4ac41d9c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac41cc020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4ac41cc1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4ac41cc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f4ac4cbd410" loc="48:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac4cbd410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac4cbd790"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac4cbd920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4ac4c4e3a0" loc="47:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4ac4c4e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac4c4e720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4ac4c4e8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4ac4c4ea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f4ac43db040" loc="56:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f4ac43db040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac43db3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac43db550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f4ac43d7490" loc="57:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f4ac43d7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f4ac43d7810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f4ac43d79a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f4ac43d7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4ac43dd140" loc="55:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4ac43dd140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac43dd4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4ac43dd650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4ac43dd7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_A" ref="0x7f4ac4153220" loc="11:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_A" scoped="" ref="0x7f4ac4153220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac41535a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f4ac413b7a0" loc="17:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f4ac413b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ac413bb20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ac413bcb0"/>
        <function-ref name="start" scoped="" ref="0x7f4ac413be40"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac4140020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f4ac41bdc40" loc="8:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4ac41bdc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4ac41bc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC0" ref="0x7f4ac412c1d0" loc="20:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f4ac412c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac412c550"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac412c6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac412c870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac412ca00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac412cb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac412cd20"/>
        <function-ref name="set" scoped="" ref="0x7f4ac413a020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac413a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4ac41315f0" loc="18:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ac41315f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac4131970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ac4131b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac4131c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac4131e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ac413f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f4ac41578f0" loc="10:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ac41578f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac4157c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac4157e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac41b0020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac41b01b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac41b0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="assignFlowstoSlots" ref="0x7f4ac4123db0" loc="59:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7f4ac4123db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac4122310"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac41224a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateSchedule" ref="0x7f4ac411f020" loc="62:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateSchedule" scoped="" ref="0x7f4ac411f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac411f3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac411f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7f4ac414a9e0" loc="13:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7f4ac414a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac4147020"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac4155510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ac4148300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ac4155e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ac4147920"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ac41474a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac4155990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ac4164670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ac4148910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ac4164b40"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac4155090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_B" ref="0x7f4ac41538e0" loc="12:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_B" scoped="" ref="0x7f4ac41538e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac4153c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC1" ref="0x7f4ac413a510" loc="21:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f4ac413a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac413a890"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac413aa20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac413abb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac413ad40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac4132020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac41321b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac4132340"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac41324d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeFlow" ref="0x7f4ac4124e70" loc="58:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeFlow" scoped="" ref="0x7f4ac4124e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac4123220"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac41233b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ac41b1590" loc="7:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ac41b1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ac41b1910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ac41b1aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ac41b1c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ac41b1dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ac41bd020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac41bd1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ac41bd340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ac41bd980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac41bd4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ac41bd660"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ac41bd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeSchedule" ref="0x7f4ac4121100" loc="60:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeSchedule" scoped="" ref="0x7f4ac4121100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac4121480"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac4121610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeCluster" ref="0x7f4ac4120080" loc="61:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeCluster" scoped="" ref="0x7f4ac4120080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac4120400"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac4120590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7f4ac4146020" loc="14:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x7f4ac4146020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac4142630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac4145a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ac4143920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ac41434a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ac4141020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ac4142ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac4143020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ac4146c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ac4142020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ac4145110"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac41455e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PermutateCipher" ref="0x7f4ac411d020" loc="63:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PermutateCipher" scoped="" ref="0x7f4ac411d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac411d3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac411d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f4ac40009a0" loc="46:../../../..//tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ac40009a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ac4000d20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ac3ffd020"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ac3ffd1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ac3ffd340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ac3ffd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ffd660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ac3ffd7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ac3ffde30"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ffd980"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ac3ffdb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ac3ffdca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f4ac3ff8b90" loc="50:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f4ac3ff8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ff6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ff61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ff6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ff64d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ff6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ff67f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ff6980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ff6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac3ffcdc0" loc="46:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac3ffcdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac3ff9180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f4ac3ff6e30" loc="51:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f4ac3ff6e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ff51e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ff5370"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ff5500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ff5690"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ff5820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ff59b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ff5b40"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ff5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f4ac3ff9400" loc="47:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ac3ff9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ac3ff9780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ac3ff9910"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ac3ff9aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ac3ff9c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ac3ff9dc0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ff8020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ac3ff81b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ac3ff87f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ff8340"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ac3ff84d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ac3ff8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f4ac3ff4020" loc="52:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f4ac3ff4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ff43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ff4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ff46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ff4850"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ff49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ff4b70"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ff4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ff3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f4ac3ffa5a0" loc="41:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f4ac3ffa5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ffa920"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ffaab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ffac40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ffadd0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fd8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fd81b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fd8340"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fd84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f4ac3fd8830" loc="42:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f4ac3fd8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fd8bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fd8d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fd7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fd71b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fd7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fd74d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fd7660"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fd77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f4ac3fd6dd0" loc="44:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac3fd6dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac3fd5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f4ac3fd7b50" loc="43:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f4ac3fd7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fd6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fd61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fd6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fd64d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fd6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fd67f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fd6980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fd6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4ac3fbe020" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4ac3fbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fbe3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fbe530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fbe6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fbe850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fbe9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fbeb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fbed00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fbd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fbd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fbd340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fbd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fbd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fbd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fbda80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fbdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4ac3faa020" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4ac3faa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3faa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3faa530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3faa6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3faa850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3faa9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3faab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3faad00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fa9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fa91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fa9340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fa94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fa9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fa97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fa9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fa9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f4ac3f60560" loc="145:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f4ac3f60560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f608e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f60a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f60c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f60d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f5f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f5f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f5f340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f5f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f5f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f5f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f5f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f5fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f5fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f5e020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f5e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f4ac3f3c570" loc="165:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f4ac3f3c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f3c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f3ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f3cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f3cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f3b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f3b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f3b340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f3b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f3b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f3b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f3b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f3bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f3bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f3a020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f4ac3f5e580" loc="146:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f4ac3f5e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f5e900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f5ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f5ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f5edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f5d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f5d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f5d340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f5d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f5d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f5d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f5d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f5db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f5dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f5c020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f5c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f4ac3fa6020" loc="71:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f4ac3fa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fa63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fa6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fa66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fa6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fa69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fa6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fa6d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fa5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fa51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fa5340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fa54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fa5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fa57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fa5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fa5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f4ac3f91200" loc="84:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f4ac3f91200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f91580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f91710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f918a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f91a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f91bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f91d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f90020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f901b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f90340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f904d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f90660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f907f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f90980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f90c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f90da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f4ac3f7d200" loc="97:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f4ac3f7d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f7d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f7d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f7d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f7da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f7dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f7dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f7c020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f7c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f7c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f7c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f7c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f7c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f7c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f7cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f7cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f4ac3f6d200" loc="108:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f4ac3f6d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f6d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f6d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f6d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f6da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f6dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f6dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f6c020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f6c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f6c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f6c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f6c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f6c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f6c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f6cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f6cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f4ac3f58580" loc="149:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f4ac3f58580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f58900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f58a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f58c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f58db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f57020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f571b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f57340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f574d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f57660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f577f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f57980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f57b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f57ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f56020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f4ac3f48570" loc="159:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f4ac3f48570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f488f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f48a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f48c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f48da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f47020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f471b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f47340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f474d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f47660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f477f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f47980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f47b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f47ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f46020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f461b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f4ac3f34580" loc="171:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f4ac3f34580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f34900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f34a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f34c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f34db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f32020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f32340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f324d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f32660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f327f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f32980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f32b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f32ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f31020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4ac3fb8020" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4ac3fb8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fb83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fb8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fb86c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fb8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fb89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fb8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fb8d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fb7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fb71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fb7340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fb74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fb7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fb77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fb7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fb7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f4ac3f56580" loc="150:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f4ac3f56580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f56900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f56a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f56c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f56db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f55020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f55340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f554d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f55660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f557f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f55980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f55b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f55ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f54020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4ac3fb4020" loc="61:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4ac3fb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fb43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fb4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fb46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fb4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fb49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fb4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fb4d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fb3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fb31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fb3340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fb34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fb3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fb37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fb3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fb3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f4ac3fa0020" loc="74:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f4ac3fa0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fa03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fa0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fa06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fa0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fa09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fa0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fa0d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f9f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f9f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f9f340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f9f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f9f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f9f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f9fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f9fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f4ac3f8b200" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f4ac3f8b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f8b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f8b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f8b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f8ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f8bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f8bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f8a020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f8a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f8a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f8a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f8a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f8a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f8a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f8ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f8ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f4ac3f77200" loc="100:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f4ac3f77200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f77580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f77710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f778a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f77a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f77bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f77d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f76020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f761b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f76340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f764d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f76660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f767f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f76980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f76c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f76da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f4ac3f67200" loc="111:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f4ac3f67200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f67580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f67710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f678a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f67a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f67bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f67d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f66020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f661b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f66340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f664d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f66660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f667f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f66980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f66c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f66da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4ac3fc3020" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4ac3fc3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fc33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fc3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fc36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fc3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fc39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fc3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fc3d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fc2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fc21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fc2340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fc24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fc2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fc27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fc2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fc2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4ac3fae020" loc="64:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4ac3fae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fae4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fae630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fae7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fae950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3faeae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3faec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3faee00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fad020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fad1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fad340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fad4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fad660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fad7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fada80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fadc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f4ac3f9a020" loc="77:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f4ac3f9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f9a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f9a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f9a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f9a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f9a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f9ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f9ad00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f99020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f991b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f99340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f994d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f99660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f997f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f99a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f99c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f4ac3f63580" loc="144:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f4ac3f63580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f63900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f63a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f63c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f63db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f61020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f61340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f614d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f61660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f617f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f61980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f61b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f61ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f60020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f4ac3f42570" loc="162:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f4ac3f42570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f428f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f42a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f42c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f42da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f41020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f411b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f41340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f414d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f41660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f417f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f41980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f41b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f41ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f40020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f4ac3f36570" loc="169:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f4ac3f36570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f368f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f36a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f36c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f36da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f35020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f35340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f354d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f35660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f357f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f35980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f35b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f35ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f34020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f4ac3f4e580" loc="155:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f4ac3f4e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f4e900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f4ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f4ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f4edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f4d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f4d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f4d340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f4d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f4d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f4d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f4d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f4db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f4dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f4c020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f4c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f4ac3f96020" loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f4ac3f96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f965a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f96730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f968c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f96a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f96be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f96d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f95020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f951b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f95340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f954d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f95660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f957f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f95980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f95c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f95da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f4ac3f81200" loc="95:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f4ac3f81200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f81580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f81710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f818a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f81a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f81bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f81d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f80020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f801b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f80340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f804d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f80660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f807f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f80980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f80c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f80da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f4ac3f71200" loc="106:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f4ac3f71200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f71580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f71710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f718a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f71a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f71bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f71d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f70020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f701b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f70340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f704d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f70660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f707f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f70980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f70c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f70da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f4ac3f40570" loc="163:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f4ac3f40570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f408f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f40a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f40c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f40da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f3f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f3f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f3f340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f3f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f3f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f3f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f3f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f3fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f3fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f3e020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f4ac3f54570" loc="152:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f4ac3f54570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f548f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f54a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f54c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f54da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f53020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f531b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f53340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f534d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f53660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f537f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f53980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f53b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f53ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f52020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4ac3fbc020" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4ac3fbc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fbc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fbc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fbc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fbc850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fbc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fbcb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fbcd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fbb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fbb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fbb340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fbb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fbb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fbb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fbba80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fbbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4ac3fa8020" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4ac3fa8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fa83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fa8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fa86c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fa8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fa89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fa8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fa8d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fa7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fa71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fa7340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fa74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fa7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fa77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fa7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fa7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f4ac3f75200" loc="104:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f4ac3f75200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f75580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f75710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f758a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f75a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f75bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f75d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f74020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f741b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f74340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f744d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f74660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f747f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f74980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f74c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f74da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f4ac3fa4020" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f4ac3fa4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fa43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fa4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fa46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fa4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fa49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fa4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fa4d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fa3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fa31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fa3340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fa34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fa3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fa37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fa3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fa3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f4ac3f8f200" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f4ac3f8f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f8f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f8f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f8f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f8fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f8fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f8fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f8e020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f8e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f8e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f8e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f8e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f8e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f8e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f8ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f8eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f4ac3f7b200" loc="98:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f4ac3f7b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f7b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f7b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f7b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f7ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f7bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f7bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f7a020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f7a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f7a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f7a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f7a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f7a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f7a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f7ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f7ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f4ac3f6b200" loc="109:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f4ac3f6b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f6b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f6b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f6b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f6ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f6bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f6bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f6a020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f6a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f6a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f6a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f6a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f6a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f6a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f6ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f6ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f4ac3f50580" loc="154:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f4ac3f50580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f50900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f50a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f50c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f50db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f4f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f4f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f4f340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f4f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f4f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f4f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f4f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f4fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f4fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f4e020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f4e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4ac3fd0020" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4ac3fd0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fd03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fd0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fd06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fd0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fd09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fd0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fd0d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fcf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fcf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fcf340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fcf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fcf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fcf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fcfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fcfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4ac3fb2020" loc="62:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4ac3fb2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fb23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fb2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fb26c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fb2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fb29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fb2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fb2d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fb1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fb11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fb1340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fb14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fb1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fb17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fb1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fb1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f4ac3f9e020" loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f4ac3f9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f9e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f9e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f9e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f9e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f9e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f9eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f9ed00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f9d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f9d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f9d340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f9d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f9d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f9d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f9da80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f9dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f4ac3f89200" loc="88:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f4ac3f89200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f89580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f89710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f898a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f89a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f89bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f89d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f88020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f881b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f88340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f884d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f88660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f887f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f88980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f88c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f88da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f4ac3f4c580" loc="156:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f4ac3f4c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f4c900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f4ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f4cc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f4cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f4b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f4b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f4b340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f4b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f4b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f4b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f4b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f4bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f4bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f4a020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f4ac3f46570" loc="160:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f4ac3f46570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f468f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f46a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f46c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f46da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f45020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f451b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f45340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f454d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f45660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f457f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f45980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f45b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f45ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f44020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f4ac3f3a570" loc="166:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f4ac3f3a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f3a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f3aa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f3ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f3ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f39020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f391b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f39340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f394d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f39660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f397f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f39980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f39b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f39ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f38020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f4ac3f85200" loc="93:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f4ac3f85200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f85580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f85710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f858a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f85a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f85bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f85d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f84020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f841b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f84340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f844d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f84660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f847f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f84980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f84c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f84da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f4ac3f4a580" loc="157:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f4ac3f4a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f4a900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f4aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f4ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f4adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f49020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f491b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f49340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f494d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f49660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f497f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f49980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f49b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f49ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f48020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4ac3fc0020" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4ac3fc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fc03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fc0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fc06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fc0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fc09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fc0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fc0d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fbf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fbf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fbf340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fbf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fbf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fbf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fbfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fbfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4ac3fac020" loc="65:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4ac3fac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fac3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fac530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fac6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fac850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fac9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3facb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3facd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fab1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fab340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fab4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fab660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fab7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3faba80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fabc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f4ac3f98020" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f4ac3f98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f983a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f98530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f986c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f98850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f989e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f98b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f98d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f97020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f971b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f97340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f974d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f97660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f977f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f97a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f97c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f4ac3f52580" loc="153:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f4ac3f52580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f52900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f52a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f52c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f52db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f51020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f511b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f51340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f514d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f51660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f517f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f51980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f51b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f51ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f50020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f501b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f4ac3f3e570" loc="164:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f4ac3f3e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f3e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f3ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f3ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f3eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f3d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f3d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f3d340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f3d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f3d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f3d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f3d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f3db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f3dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f3c020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f3c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f4ac3f94200" loc="83:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f4ac3f94200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f94580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f94710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f948a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f94a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f94bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f94d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f93020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f931b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f93340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f934d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f93660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f937f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f93980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f93c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f93da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f4ac3f7f200" loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f4ac3f7f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f7f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f7f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f7f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f7fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f7fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f7fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f7e020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f7e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f7e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f7e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f7e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f7e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f7e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f7ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f7eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f4ac3f6f200" loc="107:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f4ac3f6f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f6f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f6f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f6f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f6fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f6fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f6fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f6e020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f6e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f6e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f6e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f6e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f6e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f6e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f6ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f6eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4ac3fba020" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4ac3fba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fba3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fba530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fba6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fba850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fba9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fbab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fbad00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fb9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fb91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fb9340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fb94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fb9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fb97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fb9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fb9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f4ac3f73200" loc="105:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f4ac3f73200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f73580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f73710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f738a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f73a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f73bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f73d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f72020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f721b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f72340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f724d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f72660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f727f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f72980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f72c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f72da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4ac3fb6020" loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4ac3fb6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fb63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fb6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fb66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fb6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fb69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fb6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fb6d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fb5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fb51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fb5340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fb54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fb5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fb57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fb5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fb5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f4ac3fa2020" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f4ac3fa2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fa23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fa2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fa26c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fa2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fa29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fa2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fa2d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fa1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fa11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fa1340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fa14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fa1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fa17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fa1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fa1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f4ac3f8d200" loc="86:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f4ac3f8d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f8d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f8d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f8d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f8da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f8dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f8dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f8c020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f8c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f8c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f8c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f8c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f8c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f8c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f8cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f8cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f4ac3f79200" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f4ac3f79200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f79580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f79710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f798a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f79a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f79bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f79d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f78020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f781b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f78340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f784d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f78660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f787f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f78980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f78c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f78da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f4ac3f69200" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f4ac3f69200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f69580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f69710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f698a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f69a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f69bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f69d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f68020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f681b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f68340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f684d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f68660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f687f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f68980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f68c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f68da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4ac3fc5020" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4ac3fc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fc53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fc5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fc56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fc5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fc59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fc5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fc5d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3fc4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3fc41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3fc4340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3fc44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3fc4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3fc47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fc4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fc4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4ac3fb0020" loc="63:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4ac3fb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3fb03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3fb0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3fb06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3fb0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3fb09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3fb0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3fb0d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3faf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3faf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3faf340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3faf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3faf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3faf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3fafa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3fafc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f4ac3f9c020" loc="76:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f4ac3f9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f9c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f9c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f9c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f9c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f9c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f9cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f9cd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f9b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f9b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f9b340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f9b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f9b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f9b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f9ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f9bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f4ac3f87200" loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f4ac3f87200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f87580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f87710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f878a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f87a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f87bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f87d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f86020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f861b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f86340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f864d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f86660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f867f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f86980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f86c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f86da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f4ac3f5a560" loc="148:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f4ac3f5a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f5a8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f5aa70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f5ac00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f5ad90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f59020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f591b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f59340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f594d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f59660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f597f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f59980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f59b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f59ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f58020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f4ac3f44570" loc="161:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f4ac3f44570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f448f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f44a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f44c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f44da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f43020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f431b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f43340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f434d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f43660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f437f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f43980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f43b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f43ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f42020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f4ac3f5c580" loc="147:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f4ac3f5c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f5c900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f5ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f5cc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f5cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f5b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f5b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f5b340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f5b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f5b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f5b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f5b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f5bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f5bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f5a020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f5a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f4ac3f83200" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f4ac3f83200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f83580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f83710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f838a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f83a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f83bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f83d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f82020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f821b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f82340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f824d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f82660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f827f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f82980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f82c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f82da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f4ac3f38570" loc="168:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f4ac3f38570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f388f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f38a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f38c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f38da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f37020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f371b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f37340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f374d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f37660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f377f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f37980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f37b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f37ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f36020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f4ac3f31580" loc="172:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f4ac3f31580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f31900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f31a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f31c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f31db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f30020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f301b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f30340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f304d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f30660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f307f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f30980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f30b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f30ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f2f020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f2f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f4ac3f651f0" loc="143:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f4ac3f651f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f65970"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f65b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f65c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f65e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f64020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f64340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f644d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f64660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f647f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f64980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f64b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f64ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f63020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3f066d0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3f066d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f06a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f06be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f06d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f05020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f051b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f05340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f054d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f05660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f057f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f05980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f05b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f05ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f05e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f04120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f042b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3f01100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3f01100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3f01480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3f01610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3f017a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3f01930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3f01ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3f01c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3f01de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3f00020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3f001b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3f00340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3f004d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3f00660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3f007f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3f00a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3f00c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3efdd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3efdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3efc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3efc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3efc400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3efc590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3efc720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3efc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3efca40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3efcbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3efcd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3efb020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3efb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3efb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3efb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3efb760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3efb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3ef8740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3ef8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ef8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ef8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3ef8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ef7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ef71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3ef7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ef74d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ef7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3ef77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3ef7980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ef7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3ef7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3ef7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3ef6120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ef62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3ef3100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3ef3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ef3480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ef3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3ef37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ef3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ef3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3ef3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ef3de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ef2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3ef21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3ef2340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ef24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3ef2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3ef27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3ef2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ef2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3eefd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3eefd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3eee0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3eee270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3eee400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3eee590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3eee720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3eee8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3eeea40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3eeebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3eeed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3eed020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3eed1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3eed340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3eed4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3eed760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3eed8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3eea740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3eea740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3eeaac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3eeac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3eeade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ee8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ee81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3ee8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ee84d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ee8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3ee87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3ee8980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ee8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3ee8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3ee8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3ee7120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ee72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3ee4100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3ee4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ee4480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ee4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3ee47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ee4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ee4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3ee4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ee4de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ee3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3ee31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3ee3340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ee34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3ee3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3ee37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3ee3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ee3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3ee0d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3ee0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3edf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3edf270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3edf400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3edf590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3edf720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3edf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3edfa40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3edfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3edfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3ede020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ede1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3ede340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3ede4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3ede760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ede8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3edb740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3edb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3edbac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3edbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3edbde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3eda020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3eda1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3eda340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3eda4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3eda660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3eda7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3eda980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3edab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3edaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3edae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3ed9120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ed92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3ed6100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3ed6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ed6480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ed6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3ed67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ed6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ed6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3ed6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ed6de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ed5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3ed51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3ed5340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ed54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3ed5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3ed57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3ed5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ed5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3ed2d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3ed2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ed10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ed1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3ed1400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ed1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ed1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3ed18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ed1a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ed1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3ed1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3ed0020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ed01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3ed0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3ed04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3ed0760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ed08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3ecd860" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3ecd860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ecdbe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ecdd70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3ecc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ecc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ecc340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3ecc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ecc660"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ecc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3ecc980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3eccb10"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3eccca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3ecce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3ecb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3ecb2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ecb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3ec8270" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3ec8270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ec85f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ec8780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3ec8910"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ec8aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ec8c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3ec8dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ec7020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ec71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3ec7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3ec74d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ec7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3ec77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3ec7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3ec7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ec7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3ec3d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3ec3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ec20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ec2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3ec2400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ec2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ec2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3ec28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ec2a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ec2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3ec2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3ec1020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ec11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3ec1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3ec14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3ec1760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ec18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3ebe740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3ebe740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ebeac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ebec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3ebede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ebd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ebd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3ebd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ebd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ebd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3ebd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3ebd980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ebdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3ebdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3ebde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3ebc120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ebc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3eb9100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3eb9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3eb9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3eb9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3eb97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3eb9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3eb9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3eb9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3eb9de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3eb8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3eb81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3eb8340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3eb84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3eb8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3eb87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3eb8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3eb8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3eb5d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3eb5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3eb40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3eb4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3eb4400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3eb4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3eb4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3eb48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3eb4a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3eb4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3eb4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3eb3020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3eb31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3eb3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3eb34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3eb3760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3eb38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3eb0740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3eb0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3eb0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3eb0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3eb0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3eaf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3eaf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3eaf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3eaf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3eaf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3eaf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3eaf980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3eafb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3eafca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3eafe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3eae120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3eae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3eab100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3eab100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3eab480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3eab610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3eab7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3eab930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3eabac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3eabc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3eabde0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3eaa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3eaa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3eaa340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3eaa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3eaa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3eaa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3eaaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3eaac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3ea7d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3ea7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ea60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ea6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3ea6400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ea6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ea6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3ea68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ea6a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ea6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3ea6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3ea5020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ea51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3ea5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3ea54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3ea5760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3ea58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3ea2740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3ea2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3ea2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3ea2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3ea2de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3ea0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3ea01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3ea0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3ea04d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3ea0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3ea07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3ea0980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ea0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3ea0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3ea0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e9f120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e9f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e9c100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e9c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e9c480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e9c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e9c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e9c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e9cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e9cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e9cde0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e9b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e9b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e9b340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e9b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e9b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e9b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e9ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e9bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e98d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e98d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e970e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e97270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e97400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e97590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e97720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e978b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e97a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e97bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e97d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e96020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e961b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e96340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e964d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e96760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e93a60" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e93a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e93de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e92020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e921b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e92340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e924d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e92660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e927f0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e92980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e92b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e92ca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e92e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e91020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e911b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e91440"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e915d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e8e460" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e8e460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e8e7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e8e970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e8eb00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e8ec90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e8ee20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e8d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e8d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e8d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e8d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e8d660"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e8d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e8d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e8db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e8dda0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e8ae00" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e8ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e891c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e89350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e894e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e89670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e89800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e89990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e89b20"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e89cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e89e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e88020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e881b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e88340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e884d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e88760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e888f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e85740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e85740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e85ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e85c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e85de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e84020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e841b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e84340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e844d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e84660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e847f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e84980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e84b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e84ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e84e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e83120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e80100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e80100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e80480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e80610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e807a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e80930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e80ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e80c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e80de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e7f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e7f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e7f340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e7f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e7f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e7f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e7fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e7fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e7cd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e7cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e7a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e7a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e7a400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e7a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e7a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e7a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e7aa40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e7abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e7ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e79020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e791b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e79340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e794d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e79760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e798f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e76740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e76740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e76ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e76c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e76de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e75020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e751b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e75340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e754d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e75660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e757f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e75980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e75b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e75ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e75e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e74120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e742b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e71100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e71100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e71480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e71610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e717a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e71930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e71ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e71c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e71de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e70020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e701b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e70340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e704d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e70660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e707f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e70a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e70c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e6dd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e6dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e6c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e6c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e6c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e6c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e6c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e6c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e6ca40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e6cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e6cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e6b020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e6b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e6b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e6b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e6b760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e6b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e68740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e68740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e68ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e68c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e68de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e67020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e671b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e67340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e674d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e67660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e677f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e67980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e67b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e67ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e67e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e66120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e662b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e63100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e63100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e63480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e63610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e637a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e63930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e63ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e63c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e63de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e62020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e621b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e62340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e624d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e62660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e627f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e62a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e62c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e5fd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e5fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e5e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e5e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e5e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e5e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e5e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e5e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e5ea40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e5ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e5ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e5d020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e5d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e5d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e5d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e5d760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e5d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e5a740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e5a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e5aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e5ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e5ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e59020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e591b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e59340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e594d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e59660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e597f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e59980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e59b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e59ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e59e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e58120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e582b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e54100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e54100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e54480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e54610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e547a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e54930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e54ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e54c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e54de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e53020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e531b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e53340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e534d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e53660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e537f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e53a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e53c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e50d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e50d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e4f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e4f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e4f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e4f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e4f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e4f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e4fa40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e4fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e4fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e4e020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e4e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e4e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e4e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e4e760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e4e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e4b740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e4b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e4bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e4bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e4bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e4a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e4a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e4a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e4a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e4a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e4a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e4a980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e4ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e4aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e4ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e49120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e46100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e46100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e46480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e46610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e467a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e46930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e46ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e46c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e46de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e45020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e451b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e45340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e454d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e45660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e457f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e45a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e45c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e42d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e42d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e410e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e41270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e41400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e41590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e41720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e418b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e41a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e41bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e41d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e40020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e40340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e40760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e408f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e3d740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e3d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e3dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e3dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e3dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e3c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e3c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e3c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e3c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e3c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e3c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e3c980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e3cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e3cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e3ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e3b120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e3b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e38100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e38100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e38480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e38610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e387a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e38930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e38ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e38c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e38de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e37020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e371b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e37340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e374d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e37660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e377f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e37a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e37c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e34d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e34d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e320e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e32270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e32400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e32590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e32720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e328b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e32a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e32bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e32d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e31020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e311b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e31340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e314d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e31760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e318f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e2e740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e2e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e2eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e2ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e2ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e2d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e2d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e2d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e2d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e2d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e2d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e2d980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e2db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e2dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e2de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e2c120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e2c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e29100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e29100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e29480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e29610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e297a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e29930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e29ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e29c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e29de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e28020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e281b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e28340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e284d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e28660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e287f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e28a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e28c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ac3e25d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ac3e25d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3e240e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3e24270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3e24400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3e24590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3e24720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3e248b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3e24a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3e24bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3e24d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3e23020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3e231b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3e23340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3e234d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3e23760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3e238f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ac3dac2f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3dac2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3dac670"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3dac800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3dac990"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3dacb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3daccb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3dace40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3dab020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3dab1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3dab340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3dab4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3dab660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3dab7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3dab980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3dabc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3dabda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ac3dbd020" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3dbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3dbd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3dbd530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3dbd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3dbd850"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3dbd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3dbdb70"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3dbdd00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3dac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ac3da8de0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3da8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3da7180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3da7310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3da74a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3da7630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3da77c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3da7950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3da7ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3da7c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3da7e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3da6020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3da61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3da6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3da64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3da6760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3da68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ac3da9b90" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3da9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3da8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3da81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3da8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3da84d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3da8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3da87f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3da8980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3da8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ac3da3930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3da3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3da3cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3da3e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3da1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3da11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3da1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3da14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3da1660"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3da17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3da1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3da1b10"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3da1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3da1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3da0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3da02b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3da0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ac3da4710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3da4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3da4a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3da4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3da4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3da3020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3da31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3da3340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3da34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3da3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ac2e8d020" loc="49:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ac2e8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2e8d3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2e8d530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2e8d6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2e8d850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac2e8d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ac2e8dc30" loc="50:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ac2e8dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac2e8b020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ac2e8b1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2e8b340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2e8b4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ac2e8b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ac2e8b8b0" loc="51:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ac2e8b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ac2e8bc30"/>
        <function-ref name="source" scoped="" ref="0x7f4ac2e8bdc0"/>
        <function-ref name="address" scoped="" ref="0x7f4ac2e8a020"/>
        <function-ref name="destination" scoped="" ref="0x7f4ac2e8a1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ac2e8a340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ac2e8a4d0"/>
        <function-ref name="type" scoped="" ref="0x7f4ac2e8a660"/>
        <function-ref name="setType" scoped="" ref="0x7f4ac2e8a7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ac2e8a980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ac2e8ab10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ac2e8aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4ac2e89020" loc="52:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4ac2e89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ac2e893a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ac2e89530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ac2e896c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ac2987a40" loc="49:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ac2987a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2987dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2986020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac29861b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2986340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac29864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ac2986720" loc="50:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ac2986720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac2986aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ac2986c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2986dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2985020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ac29851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ac2985400" loc="51:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ac2985400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ac2985780"/>
        <function-ref name="source" scoped="" ref="0x7f4ac2985910"/>
        <function-ref name="address" scoped="" ref="0x7f4ac2985aa0"/>
        <function-ref name="destination" scoped="" ref="0x7f4ac2985c30"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ac2985dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ac2984020"/>
        <function-ref name="type" scoped="" ref="0x7f4ac29841b0"/>
        <function-ref name="setType" scoped="" ref="0x7f4ac2984340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ac29844d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ac2984660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ac29847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4ac2984a80" loc="52:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4ac2984a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ac2984e00"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ac2983020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ac29831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ac297aa20" loc="44:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ac297aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac297ada0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2979020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac29791b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2979340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac29794d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f4ac2979780" loc="46:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ac2979780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2979b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2979c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2979e20"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2978020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac29781b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4ac2978400" loc="47:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ac2978400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ac2978780"/>
        <function-ref name="source" scoped="" ref="0x7f4ac2978910"/>
        <function-ref name="address" scoped="" ref="0x7f4ac2978aa0"/>
        <function-ref name="destination" scoped="" ref="0x7f4ac2978c30"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ac2978dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ac2977020"/>
        <function-ref name="type" scoped="" ref="0x7f4ac29771b0"/>
        <function-ref name="setType" scoped="" ref="0x7f4ac2977340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ac29774d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ac2977660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ac29777f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ac3d54940" loc="43:../../../..//tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ac3d54940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac3d54cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3d54e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac3d51020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac3d511b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac3d51340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f4ac3d06400" loc="48:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ac3d06400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac3d067a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3d06930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac3d06ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac3d06c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac3d06de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ac3d084b0" loc="46:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ac3d084b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac3d08850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3d089e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac3d08b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac3d08d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac3d06020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4ac3d04720" loc="50:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ac3d04720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac3d04aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ac3d04c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3d04dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac3d03020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ac3d031b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f4ac3d03480" loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f4ac3d03480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac3d03800"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac3d03990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f4ac3d03c60" loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f4ac3d03c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac3d02020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac3d021b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4ac3d05060" loc="49:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ac3d05060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ac3d053e0"/>
        <function-ref name="source" scoped="" ref="0x7f4ac3d05570"/>
        <function-ref name="address" scoped="" ref="0x7f4ac3d05700"/>
        <function-ref name="destination" scoped="" ref="0x7f4ac3d05890"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ac3d05a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ac3d05bb0"/>
        <function-ref name="type" scoped="" ref="0x7f4ac3d05d40"/>
        <function-ref name="setType" scoped="" ref="0x7f4ac3d04020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ac3d041b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ac3d04340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ac3d044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ac3cfe140" loc="61:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3cfe140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ac3cfe4c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ac3cfe650"/>
        <function-ref name="start" scoped="" ref="0x7f4ac3cfe7e0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3cfe970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ac3cfd1d0" loc="63:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ac3cfd1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac3cfd550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3cfd6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac3cfd870"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac3cfda00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac3cfdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4ac3cfa020" loc="65:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f4ac3cfa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac3cfa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ac3cfa630" loc="67:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ac3cfa630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac3cfa9b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ac3cfab40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3cfacd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac3cfae60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ac3cf9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f4ac3cf3cd0" loc="70:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ac3cf3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ac3cee2e0"/>
        <function-ref name="clear" scoped="" ref="0x7f4ac3ceea10"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ac3cf5b60"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ced170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ac3ce2b20" loc="72:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ac3ce2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ac3ce8020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ac3ce81b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ac3ce8340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ac3ce84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ac3cfc3f0" loc="64:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ac3cfc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac3cfc770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4ac3cf8990" loc="69:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ac3cf8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ac3cf8d10"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ac3cf7020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ac3cf71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ac3cf92d0" loc="68:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ac3cf92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ac3cf9650"/>
        <function-ref name="source" scoped="" ref="0x7f4ac3cf97e0"/>
        <function-ref name="address" scoped="" ref="0x7f4ac3cf9970"/>
        <function-ref name="destination" scoped="" ref="0x7f4ac3cf9b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ac3cf9c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ac3cf9e20"/>
        <function-ref name="type" scoped="" ref="0x7f4ac3cf8020"/>
        <function-ref name="setType" scoped="" ref="0x7f4ac3cf81b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ac3cf8340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ac3cf84d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ac3cf8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4ac3ceddc0" loc="71:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ac3ceddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ac3cea3f0"/>
        <function-ref name="clear" scoped="" ref="0x7f4ac3ceab20"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ac3cebca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3ce92a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ac3cd4880" loc="55:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3cd4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ac3cd4c00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ac3cd4d90"/>
        <function-ref name="start" scoped="" ref="0x7f4ac3cd3020"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3cd31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ac3cbad40" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac3cbad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ac3cc30e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ac3cc3270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ac3cc3400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ac3cc3590"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ac3cc3720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ac3cc38b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f4ac3caed20" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f4ac3caed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f4ac3cb81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ac3ccf760" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ac3ccf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac3ccfae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ac3ccfc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3ccfe00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac3cce020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ac3cce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ac3cd3980" loc="56:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ac3cd3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac3cd3d00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3cd2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac3cd21b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac3cd2340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac3cd24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4ac3cd1900" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f4ac3cd1900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac3cd1c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4ac3cc5970" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac3cc5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ac3cc5cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ac3cc5e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ac3ccd030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ac3ccd1c0"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ac3ccd350"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ac3ccd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ac3cc3bb0" loc="65:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ac3cc3bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ac3cc1020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ac3cc11b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ac3cc1340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ac3cc14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ac3cd2cb0" loc="57:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ac3cd2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac3cd10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4ac3ccd810" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ac3ccd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ac3ccdb90"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ac3ccdd20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ac3ccc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4ac3cb9020" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4ac3cb9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4ac3cb93a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4ac3cb9530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4ac3cb96c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4ac3cb9850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4ac3cb99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ac3cd0020" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ac3cd0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ac3cd03a0"/>
        <function-ref name="source" scoped="" ref="0x7f4ac3cd0530"/>
        <function-ref name="address" scoped="" ref="0x7f4ac3cd06c0"/>
        <function-ref name="destination" scoped="" ref="0x7f4ac3cd0850"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ac3cd09e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ac3cd0b70"/>
        <function-ref name="type" scoped="" ref="0x7f4ac3cd0d00"/>
        <function-ref name="setType" scoped="" ref="0x7f4ac3ccf020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ac3ccf1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ac3ccf340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ac3ccf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4ac3cc2a80" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ac3cc2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4ac3cc2e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ac3cb0b70" loc="43:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3cb0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ac3caa020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ac3caa1b0"/>
        <function-ref name="start" scoped="" ref="0x7f4ac3caa340"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3caa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4ac3c9f080" loc="55:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ac3c9f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4ac3c9f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4ac3c9e2e0" loc="57:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4ac3c9e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4ac3c9e660"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4ac3c9e7f0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4ac3c9e980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4ac3c9eb10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4ac3c9eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4ac3ca1670" loc="53:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac3ca1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ac3ca19f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ac3ca1b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ac3ca1d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ac3ca0020"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ac3ca01b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ac3ca0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f4ac3ca2170" loc="50:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f4ac3ca2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac3ca24f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3ca2680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac3ca2810"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac3ca29a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac3ca2b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ac3c9f700" loc="56:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ac3c9f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ac3c9fa80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ac3c9fc10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ac3c9fda0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ac3c9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f4ac3ca4d30" loc="47:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f4ac3ca4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac3ca30e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4ac3ca0670" loc="54:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ac3ca0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ac3ca09f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ac3ca0b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ac3ca0d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac3ca9210" loc="45:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac3ca9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac3ca9590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac3ca9720"/>
        <function-ref name="request" scoped="" ref="0x7f4ac3ca98b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac3ca9a40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac3ca9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f4ac3ca4020" loc="46:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f4ac3ca4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac3ca43a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3ca4530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac3ca46c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac3ca4850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac3ca49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4ac3ca3420" loc="48:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4ac3ca3420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac3ca37a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ac3ca3930"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3ca3ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac3ca3c50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ac3ca3de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f4ac3ca1020" loc="51:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ac3ca1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac3ca13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ac3c9d9f0" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3c9d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ac3c9dd70"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ac3c9a020"/>
        <function-ref name="start" scoped="" ref="0x7f4ac3c9a1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3c9a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ac3c99990" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac3c99990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ac3c99d10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ac3c98020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ac3c981b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ac3c98340"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ac3c984d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ac3c98660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ac3c9a600" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ac3c9a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac3c9a980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3c9ab10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac3c9aca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac3c9ae30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac3c99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ac3c99300" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ac3c99300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac3c99680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ac3c95690" loc="39:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ac3c95690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ac3c95a10"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ac3c95ba0"/>
        <function-ref name="start" scoped="" ref="0x7f4ac3c95d30"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3c94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ac3c92020" loc="41:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac3c92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ac3c923a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ac3c92530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ac3c926c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ac3c92850"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ac3c929e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ac3c92b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f4ac3c88ae0" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f4ac3c88ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ac3c88e60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ac3c86020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ac3c861b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ac3c86340"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ac3c864d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ac3c86660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ac3c7b020" loc="50:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac3c7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ac3c7b3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ac3c7b530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ac3c7b6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ac3c7b850"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ac3c7b9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ac3c7bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f4ac3c80d30" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ac3c80d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac3c880e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac3c88270"/>
        <function-ref name="modify" scoped="" ref="0x7f4ac3c88400"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac3c88590"/>
        <function-ref name="resend" scoped="" ref="0x7f4ac3c88720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ac3c942e0" loc="40:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ac3c942e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac3c94660"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3c947f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac3c94980"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac3c94b10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac3c94ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f4ac3c7f020" loc="48:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ac3c7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ac3c7f3a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ac3c7f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f4ac3c8f020" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f4ac3c8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ac3c8f3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3c8f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ac3c74660" loc="51:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac3c74660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3c749e0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ac3c74b70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ac3c74d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f4ac3c893f0" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f4ac3c893f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f4ac3c89770"/>
        <function-ref name="rfOff" scoped="" ref="0x7f4ac3c89900"/>
        <function-ref name="rxOn" scoped="" ref="0x7f4ac3c89a90"/>
        <function-ref name="startVReg" scoped="" ref="0x7f4ac3c89c20"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f4ac3c89db0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f4ac3c90020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f4ac3c901b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f4ac3c90340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ac3c7f7f0" loc="49:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ac3c7f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ac3c7fb70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ac3c7fd00"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ac3c7e020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ac3c7e1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ac3c7e340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3c7e4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ac3c7e660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ac3c7eca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3c7e7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ac3c7e980"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ac3c7eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f4ac3c92e60" loc="43:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac3c92e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac3c91210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac3c913a0"/>
        <function-ref name="request" scoped="" ref="0x7f4ac3c91530"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac3c916c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac3c91850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f4ac3c6fe40" loc="52:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f4ac3c6fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ac3c78310"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ac3c784a0"/>
        <function-ref name="isState" scoped="" ref="0x7f4ac3c78630"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ac3c787c0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ac3c78950"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ac3c78ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f4ac3c6a9e0" loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f4ac3c6a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac3c6ad60"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac3c69020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f4ac3c6ca10" loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f4ac3c6ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac3c6cd90"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac3c6a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f4ac3c6da00" loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f4ac3c6da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac3c6dd80"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac3c6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f4ac3c13b80" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4ac3c13b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4ac3c1f020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4ac3c1f1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4ac3c1f340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4ac3c1f4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4ac3c1f660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ac3c1f7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4ac3c1f980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4ac3c1fb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4ac3c1fca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4ac3c1fe30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ac3c1e020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ac3c1e1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f4ac3c1e340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4ac3c1e5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4ac3c1e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f4ac3c10020" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f4ac3c10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3c10c10"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac3c0f0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f4ac3c1ea60" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f4ac3c1ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f4ac3c1ede0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f4ac3c12020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f4ac3c121b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f4ac3c12340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f4ac3c124d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f4ac3c12660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f4ac3c127f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f4ac3c12980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac3c23720" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac3c23720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac3c23aa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac3c23c30"/>
        <function-ref name="request" scoped="" ref="0x7f4ac3c23dc0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac3c20020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac3c201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f4ac3c08970" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4ac3c08970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4ac3c08cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4ac3c08e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4ac3c07030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4ac3c071c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4ac3c07350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ac3c074e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4ac3c07670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4ac3c07800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4ac3c07990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4ac3c07b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ac3c07cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ac3c07e40"/>
        <function-ref name="sync" scoped="" ref="0x7f4ac3c06020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4ac3c062b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4ac3c06440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f4ac3be08e0" loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ac3be08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3be0c60"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3be0df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f4ac3c01020" loc="50:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ac3c01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f4ac3c013a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f4ac3bf9d90" loc="52:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f4ac3bf9d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac3bf7670"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac3bff5d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac3bf7020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac3bffa90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac3bf7b30"/>
        <function-ref name="start" scoped="" ref="0x7f4ac3c00bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3bff110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f4ac3be45f0" loc="64:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ac3be45f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3be4970"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3be4b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f4ac3bf5380" loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f4ac3bf5380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3bf5700"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3bf5890"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3bf5a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3bf5bb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3bf5d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3bf4020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3bf41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3bf4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f4ac3c05b40" loc="48:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f4ac3c05b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3c03750"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac3c03bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f4ac3bce820" loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f4ac3bce820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac3bceba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac3bced30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f4ac3bdf1c0" loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ac3bdf1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3bdf540"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3bdf6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f4ac3bdfa70" loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac3bdfa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3bdfdf0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3bde020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f4ac3be83d0" loc="62:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ac3be83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3be8750"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3be88e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f4ac3bea810" loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ac3bea810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4ac3beab90"/>
        <function-ref name="changed" scoped="" ref="0x7f4ac3bead20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4ac3bf1020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4ac3bf11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f4ac3bf6060" loc="53:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4ac3bf6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3bf63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3bf6570"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3bf6700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3bf6890"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3bf6a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3bf6bb0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3bf6d40"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3bf5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f4ac3bdd120" loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ac3bdd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3bdd6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f4ac3bf46a0" loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f4ac3bf46a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3bf4a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3bf4bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3bf4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3bf3020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3bf31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3bf3340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3bf34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3bf3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac3c094a0" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac3c094a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac3c09820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f4ac3be0020" loc="65:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac3be0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3be03a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3be0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f4ac3bdda40" loc="72:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ac3bdda40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3bdddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4ac3bdc1d0" loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4ac3bdc1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac3bdc550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac3bdc6e0"/>
        <function-ref name="request" scoped="" ref="0x7f4ac3bdc870"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac3bdca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac3bdcb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f4ac3bdad90" loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f4ac3bdad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac3bd8180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac3bd8310"/>
        <function-ref name="request" scoped="" ref="0x7f4ac3bd84a0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac3bd8630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac3bd87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f4ac3c06740" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f4ac3c06740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f4ac3c06ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f4ac3c06c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f4ac3c06de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f4ac3c05020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f4ac3c051b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f4ac3c05340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f4ac3c054d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f4ac3c05660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f4ac3be8c80" loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ac3be8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3be40a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3be4230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f4ac3be1b00" loc="61:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ac3be1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3be1e80"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3be8030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f4ac3bdb2b0" loc="69:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ac3bdb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3bdb630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ac3bd8a80" loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ac3bd8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ac3bd8e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ac3bd7020"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ac3bd71b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ac3bd7340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ac3bd74d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3bd7660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ac3bd77f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ac3bd7e30"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3bd7980"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ac3bd7b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ac3bd7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f4ac3bcf940" loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f4ac3bcf940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac3bcfcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac3bcfe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac3c09b10" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac3c09b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac3c08020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac3c081b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ac3c08340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac3c084d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac3c08660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f4ac3be9520" loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ac3be9520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3be98a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3be9a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f4ac3be5a90" loc="59:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ac3be5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3be9020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3be91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f4ac3bf20e0" loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ac3bf20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac3bf2460"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac3bf25f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ac3bf2780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ac3bf2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f4ac3bda020" loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f4ac3bda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac3bda3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac3bda530"/>
        <function-ref name="request" scoped="" ref="0x7f4ac3bda6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac3bda850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac3bda9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f4ac3bdb9c0" loc="70:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ac3bdb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3bdbd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac3b587e0" loc="45:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac3b587e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac3b58b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f4ac3b55220" loc="46:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ac3b55220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac3b53b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac3b54a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac3b534e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac3b53020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac3b51020"/>
        <function-ref name="start" scoped="" ref="0x7f4ac3b54090"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3b545a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac3b4f490" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac3b4f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac3b4f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f4ac3b4fd20" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ac3b4fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac3a56670"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac3a57550"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac3a56020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac3a57a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac3a56b30"/>
        <function-ref name="start" scoped="" ref="0x7f4ac3a59b60"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3a57090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ac2902de0" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ac2902de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac28ff6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac29006b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac28ff090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac2900b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac28ffba0"/>
        <function-ref name="start" scoped="" ref="0x7f4ac2901ca0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac29001f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac2902590" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac2902590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac2902910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ac28fa020" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ac28fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac28f7870"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac28f9840"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac28f7220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac28f9d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac28f7d30"/>
        <function-ref name="start" scoped="" ref="0x7f4ac28fae30"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac28f9380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac28fb640" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac28fb640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac28fb9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f4ac28e18f0" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac28e18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac28e1c70"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac28e1e00"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac28e0020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac28e01b0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac28e0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f4ac28e5e70" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac28e5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac28e3220"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac28e33b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac28e3540"/>
        <function-ref name="get" scoped="" ref="0x7f4ac28e36d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac28e3860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac28e39f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac28e3b80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac28e3d10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac28e2020"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac28e21b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac28e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4ac28e25d0" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac28e25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac28e2950"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac28e2ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac28e2c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac28e2e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac28e1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac28e11b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac28e1340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac28e14d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac28e1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f4ac3b2dba0" loc="52:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac3b2dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac3b2c020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac3b2c1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac3b2c340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac3b2c4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac3b2c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f4ac3b314d0" loc="50:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac3b314d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac3b31850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac3b319e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac3b31b70"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3b31d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac3b30020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac3b301b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac3b30340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac3b304d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac3b30660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac3b307f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac3b30980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4ac3b2e280" loc="51:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac3b2e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac3b2e600"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac3b2e790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac3b2e920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac3b2eab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac3b2ec40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac3b2edd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac3b2d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac3b2d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac3b2d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f4ac28d7760" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac28d7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac28d7ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac28d7c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac28d7e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac28d3020"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac28d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4ac28dbdd0" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac28dbdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac28d9180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac28d9310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac28d94a0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac28d9630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac28d97c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac28d9950"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac28d9ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac28d9c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac28d9e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac28d8020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac28d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ac28debd0" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ac28debd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac28db4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac28dc4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac28dce60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac28dc9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac28db9a0"/>
        <function-ref name="start" scoped="" ref="0x7f4ac28dda80"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac28dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac28de340" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac28de340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac28de6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4ac28d8440" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac28d8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac28d87c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac28d8950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac28d8ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac28d8c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac28d8e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac28d7020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac28d71b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac28d7340"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac28d74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ac3adc020" loc="43:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ac3adc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac3adce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac3adb800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac3adb340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac3adbcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f4ac3ad2020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ac3ad2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac3ad2e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac3ad1800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac3ad1340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac3ad1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4ac3abf2c0" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac3abf2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac3abf640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac3abf7d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac3abf960"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3abfaf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac3abfc80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac3abfe10"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac3abe020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac3abe1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac3abe340"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac3abe4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac3abe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ac3ac10a0" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ac3ac10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac3ac0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac3ac09a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac3ac04e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac3ac0e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f4ac3a9d540" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f4ac3a9d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac3a9c3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac3a9cd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac3a9c890"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac3a9a260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ac3a9f0f0" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ac3a9f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac3a9e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac3a9e9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac3a9e4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac3a9ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ac28f41d0" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ac28f41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac28f2b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac28f39f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac28f24e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac28f2020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac28f0020"/>
        <function-ref name="start" scoped="" ref="0x7f4ac28f3020"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac28f3530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f4ac28eeb90" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f4ac28eeb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac28ea4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac28ec4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac28ece60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac28ec9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac28ea9a0"/>
        <function-ref name="start" scoped="" ref="0x7f4ac28ed9d0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac28ec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ac28f0690" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ac28f0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac28ef5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac28ee020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac28efa70"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac28ee4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f4ac3a4f090" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f4ac3a4f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a4f410"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a4f5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a4f730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a4f8c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a4fa50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a4fbe0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a4fd70"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f4ac3a4e390" loc="45:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f4ac3a4e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a4e710"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a4e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a4ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a4ebc0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a4ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a4d020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a4d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a4d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f4ac3a4d6a0" loc="46:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f4ac3a4d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a4da20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a4dbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a4dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a4c020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a4c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a4c340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a4c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a4c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f4ac3a51e60" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4ac3a51e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a50210"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a503a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a50530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a506c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a50850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a509e0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a50b70"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a50d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f4ac3a4bce0" loc="48:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f4ac3a4bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a4a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a4a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a4a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a4a550"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a4a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a4a870"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a4aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a4ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f4ac3a54c70" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f4ac3a54c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a51020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a511b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a51340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a514d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a51660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a517f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a51980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a51b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f4ac3a4c9b0" loc="47:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f4ac3a4c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a4cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a4b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a4b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a4b340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a4b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a4b660"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a4b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a4b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ac3a462f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a462f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a46670"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a46800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3a46990"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a46b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a46cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3a46e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a45020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a451b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3a45340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3a454d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a45660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3a457f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3a45980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3a45c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a45da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ac3a47020" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a473a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a47530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a476c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a47850"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a479e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a47b70"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a47d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a46020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ac3a42de0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a42de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a41180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a41310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3a414a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a41630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a417c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3a41950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a41ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a41c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3a41e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3a40020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3a40340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3a404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3a40760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a408f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ac3a43b60" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a43b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a42020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a421b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a42340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a424d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a42660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a427f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a42980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a42b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ac3a3d930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a3d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a3dcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a3de40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3a3c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a3c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a3c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3a3c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a3c660"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a3c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3a3c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3a3cb10"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a3cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3a3ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3a3b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3a3b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a3b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ac3a3e710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a3e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a3ea90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a3ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a3edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a3d020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a3d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a3d340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a3d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a3d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ac3a38480" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a38480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a38800"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a38990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3a38b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a38cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a38e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3a37020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a371b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a37340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3a374d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3a37660"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a377f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3a37980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3a37b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3a37da0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ac3a391d0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a391d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a39550"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a396e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a39870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a39a00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a39b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a39d20"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a38020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ac3a33020" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a33530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3a336c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a33850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3a33b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a33d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a31020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3a311b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3a31340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a314d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3a31660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3a317f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3a31a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a31c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ac3a35d70" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a35d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a34180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a34310"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a344a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a34630"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a347c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a34950"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a34ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a34c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ac3a2ede0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a2ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a2d180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a2d310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3a2d4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a2d630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a2d7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3a2d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a2dae0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a2dc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3a2de00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3a2c020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a2c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3a2c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3a2c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3a2c760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a2c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ac3a2fb60" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a2fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a2e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a2e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a2e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a2e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a2e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a2e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a2e980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a2eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ac3a29930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3a29930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a29cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a29e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3a28020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a281b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a28340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3a284d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a28660"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a287f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3a28980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3a28b10"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a28ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3a28e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3a27020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3a272b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a27440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ac3a2a710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac3a2a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3a2aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3a2ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3a2adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3a29020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3a291b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3a29340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3a294d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3a29660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f4ac3a13150" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ac3a13150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4ac3a134d0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac3a13660"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac3a137f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4ac3a13980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f4ac3a13d60" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ac3a13d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac3a12180"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac3a12310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ac3a124a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ac3a12630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f4ac3a12a20" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ac3a12a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac3a12da0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac3a0e020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ac3a0e1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ac3a0e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f4ac39f78f0" loc="42:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f4ac39f78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac39f7c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ac39f7e00"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac39f6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac39f61b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac39f6340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ac39f64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ac3a0ba20" loc="40:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ac3a0ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4ac3a0bda0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39f8020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac39f81b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4ac39f8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4ac39f85d0" loc="41:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac39f85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac39f8950"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac39f8ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac39f8c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac39f8e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac39f7020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac39f71b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac39f7340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac39f74d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac39f7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f4ac39f67a0" loc="43:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac39f67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac39f6b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac39f6cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac39f6e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac39f5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac39f51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac39f5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac39f54d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac39f5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac39f57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac39f5980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac39f5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac39f5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac39f5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac39f4120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac39f42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4ac39e78a0" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4ac39e78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39e7c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39e7db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39e6020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39e61b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39e6340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39e64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4ac39dca30" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4ac39dca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39dcdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39db020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39db1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39db340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39db4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39db660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4ac39e38a0" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4ac39e38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39e3c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39e3db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39e2020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39e21b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39e2340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4ac39e18a0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4ac39e18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39e1c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39e1db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39e0020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39e01b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39e0340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4ac39ed8a0" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4ac39ed8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39edc20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39eddb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39e8020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39e81b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39e8340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39e84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4ac39de8a0" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4ac39de8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39ded20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39dd020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39dd1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39dd340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39dd4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4ac39e68a0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4ac39e68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39e6c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39e6db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39e4020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39e41b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39e4340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4ac39dba30" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4ac39dba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39dbdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39da020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39da1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39da340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39da4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39da660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4ac39e98f0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4ac39e98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39e9c70"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39e9e00"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39ee020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39ee1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39ee340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4ac39e08a0" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4ac39e08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39e0c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39e0db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39df020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39df1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39df340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39df4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4ac39e88a0" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4ac39e88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39e8c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39e8db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39e7020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39e71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39e7340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39e74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4ac39dda30" loc="57:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4ac39dda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39dddb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39dc020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39dc1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39dc340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39dc4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39dc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4ac39e48a0" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4ac39e48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39e4c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39e4db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39e3020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39e31b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39e3340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4ac39e28a0" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4ac39e28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39e2c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39e2db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39e1020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39e11b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39e1340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4ac39ee8a0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4ac39ee8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39eec20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39eedb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39ed020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39ed1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39ed340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39ed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4ac39df8a0" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4ac39df8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39dfc20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39dfdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39de020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39de1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39de340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39de4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4ac39d38a0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4ac39d38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39d3c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39d3db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39d2020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39d21b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39d2340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4ac39c8a30" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4ac39c8a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39c8db0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39c7020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39c71b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39c7340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39c74d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4ac39d08a0" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4ac39d08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39d0c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39d0db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39cf020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39cf1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39cf340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4ac39ce8a0" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4ac39ce8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39cec20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39cedb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39cd020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39cd1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39cd340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4ac39d58a0" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4ac39d58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39d5c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39d5db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39d4020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39d41b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39d4340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39d44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4ac39ca8a0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4ac39ca8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39cad20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39c9020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39c91b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39c9340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39c94d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4ac39d28a0" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4ac39d28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39d2c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39d2db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39d1020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39d11b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39d1340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39d14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4ac39c7a30" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4ac39c7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39c7db0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39c6020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39c61b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39c6340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39c64d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4ac39d9810" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4ac39d9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39d9b90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39d9d20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39d6020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39d61b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39d6340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4ac39cd8a0" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4ac39cd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39cdc20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39cddb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39cc020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39cc1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39cc340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39cc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4ac39d48a0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4ac39d48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39d4c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39d4db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39d3020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39d31b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39d3340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39d34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4ac39c9a30" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4ac39c9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39c9db0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39c8020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39c81b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39c8340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39c84d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4ac39d18a0" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4ac39d18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39d1c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39d1db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39d0020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39d01b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39d0340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4ac39cf8a0" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4ac39cf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39cfc20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39cfdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39ce020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39ce1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39ce340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4ac39d68a0" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4ac39d68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39d6c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39d6db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39d5020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39d51b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39d5340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4ac39cc8a0" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4ac39cc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac39ccc20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac39ccdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac39ca020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac39ca1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac39ca340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac39ca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f4ac38f4610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ac38f4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac38f4990"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac38f4b20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac38f4cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac38f4e40"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac38e7020"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac38e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f4ac38f5a30" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f4ac38f5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac38f5db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac38f4020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ac38f41b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ac38f4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f4ac38e4610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ac38e4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac38e4990"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac38e4b20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac38e4cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ac38e4e40"/>
        <function-ref name="enable" scoped="" ref="0x7f4ac38e3020"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ac38e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f4ac38e6a70" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f4ac38e6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac38e6df0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac38e4020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ac38e41b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ac38e4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ac3497e50" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ac3497e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3496410"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34965a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ac34a1160" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ac34a1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac34a14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ac349be50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ac349be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3499210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ac3495880" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac3495880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3495c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3495d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ac348a0a0" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ac348a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac348a420"/>
        <function-ref name="write" scoped="" ref="0x7f4ac348a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ac34910a0" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ac34910a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3491420"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34915b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ac347f500" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ac347f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac347f880"/>
        <function-ref name="write" scoped="" ref="0x7f4ac347fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ac3481500" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ac3481500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3481880"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3481a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ac349f490" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ac349f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac349f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ac3487880" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ac3487880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3487c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3487d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ac3482500" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ac3482500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3482880"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3482a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ac3499e50" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ac3499e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3498210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ac3498e50" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac3498e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3497210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ac348d880" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ac348d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac348dc00"/>
        <function-ref name="write" scoped="" ref="0x7f4ac348dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ac348e0a0" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ac348e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac348e420"/>
        <function-ref name="write" scoped="" ref="0x7f4ac348e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ac3491880" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ac3491880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3491c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3491d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ac34a3a90" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac34a3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ac34a3e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ac34a2020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ac34a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ac349ee00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ac349ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac349d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ac349d490" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ac349d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac349d910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ac3486c80" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ac3486c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34850a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3485230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ac349dbe0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ac349dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac349c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ac3482ce0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ac3482ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34810a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3481230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ac349e160" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ac349e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac349e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ac34870a0" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ac34870a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3487420"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34875b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ac3498670" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ac3498670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34989f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3498b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ac3499670" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac3499670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34999f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3499b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ac34a2ad0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ac34a2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac34a2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ac34880a0" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ac34880a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3488420"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34885b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ac348a880" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ac348a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac348ac00"/>
        <function-ref name="write" scoped="" ref="0x7f4ac348ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ac3488880" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ac3488880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3488c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3488d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ac3480ce0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ac3480ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac347f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac347f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ac3481ce0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ac3481ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34800a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3480230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ac348e880" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ac348e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac348ec00"/>
        <function-ref name="write" scoped="" ref="0x7f4ac348ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ac34890a0" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ac34890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3489420"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34895b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ac3483ce0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ac3483ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34820a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3482230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ac3490880" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ac3490880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3490c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3490d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ac347fce0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ac347fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac347e0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac347e230"/>
        <function-ref name="write" scoped="" ref="0x7f4ac347e3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac347e550"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac347e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ac34a2480" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ac34a2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac34a2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ac349b670" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ac349b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac349b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac349bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ac3497670" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ac3497670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34979f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3497b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ac348c0a0" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ac348c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac348c420"/>
        <function-ref name="write" scoped="" ref="0x7f4ac348c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ac34900a0" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ac34900a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3490420"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34905b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ac348c880" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ac348c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac348cc00"/>
        <function-ref name="write" scoped="" ref="0x7f4ac348cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ac3496870" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ac3496870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3496bf0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3496d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ac34a17b0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ac34a17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac34a1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ac34950a0" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac34950a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3495420"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34955b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac34a4e20" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac34a4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac34a31c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac34a3350"/>
        <function-ref name="request" scoped="" ref="0x7f4ac34a34e0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac34a3670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac34a3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ac349c2f0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ac349c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac349c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ac349b020" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ac349b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac349b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ac3483500" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ac3483500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3483880"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3483a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ac3485ce0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ac3485ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34830a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3483230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ac349e7b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ac349e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac349eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ac3485500" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ac3485500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3485880"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3485a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ac3480500" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ac3480500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3480880"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3480a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ac348d0a0" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ac348d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac348d420"/>
        <function-ref name="write" scoped="" ref="0x7f4ac348d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ac3489880" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ac3489880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3489c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3489d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ac34a1e00" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ac34a1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac349f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ac349fae0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ac349fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac349fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ac348f0a0" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ac348f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac348f420"/>
        <function-ref name="write" scoped="" ref="0x7f4ac348f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ac349c940" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ac349c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac349ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ac348f880" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ac348f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac348fc00"/>
        <function-ref name="write" scoped="" ref="0x7f4ac348fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ac34860a0" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ac34860a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3486820"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34869b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ac347e9b0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ac347e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac347ed30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac347c020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac347c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac347c340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac347c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f4ac38a4630" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f4ac38a4630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac38a49b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac38a4b40"/>
        <function-ref name="write" scoped="" ref="0x7f4ac38a4cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac38a4e60"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac38a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ac38a5680" loc="40:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac38a5680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ac38a5a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ac38a5b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ac38a5d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f4ac38a38c0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f4ac38a38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac38a3c40"/>
        <function-ref name="write" scoped="" ref="0x7f4ac38a3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f4ac38a16f0" loc="43:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f4ac38a16f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac38a1a70"/>
        <function-ref name="write" scoped="" ref="0x7f4ac38a1c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac38a8960" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac38a8960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac38a8ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac38a8e70"/>
        <function-ref name="request" scoped="" ref="0x7f4ac38a5030"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac38a51c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac38a5350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f4ac38a0510" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f4ac38a0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac38a0890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f4ac388a680" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ac388a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac388aa00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac388ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f4ac389bbb0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f4ac389bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac389a020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac389a1b0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac389a340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac389a4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac389a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ac389f920" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac389f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ac389fca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ac389fe30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ac389c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f4ac3894080" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ac3894080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ac3894400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f4ac3893020" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f4ac3893020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ac38933a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ac3893530"/>
        <function-ref name="isState" scoped="" ref="0x7f4ac38936c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ac3893850"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ac38939e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ac3893b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4ac3896400" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4ac3896400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac3896780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac3896910"/>
        <function-ref name="request" scoped="" ref="0x7f4ac3896aa0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac3896c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac3896dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f4ac3898020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f4ac3898020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac38983a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3898530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f4ac3898db0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f4ac3898db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3897180"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3897310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ac3893df0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ac3893df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ac38921c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ac3892350"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ac38924e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ac3892670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ac3892800"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3892990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ac3892b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ac388c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3892cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ac3892e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ac388c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac389c810" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac389c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac389cb90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac389cd20"/>
        <function-ref name="request" scoped="" ref="0x7f4ac389b020"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac389b1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac389b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f4ac3885120" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f4ac3885120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac38854a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac3885630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f4ac3897ba0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f4ac3897ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3896020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ac382b770" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ac382b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ac382baf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ac382bc80"/>
        <function-ref name="isState" scoped="" ref="0x7f4ac382be10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ac3828020"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ac38281b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ac3828340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ac3827280" loc="66:../../../..//tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ac3827280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ac3827600"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ac3827790"/>
        <function-ref name="isState" scoped="" ref="0x7f4ac3827920"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ac3827ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ac3827c40"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ac3827dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac3822020" loc="66:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac3822020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac38223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ac3822b70" loc="67:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ac3822b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ac3821020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ac38211b0"/>
        <function-ref name="isState" scoped="" ref="0x7f4ac3821340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ac38214d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ac3821660"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ac38217f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4ac34cc020" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ac34cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac34cc3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac34cc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4ac38098f0" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ac38098f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ac3809c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac380ac40" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac380ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac3809020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac38091b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ac3809340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac38094d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac3809660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ac27f78f0" loc="82:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ac27f78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ac27f7c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ac27f7e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4ac27f42b0" loc="87:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ac27f42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac27f4630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac27f47c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4ac27f4a50" loc="89:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ac27f4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ac27f4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4ac27f60c0" loc="83:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ac27f60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ac27f6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac27f9c30" loc="81:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac27f9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac27f7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac27f71b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ac27f7340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac27f74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac27f7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4ac27f66d0" loc="85:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ac27f66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4ac27f6a50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4ac27f6be0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4ac27f6d70"/>
        <function-ref name="write" scoped="" ref="0x7f4ac27f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4ac37a45e0" loc="74:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac37a45e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ac37a4960"/>
        <function-ref name="configure" scoped="" ref="0x7f4ac37a4af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4ac37a0510" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ac37a0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac37a0890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac37a0a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4ac379e600" loc="80:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ac379e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ac379e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4ac37a4dd0" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ac37a4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ac37a3180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4ac379f370" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4ac379f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac379f6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac379f880"/>
        <function-ref name="request" scoped="" ref="0x7f4ac379fa10"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac379fba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac379fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac37a9a20" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac37a9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac37a9da0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac37a5020"/>
        <function-ref name="request" scoped="" ref="0x7f4ac37a51b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac37a5340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac37a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4ac37a3480" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ac37a3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4ac37a3800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4ac37a3990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4ac37a3b20"/>
        <function-ref name="write" scoped="" ref="0x7f4ac37a3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4ac37996a0" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ac37996a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ac3799a20"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ac3799bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4ac3729c40" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac3729c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ac3727020"/>
        <function-ref name="configure" scoped="" ref="0x7f4ac37271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4ac3726700" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ac3726700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac3726aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac3726c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4ac3725e00" loc="82:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ac3725e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ac37241c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4ac3727440" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ac3727440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ac37277c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f4ac3724490" loc="83:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4ac3724490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ac3724810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ac37249a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ac3724b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ac3724cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ac3724e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ac3723020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ac37231b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ac3723340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ac37234d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ac3723660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ac37237f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ac3723980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ac3723b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ac3723da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ac3722020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ac37221b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ac3722340"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ac37224d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ac3722660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ac37227f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ac3722980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ac3722b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ac3722ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ac3722e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac3721020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ac37213b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ac3721540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ac37216d0"/>
        <function-ref name="tx" scoped="" ref="0x7f4ac3721860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ac37219f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ac3721b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ac3721d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ac3720020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ac37201b0"/>
        <function-ref name="rx" scoped="" ref="0x7f4ac3720340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ac37204d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ac3720660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ac37207f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ac3720980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ac3720b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ac371f5a0" loc="85:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ac371f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ac371f920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ac371fab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ac371fc40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ac371fdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ac371e020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac371e1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ac371e340"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ac371e980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac371e660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ac371e4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ac371e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4ac3725060" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4ac3725060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac3725400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac3725590"/>
        <function-ref name="request" scoped="" ref="0x7f4ac3725720"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac37258b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac3725a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac372ae80" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac372ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac3729240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac37293d0"/>
        <function-ref name="request" scoped="" ref="0x7f4ac3729560"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac37296f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac3729880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4ac3727a50" loc="78:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ac3727a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4ac3727dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4ac3726020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4ac37261b0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3726340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4ac3720de0" loc="84:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ac3720de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ac371f180"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ac371f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f4ac371ec50" loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f4ac371ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac371d020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac371d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f4ac370d8a0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ac370d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac370dc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4ac37113b0" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ac37113b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ac3711730"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ac37118c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4ac3718860" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ac3718860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ac3718be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ac3718d70"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ac3715020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ac37151b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ac3715340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ac37154d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ac3715660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ac37157f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ac3715980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ac3715b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ac3715ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ac3715e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ac3714020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ac37142b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ac3714440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ac37145d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ac3714760"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ac37148f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ac3714a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ac3714c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ac3714da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ac3713020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ac37131b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ac3713340"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac37134d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ac3713860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ac37139f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ac3713b80"/>
        <function-ref name="tx" scoped="" ref="0x7f4ac3713d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ac3712020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ac37121b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ac3712340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ac37124d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ac3712660"/>
        <function-ref name="rx" scoped="" ref="0x7f4ac37127f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ac3712980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ac3712b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ac3712ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ac3712e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ac3711020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f4ac36d4670" loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f4ac36d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac36d49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac36d4b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac36d4d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac36d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac36d31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac36d3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac36d34d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac36d3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac36d37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac36d3980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac36d3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac36d3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac36d3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac36d2120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac36d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ac3707dc0" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ac3707dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ac3706180"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ac3706310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f4ac36d2670" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f4ac36d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac36d29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac36d2b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac36d2d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac36d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac36d11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac36d1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac36d14d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac36d1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac36d17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac36d1980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac36d1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac36d1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac36d1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac36d0120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac36d02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f4ac36d0670" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f4ac36d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac36d09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac36d0b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac36d0d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac36cf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac36cf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac36cf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac36cf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac36cf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac36cf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac36cf980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac36cfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac36cfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac36cfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac36ce120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac36ce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f4ac370b020" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4ac370b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ac370b3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ac370b530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ac370b6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ac370b850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ac370b9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ac370bb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ac370bd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ac370a020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ac370a1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ac370a340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ac370a4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ac370a660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ac370a7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ac370aa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ac370ac10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ac370ada0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ac3709020"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ac37091b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ac3709340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ac37094d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ac3709660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ac37097f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ac3709980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ac3709b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac3709ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ac3708220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ac37083b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ac3708540"/>
        <function-ref name="tx" scoped="" ref="0x7f4ac37086d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ac3708860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ac37089f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ac3708b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ac3708d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ac3707020"/>
        <function-ref name="rx" scoped="" ref="0x7f4ac37071b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ac3707340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ac37074d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ac3707660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ac37077f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ac3707980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f4ac36dd5b0" loc="79:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f4ac36dd5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4ac36dd930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4ac36ddac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4ac36ddc50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4ac36ddde0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4ac3704020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4ac37041b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4ac3704340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4ac37044d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac3704660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4ac37047f0"/>
        <function-ref name="getData" scoped="" ref="0x7f4ac3704980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4ac3704b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4ac3704ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4ac3703020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4ac37031b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f4ac3703340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4ac37034d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4ac3703660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4ac37037f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4ac3703980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4ac3703b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4ac3703ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4ac3703e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4ac36dc020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4ac36dc1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4ac36dc540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4ac36dc6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4ac36dc860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4ac36dc9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4ac36dcb80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4ac36dcd10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4ac36db020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4ac36db1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4ac36db340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4ac36db4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4ac36db660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4ac36db7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4ac36db980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4ac36dbb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4ac36dbca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4ac36dbe30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4ac36da020"/>
        <function-ref name="setData" scoped="" ref="0x7f4ac36da1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4ac36da340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4ac36da4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4ac36da660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4ac36da7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4ac36da980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4ac36dab10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4ac36d9420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4ac36d95b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4ac36d9740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4ac36d98d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4ac36d9a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4ac36d9bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4ac36d9d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4ac36d8020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4ac36d81b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4ac36d8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f4ac36d6670" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f4ac36d6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac36d69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac36d6b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac36d6d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac36d5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac36d51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac36d5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac36d54d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac36d5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac36d57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac36d5980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac36d5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac36d5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac36d5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac36d4120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac36d42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4ac3706750" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ac3706750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac3706ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f4ac36d8700" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f4ac36d8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac36d8a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac36d8c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac36d8da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac36d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac36d71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac36d7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac36d74d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac36d7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac36d77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac36d7980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac36d7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac36d7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac36d7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac36d6120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac36d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ac27ec2c0" loc="42:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ac27ec2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ac27ec640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ac27ec7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f4ac27e6440" loc="46:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ac27e6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac27e67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ac27df760" loc="51:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac27df760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ac27dfae0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ac27dfc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f4ac27e6a50" loc="48:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ac27e6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4ac27e6dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4ac27e5020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4ac27e51b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4ac27e5340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4ac27e54d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4ac27e5660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4ac27e57f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4ac27e5980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac27e5b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4ac27e5ca0"/>
        <function-ref name="getData" scoped="" ref="0x7f4ac27e5e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4ac27e4020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4ac27e41b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4ac27e4440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4ac27e45d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f4ac27e4760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4ac27e48f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4ac27e4a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4ac27e4c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4ac27e4da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4ac27e3020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4ac27e31b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4ac27e3340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4ac27e34d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4ac27e3660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4ac27e39f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4ac27e3b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4ac27e3d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4ac27e2020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4ac27e21b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4ac27e2340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4ac27e24d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4ac27e2660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4ac27e27f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4ac27e2980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4ac27e2b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4ac27e2ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4ac27e2e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4ac27e1020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4ac27e11b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4ac27e1340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4ac27e14d0"/>
        <function-ref name="setData" scoped="" ref="0x7f4ac27e1660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4ac27e17f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4ac27e1980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4ac27e1b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4ac27e1ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4ac27e1e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4ac27e0020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4ac27e05b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4ac27e0740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4ac27e08d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4ac27e0a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4ac27e0bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4ac27e0d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4ac27df020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4ac27df1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4ac27df340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4ac27df4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4ac27e7c10" loc="45:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ac27e7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ac27e6020"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ac27e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac27ed640" loc="41:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac27ed640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac27ed9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac27edb50"/>
        <function-ref name="request" scoped="" ref="0x7f4ac27edce0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac27ede70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac27ec030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4ac27eb2b0" loc="44:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ac27eb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ac27eb630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ac27eb7c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ac27eb950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ac27ebae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ac27ebc70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ac27ebe00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ac27ea020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ac27ea1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ac27ea340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ac27ea4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ac27ea660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ac27ea7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ac27ea980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ac27eac10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ac27eada0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ac27e9020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ac27e91b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ac27e9340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ac27e94d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ac27e9660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ac27e97f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ac27e9980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ac27e9b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ac27e9ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac27e9e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ac27e8220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ac27e83b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ac27e8540"/>
        <function-ref name="tx" scoped="" ref="0x7f4ac27e86d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ac27e8860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ac27e89f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ac27e8b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ac27e8d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ac27e7020"/>
        <function-ref name="rx" scoped="" ref="0x7f4ac27e71b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ac27e7340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ac27e74d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ac27e7660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ac27e77f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ac27e7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ac27eca60" loc="43:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ac27eca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ac27ecde0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ac27eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ac362d8a0" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ac362d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ac362dc20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ac362ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ac362a020" loc="45:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac362a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ac362a3a0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ac362a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ac3632a80" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ac3632a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ac3632e00"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ac362f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac362e5c0" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac362e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac362e940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac362ead0"/>
        <function-ref name="request" scoped="" ref="0x7f4ac362ec60"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac362edf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac362d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4ac362f9a0" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ac362f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac362fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ac362b130" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ac362b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ac362b4b0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ac362b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4ac36154b0" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ac36154b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ac3615830"/>
        <function-ref name="userId" scoped="" ref="0x7f4ac36159c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ac36285c0" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ac36285c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ac3628960"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ac3628af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f4ac3616e70" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f4ac3616e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac3615220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4ac3616020" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ac3616020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac36163c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f4ac3616690" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f4ac3616690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ac3616a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ac3616ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ac359cbf0" loc="92:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ac359cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ac359b020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ac359b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ac359a930" loc="96:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac359a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ac359acd0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ac359ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4ac359b400" loc="93:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ac359b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac359b780"/>
        <function-ref name="requested" scoped="" ref="0x7f4ac359b910"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac359baa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac359bc30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ac359bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac359de60" loc="91:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac359de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac359c230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac359c3c0"/>
        <function-ref name="request" scoped="" ref="0x7f4ac359c550"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac359c6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac359c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ac359a060" loc="94:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ac359a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ac359a3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ac359a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac2774140" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac2774140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac27744c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4ac2774750" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ac2774750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ac2774ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ac2774c60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ac2774df0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ac2773020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ac2771850" loc="55:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ac2771850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ac2771bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ac2771d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ac276c590" loc="60:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ac276c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ac276c930"/>
        <function-ref name="configure" scoped="" ref="0x7f4ac276cac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4ac276cd50" loc="61:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4ac276cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ac276b100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ac276b290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ac276b420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ac276b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4ac2770020" loc="56:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ac2770020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac27703a0"/>
        <function-ref name="requested" scoped="" ref="0x7f4ac2770530"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac27706c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac2770850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ac27709e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ac276b800" loc="62:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ac276b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ac276bb80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ac276bd10"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ac276a020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ac276a1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ac276a340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac276a4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ac276a660"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ac276aca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac276a980"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ac276a7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ac276ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac2772970" loc="54:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac2772970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac2772d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac2771020"/>
        <function-ref name="request" scoped="" ref="0x7f4ac27711b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac2771340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac27714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ac2770c30" loc="57:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ac2770c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ac276c020"/>
        <function-ref name="userId" scoped="" ref="0x7f4ac276c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f4ac2769020" loc="75:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f4ac2769020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac27693a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac2769530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f4ac3592880" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ac3592880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4ac3592c00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4ac3592d90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4ac358f020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4ac358f1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4ac358f340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4ac358f4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4ac358f660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4ac358f7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac358f980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4ac358fb10"/>
        <function-ref name="getData" scoped="" ref="0x7f4ac358fca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4ac358fe30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4ac358e020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4ac358e2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4ac358e440"/>
        <function-ref name="getIV" scoped="" ref="0x7f4ac358e5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4ac358e760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4ac358e8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4ac358ea80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4ac358ec10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4ac358eda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4ac358d020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4ac358d1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4ac358d340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4ac358d4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4ac358d860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4ac358d9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4ac358db80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4ac358dd10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4ac358c020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4ac358c1b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4ac358c340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4ac358c4d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4ac358c660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4ac358c7f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4ac358c980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4ac358cb10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4ac358cca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4ac358ce30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4ac358b020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4ac358b1b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4ac358b340"/>
        <function-ref name="setData" scoped="" ref="0x7f4ac358b4d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4ac358b660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4ac358b7f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4ac358b980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4ac358bb10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4ac358bca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4ac358be30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4ac358a420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4ac358a5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4ac358a740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4ac358a8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4ac358aa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4ac358abf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4ac358ad80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4ac3589020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4ac35891b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4ac3589340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f4ac357f250" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f4ac357f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ac357f5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ac357f760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ac357f8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ac357fa80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ac357fc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ac357fda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ac357e020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ac357e1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ac357e340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ac357e4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ac357e660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ac357e7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ac357e980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ac357ec10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ac357eda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ac357d020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ac357d1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ac357d340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ac357d4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ac357d660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ac357d7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ac357d980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ac357db10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ac357dca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac357de30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ac357c220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ac357c3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ac357c540"/>
        <function-ref name="tx" scoped="" ref="0x7f4ac357c6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ac357c860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ac357c9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ac357cb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ac357cd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ac357b020"/>
        <function-ref name="rx" scoped="" ref="0x7f4ac357b1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ac357b340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ac357b4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ac357b660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ac357b7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ac357b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f4ac3579cb0" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f4ac3579cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac35780a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3578230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac35783c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3578550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac35786e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac3578870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3578a00"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3578b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3578d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3577020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac35771b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3577340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac35774d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3577760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac35778f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f4ac3586430" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f4ac3586430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4ac35867b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4ac3586940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4ac3586ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4ac3586c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4ac3586df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4ac3585020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4ac35851b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4ac3585340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac35854d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4ac3585660"/>
        <function-ref name="getData" scoped="" ref="0x7f4ac35857f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4ac3585980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4ac3585b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4ac3585da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4ac3584020"/>
        <function-ref name="getIV" scoped="" ref="0x7f4ac35841b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4ac3584340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4ac35844d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4ac3584660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4ac35847f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4ac3584980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4ac3584b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4ac3584ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4ac3584e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4ac3583020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4ac35833b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4ac3583540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4ac35836d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4ac3583860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4ac35839f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4ac3583b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4ac3583d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4ac3582020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4ac35821b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4ac3582340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4ac35824d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4ac3582660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4ac35827f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4ac3582980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4ac3582b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4ac3582ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4ac3582e30"/>
        <function-ref name="setData" scoped="" ref="0x7f4ac3581020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4ac35811b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4ac3581340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4ac35814d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4ac3581660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4ac35817f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4ac3581980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4ac3580020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4ac35801b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4ac3580340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4ac35804d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4ac3580660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4ac35807f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4ac3580980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4ac3580b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4ac3580ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4ac3580e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f4ac357bd40" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f4ac357bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac357a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac357a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac357a400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac357a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac357a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac357a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac357aa40"/>
        <function-ref name="get" scoped="" ref="0x7f4ac357abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac357ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3579020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac35791b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac3579340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac35794d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac3579760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac35798f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ac3464c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ac3464c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3463210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ac346fda0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ac346fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac346e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ac3468b50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ac3468b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3467020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ac3462670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac3462670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34629f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3462b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ac345be50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ac345be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac345a210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac345a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ac3462e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ac3462e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3461210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ac344e2f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ac344e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac344e670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac344e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ac34512f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ac34512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3451670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3451800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ac346d120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ac346d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac346d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ac3456670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ac3456670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34569f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3456b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ac34522f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ac34522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3452670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3452800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ac3467c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ac3467c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3466020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ac3466c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac3466c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3464020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ac345c670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ac345c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac345c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac345cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ac345fe50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ac345fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac345d210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac345d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ac3461670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ac3461670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34619f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3461b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ac3470760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac3470760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ac3470ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ac3470c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ac3470e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ac346caa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ac346caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac346ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ac346a120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ac346a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac346a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ac3455a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ac3455a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3455df0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3454020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ac346a870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ac346a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac346abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ac3452ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ac3452ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3452e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3451020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ac346ddc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ac346ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac346c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ac3457e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ac3457e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3456210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ac3466480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ac3466480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3466800"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3466990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ac3467480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac3467480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3467800"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3467990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ac346f750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ac346f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac346fad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ac3459e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ac3459e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3457210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ac345a670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ac345a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac345a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac345ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ac3457670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ac3457670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34579f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3457b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ac344fad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ac344fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac344fe50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac344e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ac3451ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ac3451ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3451e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac344f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ac345d670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ac345d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac345d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac345db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ac345ae50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ac345ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3459210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ac3453ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ac3453ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3453e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3452020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ac3460670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ac3460670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34609f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3460b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ac344ead0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ac344ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac344ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac344d020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac344d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac344d340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac344d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ac346f100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ac346f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac346f480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ac3468370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ac3468370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34686f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3468880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ac3464480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ac3464480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3464800"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3464990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ac345ce50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ac345ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac345b210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac345b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ac3461e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ac3461e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3460210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ac345b670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ac345b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac345b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac345bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ac3463670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ac3463670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34639f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3463b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ac346e450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ac346e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac346e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ac3463e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac3463e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3462210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac3471a80" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac3471a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac3471e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac3470020"/>
        <function-ref name="request" scoped="" ref="0x7f4ac34701b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac3470340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac34704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ac3469020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ac3469020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac34693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ac3469cc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ac3469cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac34680a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ac34532f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ac34532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3453670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3453800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ac3454ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ac3454ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3454e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3453020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ac346c450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ac346c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac346c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ac34542f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ac34542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3454670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3454800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ac344f2f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ac344f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac344f670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac344f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ac345de50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ac345de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac345c210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac345c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ac3459670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ac3459670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34599f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3459b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ac346eaa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ac346eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac346ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ac346d770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ac346d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac346daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ac3460e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ac3460e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac345f210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac345f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ac3469670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ac3469670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac34699f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ac345f670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ac345f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac345f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac345fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ac3456e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ac3456e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3455610"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34557a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ac344d7a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ac344d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac344db20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac344dcb0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac344de40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac344c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac344c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ac3438c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ac3438c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3437210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ac3443da0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ac3443da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3441180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ac343bb50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ac343bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac343a020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac343a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ac3436670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac3436670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34369f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3436b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ac342ee50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ac342ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac342d210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac342d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ac3436e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ac3436e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3434210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ac34222f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ac34222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3422670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3422800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ac34242f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ac34242f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3424670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3424800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ac3440120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ac3440120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac34404a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ac342a670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ac342a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac342a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac342ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ac34252f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ac34252f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3425670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3425800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ac343ac60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ac343ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3439020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ac3439c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac3439c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3438020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ac3430670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ac3430670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34309f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3430b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ac3432e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ac3432e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3431210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ac3434670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ac3434670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34349f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3434b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ac3444760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac3444760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ac3444ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ac3444c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ac3444e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ac343faa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ac343faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac343fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ac343e120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ac343e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac343e5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ac3429a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ac3429a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3429df0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3428020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ac343e870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ac343e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac343ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ac3425ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ac3425ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3425e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3424020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ac3440dc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ac3440dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac343f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ac342be50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ac342be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac342a210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac342a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ac3439480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ac3439480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3439800"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3439990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ac343a480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac343a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac343a800"/>
        <function-ref name="write" scoped="" ref="0x7f4ac343a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ac3443750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ac3443750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3443ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ac342ce50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ac342ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac342b210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac342b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ac342d670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ac342d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac342d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac342db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ac342b670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ac342b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac342b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac342bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ac3423ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ac3423ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3423e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3422020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ac3424ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ac3424ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3424e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3423020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ac3431670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ac3431670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34319f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3431b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ac342de50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ac342de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac342c210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac342c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ac3426ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ac3426ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3426e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3425020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ac3433670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ac3433670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34339f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3433b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ac3422ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ac3422ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac3422e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac3420020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34201b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac3420340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac34204d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ac3443100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ac3443100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3443480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ac343b370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ac343b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac343b6f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac343b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ac3438480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ac3438480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3438800"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3438990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ac3430e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ac3430e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac342e210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac342e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ac3434e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ac3434e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3433210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ac342e670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ac342e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac342e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac342eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ac3437670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ac3437670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34379f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3437b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ac3441450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ac3441450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac34417d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ac3437e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac3437e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3436210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac34459e0" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac34459e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac3445d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac3444020"/>
        <function-ref name="request" scoped="" ref="0x7f4ac34441b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac3444340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac34444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ac343d020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ac343d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac343d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ac343dcc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ac343dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac343b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ac34262f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ac34262f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3426670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3426800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ac3428ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ac3428ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3428e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3426020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ac343f450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ac343f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac343f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ac34282f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ac34282f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3428670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3428800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ac34232f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ac34232f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3423670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3423800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ac3431e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ac3431e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3430210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34303a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ac342c670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ac342c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac342c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac342cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ac3441aa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ac3441aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3441e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ac3440770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ac3440770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3440af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ac3433e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ac3433e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3432210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ac343d670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ac343d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac343d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ac3432670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ac3432670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac34329f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3432b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ac342ae50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ac342ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3429610"/>
        <function-ref name="write" scoped="" ref="0x7f4ac34297a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ac34207a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ac34207a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac3420b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac3420cb0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3420e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac341f020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac341f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f4ac3418b30" loc="54:../../../..//tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ac3418b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4ac3415020"/>
        <function-ref name="changed" scoped="" ref="0x7f4ac34151b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4ac3415340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4ac34154d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f4ac3417d30" loc="13:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ac3417d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f4ac34000e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f4ac33fc310" loc="5:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ac33fc310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f4ac33fc690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f4ac33f9880" loc="8:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f4ac33f9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac33f9c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f4ac33ee020" loc="8:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f4ac33ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac33ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f4ac33e4bd0" loc="14:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f4ac33e4bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac33e8020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac33e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f4ac33e8530" loc="15:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f4ac33e8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ac33e88b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac33e8a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f4ac33e9140" loc="11:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f4ac33e9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac33e94c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f4ac33edc50" loc="8:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f4ac33edc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac33d4020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac33d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f4ac33d4540" loc="11:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f4ac33d4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac33d48c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac33d4a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac33d4be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac33d4d70"/>
        <function-ref name="get" scoped="" ref="0x7f4ac33d3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac33d31b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac33d3340"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac33d34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f4ac33cb950" loc="15:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f4ac33cb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ac41bf200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4ac33ce780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f4ac33d0150" loc="11:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f4ac33d0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac33d04d0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac33d0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f4ac33d09f0" loc="14:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f4ac33d09f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac33d0d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac33cf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac33cf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac33cf340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac33cf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac33cf660"/>
        <function-ref name="set" scoped="" ref="0x7f4ac33cf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac33cf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f4ac33d2ca0" loc="41:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f4ac33d2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ac41bf200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4ac33aaae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f4ac33a8a90" loc="54:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f4ac33a8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ac41bf200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4ac33a78d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ac3398020" loc="55:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ac3398020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ac41bf200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac3398e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac3396800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac3396340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac3396cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f4ac3392530" loc="46:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f4ac3392530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ac41bf200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac33913d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac3391d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac3391890"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac3390260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4ac338b020" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac338b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac338b3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac338b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac338b6c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac338b850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac338b9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac338bb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac338bd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac338a020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac338a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac338a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac338a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ac338ee50" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ac338ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ac41bf200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac338dca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac338c670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac338c1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac338cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f4ac33d5590" loc="3:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f4ac33d5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac33d5910"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac33d5aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac33d5c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac33d5dc0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3385020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac33851b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3385340"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac33854d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ac3383c50" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac3383c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3382020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac33821b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac3382340"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac33824d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3382660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac33827f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3382980"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3382b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac3382ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac3382e30"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3381020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac33811b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac3381340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac33815d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3381760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ac33849e0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac33849e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3384d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3383020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac33831b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3383340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac33834d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac3383660"/>
        <function-ref name="set" scoped="" ref="0x7f4ac33837f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3383980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ac3386a20" loc="14:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ac3386a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ac3386da0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac337c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ac336dcb0" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac336dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ac336c0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ac336c230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ac336c3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ac336c550"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ac336c6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ac336c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f4ac3369990" loc="47:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4ac3369990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ac3369d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f4ac336d020" loc="45:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ac336d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac336d3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac336d530"/>
        <function-ref name="modify" scoped="" ref="0x7f4ac336d6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac336d850"/>
        <function-ref name="resend" scoped="" ref="0x7f4ac336d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ac33706c0" loc="44:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ac33706c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ac3370a40"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3370bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f4ac336b150" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f4ac336b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ac336b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ac335f970" loc="51:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac335f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ac335fcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ac335fe80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ac335e030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ac335e1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ac335e350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ac335e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f4ac3357950" loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4ac3357950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ac3355020"/>
        <function-ref name="clear" scoped="" ref="0x7f4ac3355750"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ac3356780"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3355e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f4ac333e020" loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac333e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac333e3a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac333e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f4ac333e890" loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ac333e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac333ec10"/>
        <function-ref name="write" scoped="" ref="0x7f4ac333eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f4ac335e900" loc="52:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4ac335e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ac335ec80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f4ac3341530" loc="72:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ac3341530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac33418b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f4ac3352880" loc="60:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ac3352880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4ac3352c00"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac3352d90"/>
        <function-ref name="captured" scoped="" ref="0x7f4ac3351020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4ac33511b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f4ac335dae0" loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f4ac335dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac3359390"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac335b360"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac335bce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac335b820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac3359850"/>
        <function-ref name="start" scoped="" ref="0x7f4ac335c970"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac335ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ac3359d00" loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac3359d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ac33580a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ac3358230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ac33583c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ac3358550"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ac33586e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ac3358870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f4ac3343550" loc="68:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ac3343550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac33438d0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3343a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f4ac3343e00" loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac3343e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac33421c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3342350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f4ac3336d40" loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ac3336d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac333a0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f4ac333a270"/>
        <function-ref name="sfd" scoped="" ref="0x7f4ac333a400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ac3360bc0" loc="50:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ac3360bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac335f020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac335f1b0"/>
        <function-ref name="modify" scoped="" ref="0x7f4ac335f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac335f4d0"/>
        <function-ref name="resend" scoped="" ref="0x7f4ac335f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f4ac3345d10" loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac3345d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ac33440e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ac3344270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ac3344400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f4ac3341c60" loc="73:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ac3341c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3340020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f4ac3349820" loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4ac3349820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3349ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3349d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3347020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac33471b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3347340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac33474d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3347660"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac33477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac3362c60" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac3362c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac3360020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ac3358bb0" loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac3358bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3357020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ac33571b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ac3357340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f4ac334abe0" loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ac334abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac3352020"/>
        <function-ref name="isSet" scoped="" ref="0x7f4ac33521b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac3352340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac33524d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f4ac33403e0" loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac33403e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3340960"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3340af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4ac3345020" loc="65:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4ac3345020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac33453a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac3345530"/>
        <function-ref name="request" scoped="" ref="0x7f4ac33456c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac3345850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac33459e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f4ac3351500" loc="61:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f4ac3351500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3351980"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac3351b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3351ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac3351e30"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3349020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac33491b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3349340"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac33494d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f4ac333d130" loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ac333d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac333d4b0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac333d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f4ac333d9c0" loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ac333d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac333dd40"/>
        <function-ref name="write" scoped="" ref="0x7f4ac333b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f4ac33426d0" loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ac33426d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3342a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f4ac3347b40" loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f4ac3347b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac3346020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac33461b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac3346340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac33464d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3346660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac33467f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3346980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac3346b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ac333a6c0" loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ac333a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ac333aa40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ac333abd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ac333ad60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ac3339020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ac33391b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac3339340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ac33394d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ac3339b10"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3339660"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ac33397f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ac3339980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f4ac333f5e0" loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac333f5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac333f960"/>
        <function-ref name="write" scoped="" ref="0x7f4ac333faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ac3360320" loc="49:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ac3360320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ac33606a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3360830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f4ac3344780" loc="67:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ac3344780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac3344b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac3344c90"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3344e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac3343020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac33431b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f4ac3342de0" loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ac3342de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3341180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f4ac3340e80" loc="76:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ac3340e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac333f220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f4ac335d0f0" loc="53:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f4ac335d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ac335d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ac329cc60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ac329cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac329b210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac329b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ac32a6020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ac32a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ac329fc70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ac329fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac329e020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac329e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ac329a670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac329a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac329a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac329ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ac3292e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ac3292e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3291210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac32913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ac329ae50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ac329ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3298210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac32983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ac32862f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ac32862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3286670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3286800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ac32882f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ac32882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3288670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3288800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ac32a4370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ac32a4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a46f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ac328e670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ac328e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac328e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac328eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ac32892f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ac32892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3289670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3289800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ac329ec60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ac329ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac329d020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac329d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ac329dc60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac329dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac329c020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac329c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ac3294670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ac3294670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac32949f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3294b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ac3296e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ac3296e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3295210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac32953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ac3298670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ac3298670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac32989f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3298b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ac32a88f0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac32a88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ac32a8c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ac32a8e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ac32a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ac32a3d00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ac32a3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ac32a2370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ac32a2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ac328da70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ac328da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac328ddf0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac328c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ac32a2ac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ac32a2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ac3289ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ac3289ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3289e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3288020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ac32a3060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ac32a3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a33e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ac328fe50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ac328fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac328e210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac328e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ac329d480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ac329d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac329d800"/>
        <function-ref name="write" scoped="" ref="0x7f4ac329d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ac329e480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac329e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac329e800"/>
        <function-ref name="write" scoped="" ref="0x7f4ac329e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ac32a7940" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ac32a7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ac3290e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ac3290e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac328f210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac328f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ac3291670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ac3291670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac32919f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3291b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ac328f670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ac328f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac328f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac328fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ac3287ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ac3287ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3287e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3286020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ac3288ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ac3288ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3288e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3287020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ac3295670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ac3295670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac32959f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3295b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ac3291e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ac3291e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3290210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac32903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ac328aad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ac328aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac328ae50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3289020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ac3297670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ac3297670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac32979f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3297b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ac3286ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ac3286ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac3286e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac3284020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac32841b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac3284340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac32844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ac32a72f0" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ac32a72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ac329f490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ac329f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac329f810"/>
        <function-ref name="write" scoped="" ref="0x7f4ac329f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ac329c480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ac329c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac329c800"/>
        <function-ref name="write" scoped="" ref="0x7f4ac329c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ac3294e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ac3294e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3292210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac32923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ac3298e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ac3298e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3297210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac32973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ac3292670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ac3292670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac32929f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3292b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ac329b670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ac329b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac329b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac329bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ac32a6670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ac32a6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a69f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ac329be50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac329be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac329a210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac329a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac32a9c30" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac32a9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac32a8020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac32a81b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ac32a8340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac32a84d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac32a8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ac32a1160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ac32a1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ac32a1e00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ac32a1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac329f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ac328a2f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ac328a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac328a670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac328a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ac328cad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ac328cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac328ce50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac328a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ac32a36b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ac32a36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a3a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ac328c2f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ac328c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac328c670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac328c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ac32872f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ac32872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3287670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3287800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ac3295e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ac3295e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3294210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac32943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ac3290670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ac3290670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac32909f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3290b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ac32a6cc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ac32a6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ac32a49c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ac32a49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ac3297e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ac3297e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3296210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac32963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ac32a17b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ac32a17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac32a1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ac3296670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ac3296670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac32969f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3296b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ac328ee50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ac328ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac328d610"/>
        <function-ref name="write" scoped="" ref="0x7f4ac328d7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ac32847a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ac32847a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac3284b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac3284cb0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3284e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac3283020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac32831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f4ac3278df0" loc="42:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ac3278df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac32751c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f4ac3275350"/>
        <function-ref name="sfd" scoped="" ref="0x7f4ac32754e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ac32757c0" loc="43:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ac32757c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac3275b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f4ac3274020" loc="44:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f4ac3274020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ac32743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ac32785c0" loc="41:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ac32785c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ac3278940"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3278ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f4ac326d380" loc="54:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f4ac326d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac326d700"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac326d890"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac326da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac326dbb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac326dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac326c020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac326c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac326c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f4ac3266b90" loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4ac3266b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4ac3264020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4ac32641b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4ac3264340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4ac32644d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4ac3264660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ac32647f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4ac3264980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4ac3264b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4ac3264ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4ac3264e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ac3263020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ac32631b0"/>
        <function-ref name="sync" scoped="" ref="0x7f4ac3263340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4ac32635d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4ac3263760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f4ac324e9d0" loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f4ac324e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac324ed50"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac324d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f4ac3263d70" loc="65:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4ac3263d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ac3261330"/>
        <function-ref name="clear" scoped="" ref="0x7f4ac3261a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ac3262ba0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3260210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f4ac326c6b0" loc="55:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f4ac326c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac326ca30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac326cbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac326cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac326b020"/>
        <function-ref name="get" scoped="" ref="0x7f4ac326b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac326b340"/>
        <function-ref name="set" scoped="" ref="0x7f4ac326b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac326b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f4ac325ecb0" loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac325ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac325d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac325d230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f4ac325d590" loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ac325d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac325d910"/>
        <function-ref name="write" scoped="" ref="0x7f4ac325daa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f4ac325c6d0" loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ac325c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac325ca50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac325cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ac3267330" loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac3267330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ac32676b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ac3267840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ac32679d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ac3267b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ac3267cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ac3267e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f4ac3270550" loc="49:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ac3270550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac32708d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f4ac3270a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f4ac3270bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f4ac32683a0" loc="60:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ac32683a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3268720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f4ac326e020" loc="53:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4ac326e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac326e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac326e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac326e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac326e850"/>
        <function-ref name="get" scoped="" ref="0x7f4ac326e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac326eb70"/>
        <function-ref name="set" scoped="" ref="0x7f4ac326ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac326d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f4ac325b020" loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ac325b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac325b3a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac325b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac3271620" loc="47:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac3271620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac32719a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ac32661e0" loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac32661e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3266560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ac32666f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ac3266880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ac326f020" loc="50:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ac326f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac326f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4ac326a6e0" loc="58:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4ac326a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac326aa60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac326abf0"/>
        <function-ref name="request" scoped="" ref="0x7f4ac326ad80"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac3269020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac32691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f4ac325de00" loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ac325de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac325c1c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac325c350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f4ac3269530" loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ac3269530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac32698b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac3269a40"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3269bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac3269d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac3268020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f4ac325b8b0" loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ac325b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac325be30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f4ac326f7c0" loc="51:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f4ac326f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ac326fb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ac325a150" loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ac325a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ac325a4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ac325a660"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ac325a7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ac325a980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ac325ab10"/>
        <function-ref name="get" scoped="" ref="0x7f4ac325aca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ac325ae30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ac32594d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac3259020"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ac32591b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ac3259340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f4ac325e3e0" loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac325e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac325e760"/>
        <function-ref name="write" scoped="" ref="0x7f4ac325e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f4ac3260b10" loc="67:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ac3260b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac325e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f4ac326ba50" loc="56:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ac326ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ac326bdd0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ac326a020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ac326a1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ac326a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f4ac3268ad0" loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ac3268ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3267020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ac3271ca0" loc="48:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ac3271ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ac32700a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3270230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4ac31eea70" loc="44:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ac31eea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4ac31eedf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4ac31f2670" loc="41:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac31f2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ac31f29f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ac31f2b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ac31f2d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ac31ef020"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ac31ef1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ac31ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f4ac31ed550" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ac31ed550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ac31ebb00"/>
        <function-ref name="clear" scoped="" ref="0x7f4ac31ea2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ac31eb3d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac31ea9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f4ac31ee0c0" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac31ee0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac31ee440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ac31ee5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ac31ee760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f4ac31e5480" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ac31e5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac31e5800"/>
        <function-ref name="isSet" scoped="" ref="0x7f4ac31e5990"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac31e5b20"/>
        <function-ref name="set" scoped="" ref="0x7f4ac31e5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4ac31e9660" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ac31e9660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ac31e7ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f4ac31e6460"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ac31e75b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac31e6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4ac31ef6e0" loc="42:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4ac31ef6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ac31efa60"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ac31efbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ac31efd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4ac31de020" loc="49:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ac31de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4ac31de3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4ac31e4d20" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac31e4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ac31e00e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ac31e0270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ac31e0400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ac31e0590"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ac31e0720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ac31e08b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4ac31d54a0" loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ac31d54a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac31d5820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ac31d59b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac31d5b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac31d5cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ac31d5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f4ac31dea80" loc="51:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ac31dea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ac31dc020"/>
        <function-ref name="clear" scoped="" ref="0x7f4ac31dc750"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ac31dd8d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac31dce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f4ac31df640" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac31df640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac31df9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ac31dfb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ac31dfce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f4ac31d78b0" loc="53:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ac31d78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac31d7c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f4ac31d7dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac31d5020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac31d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f4ac31d1820" loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f4ac31d1820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac31d34c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f4ac31d3b80" loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f4ac31d3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac31d27d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4ac31dbaf0" loc="52:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ac31dbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ac31d80d0"/>
        <function-ref name="clear" scoped="" ref="0x7f4ac31d8800"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ac31d9970"/>
        <function-ref name="set" scoped="" ref="0x7f4ac31d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4ac31e0c50" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4ac31e0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ac31df020"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ac31df1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ac31df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4ac31804e0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f4ac31804e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac3177150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ac31777c0" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ac31777c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac3176620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac3175020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac3176ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac31754e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f4ac316f020" loc="46:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f4ac316f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac316c630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac316ea60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ac316d920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ac316d4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ac316b020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ac316cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac316d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ac316fc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ac316c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ac316e110"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac316e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4ac316b610" loc="47:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f4ac316b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac31693d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac3171130" loc="45:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac3171130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac31714b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ac313c870" loc="44:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ac313c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac3138090"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac3139090"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac3139a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac3139550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac3138550"/>
        <function-ref name="start" scoped="" ref="0x7f4ac313b6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac313bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac313c020" loc="43:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac313c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac313c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ac2666260" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ac2666260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac2664b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac2665a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac26644e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac2664020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac2663020"/>
        <function-ref name="start" scoped="" ref="0x7f4ac2665090"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac26655a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac26679d0" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac26679d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac2667d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f4ac264ea80" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac264ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac264ee00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac264d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac264d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac264d340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac264d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f4ac2650020" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac2650020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac26503a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac2650530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac26506c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac2650850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac26509e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac2650b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac2650d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac264f020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac264f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac264f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac264f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4ac264f760" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac264f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac264fae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac264fc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac264fe00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac264e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac264e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac264e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac264e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac264e660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac264e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f4ac2621760" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ac2621760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ac2621ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ac2621c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ac2621e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ac2620020"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac26201b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4ac2624dd0" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ac2624dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac2623180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ac2623310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac26234a0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac2623630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac26237c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac2623950"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ac2623ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac2623c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac2623e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ac2622020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ac26221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ac264bbf0" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ac264bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac26244e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac26254e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac2625e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac26259a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac26249a0"/>
        <function-ref name="start" scoped="" ref="0x7f4ac264aa80"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac2625020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac264b360" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac264b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac264b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4ac2622440" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ac2622440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ac26227c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ac2622950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ac2622ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ac2622c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ac2622e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ac2621020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ac26211b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ac2621340"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ac26214d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ac315bb70" loc="43:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ac315bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac31589b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac3157360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac3158e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac3157820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f4ac3150b90" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f4ac3150b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac314f9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac314e4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac314e020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac314e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ac3153610" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ac3153610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac31515b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac3150020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac3151a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac31504e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ac26605f0" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ac26605f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac265ee50"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac265fe00"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac265e800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac265e340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac265d340"/>
        <function-ref name="start" scoped="" ref="0x7f4ac265f430"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac265f940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f4ac265bd20" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f4ac265bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac41c0640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ac41c09b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac2657670"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac2658550"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac2657020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac2658a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac2657b30"/>
        <function-ref name="start" scoped="" ref="0x7f4ac2659b60"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac2658090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ac265d9b0" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ac265d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac265c7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac265b1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac265cca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac265b670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f4ac31079c0" loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f4ac31079c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac3107d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac3105020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f4ac310a850" loc="49:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ac310a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac3107090"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac3108090"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ac3108a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac3108550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ac3107550"/>
        <function-ref name="start" scoped="" ref="0x7f4ac31096a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3109bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ac310f2f0" loc="48:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac310f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac310c870"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac310ee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ac310dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ac310d780"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ac310a1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ac310ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac310d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ac310e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ac310c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ac310e4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac310e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f4ac30b5a00" loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f4ac30b5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac30b5d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac30b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f4ac30ba640" loc="49:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f4ac30ba640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac30b6c40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac30b81e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ac30b6020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ac30b8ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ac30b5590"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ac30b5110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac30b8660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ac30b9390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ac30b6630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ac30b9860"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac30b9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ac30c0150" loc="48:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac30c0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac30bc700"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac30bfc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ac30bda50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ac30bd5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ac30ba090"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ac30bcba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac30bd110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ac30c0d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ac30bc0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ac30bf2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac30bf790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4ac30b22b0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f4ac30b22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac30b1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ac30b1690" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ac30b1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ac30af5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ac30ae020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ac30afa70"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ac30ae4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ac30a88c0" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac30a88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac3094cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac3095320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ac30940d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ac3095c20"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ac3093660"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ac30931e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac30957a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ac30964e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ac30946e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ac30969b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac3096e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f4ac309f2c0" loc="49:../../../..//tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f4ac309f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac309b870"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac309de40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ac309cc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ac309c780"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ac309a1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ac309bcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac309c300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ac309d020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ac309b260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ac309d4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac309d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ac3082c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ac3082c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3081210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac30813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ac308c020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ac308c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac308c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ac3086c70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ac3086c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3085020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac30851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ac3080670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ac3080670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac30809f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3080b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ac3079e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ac3079e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3078210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac30783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ac3080e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ac3080e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac307f210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac307f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ac306c2f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ac306c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac306c670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac306c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ac306e2f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ac306e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac306e670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac306e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ac308b370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ac308b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac308b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ac3074670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ac3074670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac30749f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3074b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ac30702f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ac30702f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3070670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3070800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ac3085c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ac3085c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3084020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac30841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ac3084c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ac3084c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3082020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac30821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ac307a670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ac307a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac307a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac307ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ac307ce50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ac307ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac307b210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac307b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ac307f670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ac307f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac307f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac307fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ac308e970" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ac308e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ac308ecf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ac308ee80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ac308d030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ac308ad00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ac308ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac30880a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ac3088370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ac3088370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac30887f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ac3073a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ac3073a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3073df0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3072020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ac3088ac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ac3088ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3088e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ac3070ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ac3070ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3070e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac306e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ac308a060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ac308a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac308a3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ac3075e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ac3075e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3074210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac30743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ac3084480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ac3084480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3084800"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3084990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ac3085480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ac3085480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3085800"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3085990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ac308d950" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ac308d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac308dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ac3077e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ac3077e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3075210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac30753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ac3078670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ac3078670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac30789f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3078b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ac3075670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ac3075670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac30759f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3075b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ac306dad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ac306dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac306de50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac306c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ac306ead0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ac306ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac306ee50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac306d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ac307b670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ac307b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac307b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac307bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ac3078e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ac3078e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3077210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac30773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ac3071ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ac3071ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3071e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3070020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ac307e670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ac307e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac307e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac307eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ac306cad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ac306cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac306ce50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac306b020"/>
        <function-ref name="write" scoped="" ref="0x7f4ac306b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac306b340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac306b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ac308d300" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ac308d300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac308d680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ac3086490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ac3086490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3086810"/>
        <function-ref name="write" scoped="" ref="0x7f4ac30869a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ac3082480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ac3082480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3082800"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3082990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ac307ae50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ac307ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3079210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac30793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ac307fe50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ac307fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac307e210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac307e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ac3079670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ac3079670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac30799f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3079b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ac3081670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ac3081670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac30819f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3081b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ac308c670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ac308c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac308c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ac3081e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ac3081e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3080210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac30803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac308fd00" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac308fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac308e0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac308e230"/>
        <function-ref name="request" scoped="" ref="0x7f4ac308e3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac308e550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac308e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ac3087160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ac3087160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac30874e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ac3087e00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ac3087e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac30861c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ac30712f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ac30712f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3071670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3071800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ac3072ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ac3072ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3072e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3071020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ac308a6b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ac308a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac308aa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ac30722f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ac30722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3072670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3072800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ac306d2f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ac306d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac306d670"/>
        <function-ref name="write" scoped="" ref="0x7f4ac306d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ac307be50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ac307be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac307a210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac307a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ac3077670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ac3077670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac30779f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac3077b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ac308ccc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ac308ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac308b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ac308b9c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ac308b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac308bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ac307ee50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ac307ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac307c210"/>
        <function-ref name="write" scoped="" ref="0x7f4ac307c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ac30877b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ac30877b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ac3087b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ac307c670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ac307c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac307c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac307cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ac3074e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ac3074e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ac3073610"/>
        <function-ref name="write" scoped="" ref="0x7f4ac30737a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ac306b7a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ac306b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ac306bb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ac306bcb0"/>
        <function-ref name="write" scoped="" ref="0x7f4ac306be40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ac306a020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ac306a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f4ac3041a20" loc="46:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ac3041a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ac3041da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ac3040020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f4ac303f920" loc="45:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f4ac303f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac3041560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac30459a0" loc="44:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac30459a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac3045d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f4ac303ba20" loc="48:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ac303ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ac303bda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ac3039020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f4ac303c940" loc="47:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f4ac303c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac303b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac303c080" loc="46:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac303c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac303c400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ac3043aa0" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ac3043aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ac3043e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ac303d020"/>
        <function-ref name="isState" scoped="" ref="0x7f4ac303d1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ac303d340"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ac303d4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ac303d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ac3023020" loc="44:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ac3023020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac30233a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3023530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac30236c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac3023850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac30239e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ac3024220" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ac3024220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac30245a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac3024730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac30248c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac3024a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac3024be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ac301be60" loc="45:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ac301be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac301a210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac301a3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac301a530"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac301a6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac301a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ac301ea20" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ac301ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac301eda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac301b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac301b1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac301b340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac301b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f4ac30198f0" loc="47:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ac30198f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ac3019c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ac3019e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac301b750" loc="41:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac301b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac301bad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ac3018170" loc="48:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac3018170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac30184f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ac3018680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ac3018810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f4ac301aae0" loc="46:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ac301aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ac301ae60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ac3019020"/>
        <function-ref name="isState" scoped="" ref="0x7f4ac30191b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ac3019340"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ac30194d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ac3019660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ac301c690" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ac301c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ac301ca10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ac301cba0"/>
        <function-ref name="isState" scoped="" ref="0x7f4ac301cd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ac3007020"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ac30071b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ac3007340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ac3000950" loc="47:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ac3000950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac3000cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ac3004aa0" loc="42:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ac3004aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac3004e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f4ac3000200" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4ac3000200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac3000580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ac2ffa3f0" loc="49:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ac2ffa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2ffa770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac2ffbb70" loc="45:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac2ffbb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac2ffa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ac2fffe30" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ac2fffe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2ffb1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ac2ffaa70" loc="50:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac2ffaa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2ffadf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ac2ff9020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ac2ff91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f4ac2ffb570" loc="44:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4ac2ffb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2ffb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ac2fcc020" loc="75:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ac2fcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2fcc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ac2fcc6b0" loc="76:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ac2fcc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2fcca30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2fccbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2fccd50"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2fcb020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac2fcb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ac2fd08e0" loc="65:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ac2fd08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2fd0c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2fd0df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2fcf020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2fcf1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac2fcf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f4ac2fcfc90" loc="68:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f4ac2fcfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2fce0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2fce230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2fce3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2fce550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac2fce6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ac2fcf5e0" loc="66:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ac2fcf5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2fcf960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac2fd1be0" loc="64:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac2fd1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac2fd0020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac2fd01b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ac2fd0340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac2fd04d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac2fd0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f4ac2fcea50" loc="69:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ac2fcea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2fcedd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4ac2fcd170" loc="71:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4ac2fcd170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac2fcd4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ac2fcd680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2fcd810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2fcd9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ac2fcdb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ac2fc2d70" loc="58:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ac2fc2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2fc1180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2fc1310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2fc14a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2fc1630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac2fc17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ac2fc1b10" loc="59:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ac2fc1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2fc0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f4ac2f93db0" loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f4ac2f93db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ac2f91180"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ac2f91310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ac2fc02f0" loc="60:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac2fc02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ac2fc0670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ac2fc0800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ac2fc0990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ac2fc0b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ac2fc0cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ac2fc0e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f4ac2fc4a20" loc="51:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f4ac2fc4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2fc4da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2fc3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2fc31b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2fc3340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac2fc34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4ac2fbfb70" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4ac2fbfb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ac2fbe020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ac2fbe1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ac2fbe340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ac2fbe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ac2fbf170" loc="61:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac2fbf170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2fbf4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ac2fbf680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ac2fbf810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f4ac2fc4370" loc="49:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f4ac2fc4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2fc46f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ac2fc67b0" loc="46:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ac2fc67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac2fc6b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac2fc6cc0"/>
        <function-ref name="request" scoped="" ref="0x7f4ac2fc6e50"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac2fc5020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac2fc51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f4ac2fc54d0" loc="48:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f4ac2fc54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2fc5850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2fc59e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2fc5b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2fc5d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac2fc4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f4ac2fc3840" loc="52:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ac2fc3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2fc3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4ac2fc2020" loc="54:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4ac2fc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac2fc23a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ac2fc2530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2fc26c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2fc2850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ac2fc29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ac2f73dd0" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ac2f73dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ac2f71180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4ac2f71410" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ac2f71410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ac2f71790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ac2f71920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ac2f71ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ac2f71c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ac2f66b80" loc="46:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ac2f66b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ac2f65020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ac2f651b0"/>
        <function-ref name="start" scoped="" ref="0x7f4ac2f65340"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac2f654d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ac2f64860" loc="51:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ac2f64860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2f64be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2f64d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2f63020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2f631b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac2f63340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ac2f63690" loc="52:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ac2f63690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2f63a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ac2f6ace0" loc="43:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ac2f6ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2f670a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2f67230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2f673c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2f67550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac2f676e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ac2f66080" loc="45:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ac2f66080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ac2f66400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ac2f66590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ac2f66720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ac2f668b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f4ac2f65800" loc="47:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f4ac2f65800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ac2f65b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ac2f65d10"/>
        <function-ref name="isState" scoped="" ref="0x7f4ac2f64020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ac2f641b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ac2f64340"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ac2f644d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f4ac2f63d90" loc="53:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f4ac2f63d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ac2f62180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ac2f62310"/>
        <function-ref name="start" scoped="" ref="0x7f4ac2f624a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac2f62630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ac2f67980" loc="44:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ac2f67980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2f67d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ac2f5f2d0" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ac2f5f2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ac2f5f650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ac2f5f7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ac2f5f970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ac2f5fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ac2f61580" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ac2f61580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ac2f61900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ac2f61a90"/>
        <function-ref name="isState" scoped="" ref="0x7f4ac2f61c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ac2f61db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ac2f60020"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ac2f601b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ac2f51d70" loc="45:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ac2f51d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2f50180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2f50310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2f504a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2f50630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac2f507c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ac2f55350" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ac2f55350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2f556d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2f55860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2f559f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2f55b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac2f55d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4ac2f51020" loc="41:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4ac2f51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4ac2f513a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4ac2f51530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4ac2f516c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4ac2f51850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4ac2f519e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f4ac2f4c1c0" loc="44:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ac2f4c1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ac2f4c540"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ac2f4c6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ac2f4c860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4ac2f4f410" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4ac2f4f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4ac2f4f790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4ac2f4f920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4ac2f4fab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4ac2f4fc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4ac2f4fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ac2f2d690" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ac2f2d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2f2da10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ac2f2e860" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ac2f2e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2f2ebe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2f2ed70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2f2d020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2f2d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac2f2d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f4ac2f2a610" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4ac2f2a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4ac2f2a990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4ac2f2ab20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4ac2f2acb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4ac2f2ae40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4ac2f29020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ac2f291b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4ac2f29340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4ac2f294d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4ac2f29660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4ac2f297f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ac2f29980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ac2f29b10"/>
        <function-ref name="sync" scoped="" ref="0x7f4ac2f29ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4ac2f28020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4ac2f281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ac2f2f8b0" loc="54:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ac2f2f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ac2f2fc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ac2f2fdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ac2f2e020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ac2f2e1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ac2f2e340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ac2f2e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f4ac2f30ce0" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f4ac2f30ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f4ac2f2f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f4ac2f271f0" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f4ac2f271f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ac2f27570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ac2f27700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ac2f27890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ac2f27a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ac2f27bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ac2f27d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ac2f31a80" loc="52:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ac2f31a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac2f31e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ac2f30020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2f301b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2f30340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ac2f304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ac2f35020" loc="48:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ac2f35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ac2f353a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2f35530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2f356c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ac2f35850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ac2f359e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4ac2f33df0" loc="50:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f4ac2f33df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2f321c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ac2f2dce0" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ac2f2dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ac2f2c0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ac2f2c230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ac2f2c3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ac2f2c550"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ac2f2c6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ac2f2c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f4ac2f284d0" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ac2f284d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4ac2f28950"/>
        <function-ref name="changed" scoped="" ref="0x7f4ac2f28ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4ac2f28c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4ac2f28e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ac2f2cb70" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ac2f2cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2f2a020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ac2f2a1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ac2f2a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ac2f33210" loc="49:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ac2f33210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2f33590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ac2f26d30" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ac2f26d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ac2f250e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ac2f25270"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ac2f25400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ac2f25590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ac2f25720"/>
        <function-ref name="get" scoped="" ref="0x7f4ac2f258b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ac2f25a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ac2f241b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac2f25bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ac2f25d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ac2f24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ac2f32470" loc="51:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ac2f32470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ac2f327f0"/>
        <function-ref name="source" scoped="" ref="0x7f4ac2f32980"/>
        <function-ref name="address" scoped="" ref="0x7f4ac2f32b10"/>
        <function-ref name="destination" scoped="" ref="0x7f4ac2f32ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ac2f32e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ac2f31020"/>
        <function-ref name="type" scoped="" ref="0x7f4ac2f311b0"/>
        <function-ref name="setType" scoped="" ref="0x7f4ac2f31340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ac2f314d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ac2f31660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ac2f317f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f4ac2f260f0" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f4ac2f260f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ac2f26470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ac2f26600"/>
        <function-ref name="request" scoped="" ref="0x7f4ac2f26790"/>
        <function-ref name="granted" scoped="" ref="0x7f4ac2f26920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ac2f26ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ac2e80020" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="ReceivingBuffer_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ac2e80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac2e803a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ac2e80530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2e806c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2e80850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ac2e809e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ac2e86910" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="ReceivingBuffer_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ac2e86910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2e86c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ac2e80c30" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="ReceivingBuffer_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ac2e80c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ac2e7e020"/>
        <function-ref name="source" scoped="" ref="0x7f4ac2e7e1b0"/>
        <function-ref name="address" scoped="" ref="0x7f4ac2e7e340"/>
        <function-ref name="destination" scoped="" ref="0x7f4ac2e7e4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ac2e7e660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ac2e7e7f0"/>
        <function-ref name="type" scoped="" ref="0x7f4ac2e7e980"/>
        <function-ref name="setType" scoped="" ref="0x7f4ac2e7eb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ac2e7eca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ac2e7ee30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ac2e7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ac2e7b780" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="ReceivingBuffer_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ac2e7b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ac2e7bb00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ac2e7bc90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ac2e7be20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ac2e7a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ac2e7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ac2e7b1b0" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="ReceivingBuffer_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ac2e7b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ac2e7b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ac2e7a400" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="ReceivingBuffer_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ac2e7a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ac2e7a780"/>
        <function-ref name="source" scoped="" ref="0x7f4ac2e7a910"/>
        <function-ref name="address" scoped="" ref="0x7f4ac2e7aaa0"/>
        <function-ref name="destination" scoped="" ref="0x7f4ac2e7ac30"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ac2e7adc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ac2e79020"/>
        <function-ref name="type" scoped="" ref="0x7f4ac2e791b0"/>
        <function-ref name="setType" scoped="" ref="0x7f4ac2e79340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ac2e794d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ac2e79660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ac2e797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ac2e77560" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="ReceivingBuffer_AppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac2e77560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac2e73a20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac2e75020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ac2e75da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ac2e75920"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ac2e724a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ac2e72020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac2e754a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ac2e761b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ac2e73410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ac2e76680"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac2e76b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ac2e70020" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="ReceivingBuffer_AppC.Timer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ac2e70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ac439ae00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ac41c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ac2e6c630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ac2e6fa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ac2e6e920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ac2e6e4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ac2e6b020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ac2e6cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ac2e6e020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ac2e70c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ac2e6c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ac2e6f110"/>
        <function-ref name="stop" scoped="" ref="0x7f4ac2e6f5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ac2e66610" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="ReceivingBuffer_AppC.ADC0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac2e66610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac2e66990"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac2e66b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac2e66cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac2e66e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac2e65020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac2e651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac2e65340"/>
        <function-ref name="get" scoped="" ref="0x7f4ac2e654d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac2e65660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac2e657f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac2e65980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac2e65b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac2e65ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac2e64020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac2e641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ac2e67390" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="ReceivingBuffer_AppC.ADC0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac2e67390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac2e67710"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac2e678a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac2e67a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac2e67bc0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac2e67d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac2e66020"/>
        <function-ref name="set" scoped="" ref="0x7f4ac2e661b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac2e66340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ac2e607a0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="ReceivingBuffer_AppC.ADC1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ac2e607a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac2e60b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac2e60cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ac2e60e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac2e5f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac2e5f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ac2e5f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac2e5f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac2e5f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ac2e5f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ac2e5f980"/>
        <function-ref name="set" scoped="" ref="0x7f4ac2e5fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ac2e5fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ac2e5fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ac2e5e120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac2e5e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ac2e625b0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="ReceivingBuffer_AppC.ADC1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ac2e625b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ac2e62930"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ac2e62ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ac2e62c50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ac2e62de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ac2e60020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ac2e601b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ac2e60340"/>
        <function-ref name="clr" scoped="" ref="0x7f4ac2e604d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../..//tos/interfaces/Init.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f4ac4396420" loc="62:../../../..//tos/interfaces/Init.nc">
        <documentation loc="53:../../../..//tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../..//tos/interfaces/Boot.nc">
      <documentation loc="42:../../../..//tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f4ac4397020" loc="60:../../../..//tos/interfaces/Boot.nc">
        <documentation loc="51:../../../..//tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f4ac4368420" loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f4ac436a700" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f4ac4369ce0" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f4ac436a020" loc="42:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f4ac436ae70" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f4ac436c0e0" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f4ac436c7c0" loc="41:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f4ac43695c0" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../..//tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f4ac44b5020" loc="62:../../../..//tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../..//tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f4ac477ac00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f4ac4316020" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f4ac4317cc0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f4ac431a390" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4ac4361ec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f4ac4360940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f4ac4316890" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f4ac43157b0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f4ac4317560" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f4ac4315020" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f4ac431ab30" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f4ac4319350" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f4ac4319da0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4ac4361ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f4ac4360940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4ac4319b20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4ac4361ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f4ac4360940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f4ac43090e0" loc="44:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f4ac4306730" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f4ac43064b0" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f4ac43052e0" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4ac4305060" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4ac4307ca0" loc="73:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4ac43073e0" loc="68:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f4ac4309a90" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f4ac4309810" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f4ac43103e0" loc="40:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f4ac4310d60" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4ac4310ae0" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f4ac430e790" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f4ac430e510" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f4ac430d2a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f4ac430d020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4ac430d990" loc="45:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f4ac4320810" loc="52:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f4ac431d2a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f4ac431d020" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f4ac431e020" loc="53:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4ac4326ab0" loc="45:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f4ac431e760" loc="54:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4ac43229b0" loc="47:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f4ac4320120" loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4ac4322270" loc="46:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f4ac43210e0" loc="48:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f4ac43219f0" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4ac4321770" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f4ac431dcb0" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f4ac431da30" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4ac42df1f0" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../..//tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../..//tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f4ac43d8a80" loc="85:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f4ac43d71f0" loc="86:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f4ac43d82b0" loc="79:../../../..//tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../..//tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../..//tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f4ac45f1810" loc="52:../../../..//tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../..//tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../..//tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../..//tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f4ac4c4f020" loc="57:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f4ac4c4e020" loc="72:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../..//tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f4ac4c4f790" loc="65:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../..//tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f4ac4c43270" loc="67:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f4ac4c43ac0" loc="75:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../..//tos/interfaces/Receive.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f4ac41589c0" loc="78:../../../..//tos/interfaces/Receive.nc">
        <documentation loc="58:../../../..//tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
              <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac4158060" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f4ac41583b0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ac41586e0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../..//tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f4ac413edf0" loc="113:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../..//tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4ac413eb70" loc="113:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f4ac413b350" loc="138:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4ac413b0d0" loc="138:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4ac413e190" loc="104:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ac413c680" loc="130:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../..//tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../..//tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f4ac412f8a0" loc="44:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f4ac412d020" loc="45:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f4ac4130a40" loc="42:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f4ac412de80" loc="47:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4ac412f190" loc="43:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f4ac412d740" loc="46:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ac413fc00" loc="40:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f4ac4130350" loc="41:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../..//tos/interfaces/Packet.nc">
      <documentation loc="42:../../../..//tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f4ac4139020" loc="65:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="58:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac4140ca0" loc="65:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f4ac4137110" loc="78:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="67:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac4139e10" loc="78:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4ac4134490" loc="126:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="109:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac4135e50" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ac41341c0" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4ac4135560" loc="106:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="96:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f4ac41365e0" loc="94:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="80:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac4136020" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ac4136350" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../..//tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f4ac415e2c0" loc="80:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ac4160940" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f4ac4160cc0" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ac415e020" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4ac415b970" loc="135:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac415b370" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ac415b6a0" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4ac415aa60" loc="123:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4ac415d630" loc="96:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac415d3b0" loc="96:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ac415cb80" loc="110:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac415c5a0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4ac415c8f0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../..//tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ac41af6f0" loc="53:../../../..//tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ac41af6f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f4ac414b420" loc="136:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4ac4150d60" loc="83:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f4ac414eb10" loc="114:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4ac414e540" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f4ac414e880" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f4ac414fd60" loc="98:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f4ac414a460" loc="151:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f4ac414bbb0" loc="144:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f4ac414f570" loc="92:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f4ac41512a0" loc="64:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4ac4151020" loc="64:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f4ac414caa0" loc="129:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4ac414c4d0" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f4ac414c810" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f4ac4151d60" loc="73:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4ac4151ae0" loc="73:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ac4150650" loc="78:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../..//tos/interfaces/Leds.nc">
      <documentation loc="33:../../../..//tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f4ac41b7630" loc="61:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="58:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f4ac41b7de0" loc="67:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="63:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f4ac41b6620" loc="72:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="69:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f4ac41b5590" loc="83:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="79:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f4ac41b4ce0" loc="100:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="96:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4ac41b2510" loc="117:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="103:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f4ac41b6db0" loc="77:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="74:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ac41b10b0" loc="134:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="120:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f4ac41b2e00" loc="134:../../../..//tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f4ac41b9e80" loc="56:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="53:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f4ac41b5d70" loc="89:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="86:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f4ac41b4530" loc="94:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="91:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f4ac3fcb0e0" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f4ac3fcb830" loc="80:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f4ac3fc62e0" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4ac3fc6060" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f4ac3fcd940" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f4ac3fca780" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f4ac3fc6bd0" loc="117:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f4ac3fca020" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4ac3fcc920" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f4ac3fc7020" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f4ac3fcc120" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ac3fd1a90" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f4ac3fc8020" loc="92:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f4ac3fc77c0" loc="101:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f4ac3fc87e0" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f4ac3fcd1f0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../..//tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../..//tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f4ac3d83840" loc="177:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4ac4172180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ac3d835c0" loc="177:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f4ac3d8d400" loc="88:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ac3d8d180" loc="88:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f4ac3d8f840" loc="68:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f4ac3d8e350" loc="78:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ac3d8e0d0" loc="78:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f4ac3d89d00" loc="121:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ac3d89720" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4ac3d89a70" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f4ac3d8b800" loc="103:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ac3d8b220" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4ac3d8b570" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f4ac3d862e0" loc="147:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ac3d86060" loc="147:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f4ac3d85680" loc="162:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ac3d850d0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f4ac3d853f0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4ac4173d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f4ac3d880b0" loc="136:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ac3d8ae00" loc="136:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f4ac3d81d00" loc="187:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4ac4172180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ac3d81720" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f4ac3d81a70" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4ac4172180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f4ac3d7fb50" loc="195:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4ac4172180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../..//tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f4ac3d7d5f0" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3d7d370" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f4ac3d7c7d0" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3d7c550" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f4ac3d79940" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3d796c0" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../..//tos/interfaces/Send.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ac3d6b020" loc="75:../../../..//tos/interfaces/Send.nc">
        <documentation loc="57:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3d6fa30" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ac3d6fd60" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4ac3d67660" loc="125:../../../..//tos/interfaces/Send.nc">
        <documentation loc="115:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3d67060" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ac3d67390" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4ac3d66790" loc="112:../../../..//tos/interfaces/Send.nc">
        <documentation loc="102:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4ac3d6a350" loc="89:../../../..//tos/interfaces/Send.nc">
        <documentation loc="77:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3d6a0d0" loc="89:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ac3d69870" loc="100:../../../..//tos/interfaces/Send.nc">
        <documentation loc="91:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3d69290" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4ac3d695e0" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ac3cf7920" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ac3cf7920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4ac3cf7b60" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3cf7b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f4ac3cf2970" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3cf7b60"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3cf26f0" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f4ac3cf1b40" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3cf18c0" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f4ac3cf4750" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3cf44d0" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ac3cf3020" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3cf7b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3cef8a0" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f4ac3cefc00" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3cf7b60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../..//tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../..//tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f4ac3ce3030" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3ce49e0" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f4ac3ce4d70" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f4ac3ce22a0" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3ce2020" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f4ac3ce41f0" loc="57:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f4ac3ce67f0" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f4ac3ce6570" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f4ac3cba430" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3cba1b0" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f4ac3cbd720" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3cbd4a0" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f4ac3cc0dc0" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f4ac3cc0b40" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f4ac3cc02a0" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f4ac3cc0020" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f4ac3cbe880" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f4ac3cbe600" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f4ac3cbc5e0" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3cbc360" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../..//tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../..//tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f4ac3cafe60" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../..//tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f4ac3caf850" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f4ac3cafbd0" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f4ac3cc90c0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ac3ccbaa0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f4ac3ccbdf0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f4ac3cc56d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ac3cc50d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f4ac3cc5440" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f4ac3cc9ba0" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f4ac4f66110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ac3cc9920" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f4ac3cc7600" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ac3cc7380" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f4ac3ccb2a0" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ac3ccb020" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f4ac3cc8720" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ac3cc84a0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../..//tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../..//tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f4ac3cb3630" loc="65:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3cb33b0" loc="65:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f4ac3cb76f0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3cb70d0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f4ac3cb7460" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f4ac3cb45f0" loc="59:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../..//tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3cb4370" loc="59:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f4ac3cb6af0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3cb64d0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f4ac3cb6860" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f4ac3cb2630" loc="71:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3cb23b0" loc="71:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../..//tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f4ac3cc20b0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../..//tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3cccde0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../..//tos/interfaces/Resource.nc">
      <documentation loc="63:../../../..//tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f4ac3ca6cc0" loc="120:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="104:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f4ac3ca7cc0" loc="97:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="90:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f4ac3ca7350" loc="88:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="78:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f4ac3ca64f0" loc="102:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="99:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f4ac3ca58b0" loc="128:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="122:../../../..//tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ac3c85ca0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ac3c856e0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f4ac3c85a10" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4ac3c82020" loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f4ac3c80930" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f4ac3c81ab0" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f4ac3c80360" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ac3c80690" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ac3c812b0" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ac3c82bb0" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4ac3c81020" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f4ac3c84780" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f4ac3c84500" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../..//tos/interfaces/Random.nc">
      <documentation loc="34:../../../..//tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f4ac3c7db50" loc="52:../../../..//tos/interfaces/Random.nc">
        <documentation loc="48:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f4ac3c7d350" loc="46:../../../..//tos/interfaces/Random.nc">
        <documentation loc="42:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../..//tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f4ac3c87270" loc="95:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ac3c87a80" loc="105:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f4ac3c75020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3c77c90" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f4ac3c77490" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f4ac41ad720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f4ac41aa090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3c77190" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f4ac3c74360" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f4ac41aab90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f4ac41a84f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3c74060" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f4ac3c8c070" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f4ac3c890e0" loc="97:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f4ac3c8b8f0" loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f4ac3c8e730" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f4ac3c8d7e0" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f4ac3c8c8e0" loc="76:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f4ac3c8b120" loc="83:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f4ac3c8d020" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../..//tos/interfaces/State.nc">
      <documentation loc="33:../../../..//tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f4ac3c6fa70" loc="71:../../../..//tos/interfaces/State.nc">
        <documentation loc="68:../../../..//tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f4ac3c70020" loc="56:../../../..//tos/interfaces/State.nc">
        <documentation loc="53:../../../..//tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f4ac3c6f2a0" loc="66:../../../..//tos/interfaces/State.nc">
        <documentation loc="63:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f4ac3c6f020" loc="66:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f4ac3c70790" loc="61:../../../..//tos/interfaces/State.nc">
        <documentation loc="58:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f4ac3c79ca0" loc="45:../../../..//tos/interfaces/State.nc">
        <documentation loc="40:../../../..//tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f4ac3c79a20" loc="45:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f4ac3c727a0" loc="51:../../../..//tos/interfaces/State.nc">
        <documentation loc="47:../../../..//tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f4ac3c72520" loc="51:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f4ac3c14640" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f4ac3c14060" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f4ac3c143b0" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f4ac3c15020" loc="93:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f4ac3c16690" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f4ac3c16020" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f4ac3c16400" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f4ac3c1da40" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4ac3c1d7c0" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f4ac3c158a0" loc="98:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f4ac3c19540" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f4ac3c192c0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f4ac3c1cb90" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4ac3c1c910" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f4ac3c138a0" loc="117:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f4ac3c186b0" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f4ac3c18430" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f4ac3c13070" loc="112:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f4ac3c1a350" loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f4ac3cdf670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f4ac3cdfdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f4ac3c1ab40" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f4ac3c1d020" loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f4ac3c1c1f0" loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f4ac3c19ce0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../..//tos/interfaces/Read.nc">
      <documentation loc="33:../../../..//tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f4ac3c0e2b0" loc="49:../../../..//tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ac3c0e2b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f4ac3c0eb70" loc="55:../../../..//tos/interfaces/Read.nc">
        <documentation loc="50:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4ac3c0d8f0" loc="63:../../../..//tos/interfaces/Read.nc">
        <documentation loc="57:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ac3c0e2b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f4ac3c0d340" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f4ac3c0d660" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ac3c0e2b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4ac3be3c10" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ac41bc8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ac3be3990" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ac3be1710" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ac41bc8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ac3be1490" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../..//tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f4ac3c02c20" loc="48:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../..//tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f4ac3cdf670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f4ac3cdfdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../..//tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ac3bfe020" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ac3bfe020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4ac3bfe260" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3bfe260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f4ac3bfae00" loc="109:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3bfe260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4ac3bfde40" loc="78:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f4ac3bfa460" loc="103:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3bfe260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3bfe260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4ac3bfbe60" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3bfe260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f4ac3bfa1d0" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3bfe260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f4ac3bfb640" loc="88:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f4ac3bf9620" loc="116:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3bfe260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4ac3bfedc0" loc="66:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3bfe260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4ac3bfeb40" loc="66:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3bfe260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ac3bfd680" loc="73:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../..//tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f4ac3beb560" loc="50:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f4ac3bea4f0" loc="60:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f4ac3bebd40" loc="55:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4ac4172180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f4ac3beccd0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4ac4172180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f4ac3bec6f0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4ac4172180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f4ac3beca40" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ac4172560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f4ac3bdee40" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ac41bc8b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4ac3be7e80" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ac41bc8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f4ac3be7020" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f4ac3be7890" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ac3be7be0" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ac3be5610" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ac41bc8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f4ac3be6770" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f4ac3be5020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ac3be5370" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../..//tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../..//tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4ac3beec30" loc="68:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4ac3bee470" loc="61:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f4ac3bf0ce0" loc="54:../../../..//tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f4ac3bf0420" loc="53:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../..//tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ac3ada4f0" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ac3ada4f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4ac3ada730" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3ada730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4ac3ad9070" loc="64:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac3ada730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4ac3ad7190" loc="76:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4ac3ad98f0" loc="71:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f4ac3ad78f0" loc="82:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../..//tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f4ac3a11bb0" loc="54:../../../..//tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4ac3a10d70" loc="66:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f4ac3a105c0" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4ac3a10340" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f4ac3a11350" loc="53:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../..//tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f4ac39eba60" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4ac39e9540" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4ac39eb2d0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f4ac39eacf0" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f4ac39eaa70" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f4ac39efb00" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f4ac39ea2b0" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f4ac38d7270" loc="24:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f4ac38d7ac0" loc="31:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f4ac38d6350" loc="39:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f4ac38b0b60" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ac38b0580" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ac38b08d0" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f4ac38abdd0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ac38ab490" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ac38ab7e0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4ac38abb30" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ac38ac6b0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ac41bc8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ac38ac0d0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ac38ac420" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f4ac38b1730" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ac41bc8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ac38b1150" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ac38b14a0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4ac38ad2c0" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ac38af930" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ac38afc80" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4ac38ad020" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../..//tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ac3891df0" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f4ac3891480" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f4ac3891810" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ac3891b50" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ac388e3c0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f4ac388d6a0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f4ac388da30" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ac388dd70" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4ac388e110" loc="89:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../..//tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f4ac3895c90" loc="45:../../../..//tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../..//tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f4ac3895a10" loc="45:../../../..//tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../..//tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f4ac37b16f0" loc="53:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f4ac37b0070" loc="61:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f4ac37a8710" loc="39:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4ac37e4020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4ac37e4440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../..//tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../..//tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f4ac37ae2a0" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ac37ae020" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f4ac37ad680" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ac37ad400" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f4ac37aeb10" loc="68:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ac37ab2a0" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ac37ab020" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../..//tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../..//tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f4ac37a2ca0" loc="65:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f4ac37a2480" loc="59:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f4ac37992a0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ac3799020" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f4ac379a780" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f4ac3776af0" loc="213:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f4ac3781790" loc="143:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f4ac378e610" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ac3800080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4ac38008c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4ac378e390" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ac3800080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4ac38008c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f4ac3784870" loc="123:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f4ac378ba90" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ac37fb080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4ac37fb8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4ac378b810" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ac37fb080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4ac37fb8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f4ac377be70" loc="180:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f4ac3777480" loc="197:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f4ac378b070" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ac37fe020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4ac37fe7b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f4ac378a2b0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ac37fb080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4ac37fb8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f4ac3786020" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f4ac3787d30" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f4ac3787610" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f4ac377b740" loc="179:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f4ac378d840" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ac37fe020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4ac37fe7b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4ac378d5c0" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ac37fe020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4ac37fe7b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f4ac3789420" loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f4ac377a5d0" loc="181:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f4ac3789e00" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f4ac3789b80" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f4ac3785910" loc="113:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f4ac37840e0" loc="118:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f4ac377c840" loc="177:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f4ac377f790" loc="163:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f4ac37827e0" loc="133:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f4ac377b020" loc="178:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f4ac3780020" loc="148:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f4ac377acf0" loc="182:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f4ac3786800" loc="103:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f4ac3806dd0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f4ac3802680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f4ac37784c0" loc="187:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f4ac3776350" loc="207:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f4ac378ac50" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f4ac378a9d0" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f4ac37744d0" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ac3774250" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f4ac378edf0" loc="55:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ac3800080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4ac38008c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f4ac3782020" loc="128:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f4ac3780770" loc="153:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f4ac377c020" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ac37d2e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f4ac37d12b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4ac377dcf0" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ac37d2e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f4ac37d12b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f4ac377d2a0" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4ac37e4020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4ac37e4440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4ac377d020" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4ac37e4020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4ac37e4440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f4ac3774d90" loc="231:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f4ac3778cb0" loc="192:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f4ac3785070" loc="108:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f4ac3777be0" loc="202:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f4ac377f020" loc="158:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f4ac3781020" loc="138:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4ac370d600" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f4ac36e6070" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f4ac36f9b10" loc="31:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f4ac36eed50" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ac36eead0" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f4ac3701270" loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f4ac36ea350" loc="71:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f4ac36f3cf0" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f4ac36fac50" loc="28:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f4ac36f89c0" loc="34:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f4ac36fcc00" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f4ac36fc980" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f4ac36fd120" loc="21:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f4ac36f5790" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f4ac36ecc80" loc="66:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f4ac36e78f0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f4ac36ee390" loc="61:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f4ac36e2b60" loc="91:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f4ac36dd270" loc="100:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f4ac36ff0e0" loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f4ac36f5020" loc="38:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f4ac36f4910" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f4ac36fa500" loc="27:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f4ac3702020" loc="7:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f4ac36efba0" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ac36ef920" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f4ac37057e0" loc="6:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f4ac36ebb80" loc="69:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f4ac36e67d0" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f4ac36e0350" loc="94:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f4ac36dea90" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f4ac36e8270" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f4ac36e5020" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f4ac36ec520" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f4ac36e3bb0" loc="87:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f4ac36ff800" loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f4ac36f0020" loc="53:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f4ac36e3020" loc="86:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f4ac36e7190" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f4ac36f3520" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f4ac36f32a0" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f4ac36e0af0" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f4ac36ef1f0" loc="57:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f4ac36eaac0" loc="72:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f4ac3702aa0" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ac37beb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f4ac37bd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4ac3702820" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ac37beb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f4ac37bd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f4ac36f6870" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f4ac36fe980" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4ac36fe700" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f4ac36f4120" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ac36f5e70" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f4ac36e23b0" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f4ac36fc270" loc="24:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f4ac36fe020" loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f4ac36f09e0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f4ac36f0760" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ac4f65520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f4ac37019a0" loc="12:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f4ac36e5740" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f4ac36e89e0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f4ac36eb420" loc="68:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f4ac36f1740" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f4ac36f14c0" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f4ac36f6120" loc="35:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f4ac36f93b0" loc="29:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f4ac36de2b0" loc="96:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f4ac36fdaa0" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4ac36fd820" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f4ac36e1350" loc="92:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f4ac36f8270" loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f4ac36e1b10" loc="93:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../..//tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../..//tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f4ac3641780" loc="90:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f4ac363f020" loc="98:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f4ac360a900" loc="56:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f4ac3609a20" loc="73:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f4ac360a070" loc="46:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f4ac36091f0" loc="65:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f4ac3608390" loc="81:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../..//tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f4ac35feb50" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ac3606b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4ac35fe8d0" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ac3606b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f4ac3602b80" loc="53:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f4ac35ff6b0" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ac3606b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4ac35ff430" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ac3606b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f4ac35fe020" loc="70:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ac3606b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../..//tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../..//tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4ac33f95e0" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4ac33f9360" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4ac33e6b00" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f4ac33e61c0" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f4ac33e6530" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ac33e6860" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ac33e4880" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f4ac33e42c0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ac33e45f0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ac33cc530" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ac33cc530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4ac33cc770" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac33cc770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f4ac33cb2e0" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../..//tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac33cc770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4ac33cb060" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ac33cc770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f4ac3369580" loc="43:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f4ac33369e0" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f4ac3336020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f4ac3336750" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f4ac33377f0" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f4ac3337020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4ac333bd30" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f4ac334f3d0" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ac4f65160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac334f150" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f4ac33503d0" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ac4c53090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac3350150" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4ac334a350" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac334a0d0" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ac334b390" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ac334b110" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ac4162ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ac4160180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../..//tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ac31d4910" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ac31d4910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4ac31d1270" loc="61:../../../..//tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../..//tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ac4f65920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f4ac30425e0" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4ac30425e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f4ac303f2a0" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../..//tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ac4c4ac20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4ac30425e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f4ac303f020" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4ac30425e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
