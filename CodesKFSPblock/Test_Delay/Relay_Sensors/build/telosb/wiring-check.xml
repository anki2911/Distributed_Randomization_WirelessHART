<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="18:Relay_AppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ff1d5b23c40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ff1d5cfd3f0"/></to>
    </wire>
    <wire loc="72:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ff1d5cfd3f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ff1d5b3f590"/></to>
    </wire>
    <wire loc="20:Relay_AppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff1d5abd8f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff1d47e9020"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff1d47e9020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff1d4300420"/></to>
    </wire>
    <wire loc="21:Relay_AppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7ff1d5aab140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff1d565a140"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff1d565a140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff1d5631880"/></to>
    </wire>
    <wire loc="22:Relay_AppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff1d5b17500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff1d5960380"/></to>
    </wire>
    <wire loc="51:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff1d5960380"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff1d595cdc0"/></to>
    </wire>
    <wire loc="23:Relay_AppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7ff1d5ab09e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d47d35a0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff1d47d35a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff1d49fb2c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:Relay_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff1d5aaa020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff1d47e9c30"/></to>
    </wire>
    <wire loc="33:Relay_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff1d5aaa020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff1d47dc020"/></to>
    </wire>
    <wire loc="34:Relay_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff1d5aaa020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff1d47d8780"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff1d47d8780"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff1d5657630"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff1d47dc020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff1d5657630"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff1d47e9c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff1d42ff060"/></to>
    </wire>
    <wire loc="31:Relay_AppC.nc">
      <from><interface-ref name="R_A" scoped="" ref="0x7ff1d5ab9220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff1d47e2910"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff1d47e2910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff1d56583f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:Relay_AppC.nc">
      <from><interface-ref name="R_B" scoped="" ref="0x7ff1d5ab98e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff1d47d81b0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff1d47d81b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff1d56583f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5cfc8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d48cfdd0"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5cfc8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d4959b70"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5cfc8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d4977750"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5cfc8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d4998080"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5cfc8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d4acd130"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5cfc8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d4bcd620"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5cfc8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d4cbec60"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5cfc8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d54b47e0"/></to>
    </wire>
    <wire loc="103:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5cfc8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d40ee140"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5cfc8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d517e020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5cfc8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d55654a0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7ff1d5b3fc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7ff1d61983a0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7ff1d61983a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7ff1d5d43140"/></to>
    </wire>
    <wire loc="68:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ff1d5b326c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d5cff880"/></to>
    </wire>
    <wire loc="48:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff1d5cff880"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d5cfaa70"/></to>
    </wire>
    <wire loc="71:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5b32dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5cfc8d0"/></to>
    </wire>
    <wire loc="49:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7ff1d5cf61c0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7ff1d5cd8020"/></to>
    </wire>
    <wire loc="46:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7ff1d5cd8020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d5cd5020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ff1d5cf68a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d5cf9c80"/></to>
    </wire>
    <wire loc="56:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7ff1d5cf5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d5931920"/></to>
    </wire>
    <wire loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff1d5cd5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d5cbfcb0"/></to>
    </wire>
    <wire loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff1d5cce6c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff1d5cbe3d0"/></to>
    </wire>
    <wire loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7ff1d5e1b4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7ff1d5cbd680"/></to>
    </wire>
    <wire loc="113:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7ff1d5c7a5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff1d5bb76d0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7ff1d5c68020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff1d5bb0b30"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7ff1d5c71700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff1d5bbd160"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7ff1d5c55a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff1d5b96cb0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7ff1d5c78aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff1d5bbe480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7ff1d5c5b020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff1d5b96020"/></to>
    </wire>
    <wire loc="170:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7ff1d5c52a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff1d5b7fcb0"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7ff1d5c625a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff1d5b90220"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7ff1d5c7bb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff1d5c0d9d0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7ff1d5c57a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff1d5ba52f0"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7ff1d5c5d3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff1d5ba6610"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7ff1d5c675a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff1d5ba7220"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7ff1d5c70700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff1d5bb57a0"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7ff1d5c54a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff1d5b8e2f0"/></to>
    </wire>
    <wire loc="140:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7ff1d5c65be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff1d5ba06d0"/></to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7ff1d5c77890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff1d5bb6ac0"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7ff1d5c8b060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d5c1b540"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7ff1d5c5bda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff1d5b8f610"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7ff1d5c810c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff1d5bbf020"/></to>
    </wire>
    <wire loc="161:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7ff1d5c61a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff1d5b886d0"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7ff1d5c6b6d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff1d5bc5a90"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7ff1d5c56a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff1d5b9e7a0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7ff1d5c73cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff1d5bc6de0"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7ff1d5c5c1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff1d5b9fac0"/></to>
    </wire>
    <wire loc="163:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7ff1d5c53a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff1d5b867a0"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7ff1d5c630c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff1d5b98b30"/></to>
    </wire>
    <wire loc="120:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7ff1d5c6a6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d5c133e0"/></to>
    </wire>
    <wire loc="162:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7ff1d5c5ab80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff1d5b87ac0"/></to>
    </wire>
    <wire loc="128:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7ff1d5c58a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff1d5baecb0"/></to>
    </wire>
    <wire loc="169:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7ff1d5c59a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff1d5b7f020"/></to>
    </wire>
    <wire loc="127:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7ff1d5c5e570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff1d5bae020"/></to>
    </wire>
    <wire loc="168:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7ff1d5c5f020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff1d5b81b30"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7ff1d5c19450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff1d5c1ad80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7ff1d5c19aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7ff1d5b79a90"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7ff1d5c17120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7ff1d5b76260"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff1d5bc4930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d5c1b540"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff1d5bc2020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff1d5c1ad80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff1d5bbb020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d5c1b540"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff1d5bba7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff1d5c1ad80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff1d5bb4610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d5c1b540"/></to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff1d5bb3c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff1d5c1ad80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7ff1d5c112f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff1d5c12bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7ff1d5c11940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7ff1d5b769f0"/></to>
    </wire>
    <wire loc="123:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7ff1d5c10020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7ff1d5b75240"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff1d5badb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d5c133e0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff1d5baa2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff1d5c12bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff1d5ba4160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d5c133e0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff1d5ba37a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff1d5c12bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff1d5b9d610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d5c133e0"/></to>
    </wire>
    <wire loc="144:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff1d5b9bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff1d5c12bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff1d5b95b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d5c133e0"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff1d5b932f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff1d5c12bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff1d5b8d160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d5c133e0"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff1d5b8c7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff1d5c12bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff1d5b85610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d5c133e0"/></to>
    </wire>
    <wire loc="165:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff1d5b84c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff1d5c12bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff1d5b7eb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d5c133e0"/></to>
    </wire>
    <wire loc="172:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff1d5b7c2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff1d5c12bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d5d41040"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7ff1d5d3d490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7ff1d612f3b0"/></to>
    </wire>
    <wire loc="55:RelayC.nc">
      <from><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7ff1d5a95080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:RelayC.nc">
      <from><interface-ref name="updateSchedule" scoped="" ref="0x7ff1d5a922a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:RelayC.nc">
      <from><interface-ref name="initializeFlow" scoped="" ref="0x7ff1d5a96100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:RelayC.nc">
      <from><interface-ref name="initializeSchedule" scoped="" ref="0x7ff1d5a94020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:RelayC.nc">
      <from><interface-ref name="initializeCluster" scoped="" ref="0x7ff1d5a91300"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:RelayC.nc">
      <from><interface-ref name="PermutateCipher" scoped="" ref="0x7ff1d5a93310"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff1d5931920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d595c7c0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7ff1d59513a0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7ff1d5934060"/></to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7ff1d5934060"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d5722020"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7ff1d5957660"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7ff1d5933380"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7ff1d5933380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d5705b90"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7ff1d5956980"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7ff1d59326a0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7ff1d59326a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d5700710"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d57082f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7ff1d58d99a0"/></to>
    </wire>
    <wire loc="486:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7ff1d58d99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57b6d10"/></to>
    </wire>
    <wire loc="62:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d5704de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7ff1d58d79a0"/></to>
    </wire>
    <wire loc="487:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7ff1d58d79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57b1740"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d56ff930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7ff1d58d59a0"/></to>
    </wire>
    <wire loc="488:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7ff1d58d59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57ac100"/></to>
    </wire>
    <wire loc="442:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7ff1d591b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d584f740"/></to>
    </wire>
    <wire loc="455:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7ff1d5906810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d581f100"/></to>
    </wire>
    <wire loc="531:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7ff1d58bdca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5810100"/></to>
    </wire>
    <wire loc="551:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7ff1d5898cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5785740"/></to>
    </wire>
    <wire loc="532:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7ff1d58bbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d580cd10"/></to>
    </wire>
    <wire loc="460:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7ff1d5902810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5815740"/></to>
    </wire>
    <wire loc="473:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7ff1d58ee9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57e5460"/></to>
    </wire>
    <wire loc="497:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7ff1d58c99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d578f100"/></to>
    </wire>
    <wire loc="535:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7ff1d58b4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5802100"/></to>
    </wire>
    <wire loc="545:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7ff1d58a4cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57a2740"/></to>
    </wire>
    <wire loc="557:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7ff1d5890cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5780100"/></to>
    </wire>
    <wire loc="445:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7ff1d5915810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5841740"/></to>
    </wire>
    <wire loc="536:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7ff1d58b2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57fed10"/></to>
    </wire>
    <wire loc="450:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7ff1d5910810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5837d10"/></to>
    </wire>
    <wire loc="463:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7ff1d58fc810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5807740"/></to>
    </wire>
    <wire loc="476:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7ff1d58e89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57d7100"/></to>
    </wire>
    <wire loc="489:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7ff1d58d39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57a7d10"/></to>
    </wire>
    <wire loc="500:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7ff1d58c39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5780100"/></to>
    </wire>
    <wire loc="440:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7ff1d591f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5858100"/></to>
    </wire>
    <wire loc="453:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7ff1d590a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5829d80"/></to>
    </wire>
    <wire loc="466:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7ff1d58f6810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57f9740"/></to>
    </wire>
    <wire loc="530:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7ff1d58bfcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5810100"/></to>
    </wire>
    <wire loc="548:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7ff1d589ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5794740"/></to>
    </wire>
    <wire loc="555:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7ff1d5892cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5780100"/></to>
    </wire>
    <wire loc="541:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7ff1d58aacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57ba100"/></to>
    </wire>
    <wire loc="471:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7ff1d58f2810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57efe60"/></to>
    </wire>
    <wire loc="484:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7ff1d58dd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57bf740"/></to>
    </wire>
    <wire loc="495:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7ff1d58cd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5799d10"/></to>
    </wire>
    <wire loc="549:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7ff1d589ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d578f100"/></to>
    </wire>
    <wire loc="538:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7ff1d58b0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57c8100"/></to>
    </wire>
    <wire loc="443:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7ff1d5919810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d584a100"/></to>
    </wire>
    <wire loc="456:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7ff1d5904810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d581bd10"/></to>
    </wire>
    <wire loc="493:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7ff1d58d19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57a2740"/></to>
    </wire>
    <wire loc="461:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7ff1d5900810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5810100"/></to>
    </wire>
    <wire loc="474:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7ff1d58ec9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57e1e00"/></to>
    </wire>
    <wire loc="498:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7ff1d58c79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d578bd10"/></to>
    </wire>
    <wire loc="540:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7ff1d58accc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57bf740"/></to>
    </wire>
    <wire loc="438:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7ff1d5921900"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5889d10"/></to>
    </wire>
    <wire loc="451:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7ff1d590e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5832740"/></to>
    </wire>
    <wire loc="464:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7ff1d58fa810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5802100"/></to>
    </wire>
    <wire loc="477:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7ff1d58e69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57d3d10"/></to>
    </wire>
    <wire loc="542:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7ff1d58a8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57f9740"/></to>
    </wire>
    <wire loc="546:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7ff1d58a2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d579d100"/></to>
    </wire>
    <wire loc="552:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7ff1d5896cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5780100"/></to>
    </wire>
    <wire loc="482:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7ff1d58e19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57c8100"/></to>
    </wire>
    <wire loc="543:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7ff1d58a6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57f3100"/></to>
    </wire>
    <wire loc="441:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7ff1d591d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5854d10"/></to>
    </wire>
    <wire loc="454:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7ff1d5908810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5824740"/></to>
    </wire>
    <wire loc="467:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7ff1d58f4810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57f3100"/></to>
    </wire>
    <wire loc="539:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7ff1d58aecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57c4d10"/></to>
    </wire>
    <wire loc="550:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7ff1d589acb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d578bd10"/></to>
    </wire>
    <wire loc="472:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7ff1d58f09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57ea9f0"/></to>
    </wire>
    <wire loc="485:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7ff1d58db9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57ba100"/></to>
    </wire>
    <wire loc="496:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7ff1d58cb9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5794740"/></to>
    </wire>
    <wire loc="444:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7ff1d5917810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5846d10"/></to>
    </wire>
    <wire loc="494:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7ff1d58cf9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d579d100"/></to>
    </wire>
    <wire loc="449:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7ff1d5912810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d583b100"/></to>
    </wire>
    <wire loc="462:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7ff1d58fe810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d580cd10"/></to>
    </wire>
    <wire loc="475:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7ff1d58ea9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57dc740"/></to>
    </wire>
    <wire loc="499:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7ff1d58c59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5785740"/></to>
    </wire>
    <wire loc="439:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7ff1d592b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d585d740"/></to>
    </wire>
    <wire loc="452:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7ff1d590c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d582d100"/></to>
    </wire>
    <wire loc="465:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7ff1d58f8810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57fed10"/></to>
    </wire>
    <wire loc="478:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7ff1d58e39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57cd740"/></to>
    </wire>
    <wire loc="534:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7ff1d58b7ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5807740"/></to>
    </wire>
    <wire loc="547:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7ff1d58a0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5799d10"/></to>
    </wire>
    <wire loc="533:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7ff1d58b9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5807740"/></to>
    </wire>
    <wire loc="483:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7ff1d58df9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57c4d10"/></to>
    </wire>
    <wire loc="554:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7ff1d5894cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5785740"/></to>
    </wire>
    <wire loc="558:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7ff1d588ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d57a7d10"/></to>
    </wire>
    <wire loc="529:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7ff1d58c19f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff1d5815740"/></to>
    </wire>
    <wire loc="63:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff1d4300420"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff1d42f3390"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff1d42ff060"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff1d5657630"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff1d47e88b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff1d42ffc70"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff1d42ffc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff1d56562d0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7ff1d47e5020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7ff1d42fd2b0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7ff1d42fd2b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff1d5655990"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff1d5657630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff1d562b760"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff1d56562d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff1d562c020"/></to>
    </wire>
    <wire loc="85:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff1d5655990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff1d5629810"/></to>
    </wire>
    <wire loc="60:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff1d42f2060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff1d56b0940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff1d42f2c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff1d56562d0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff1d56b0940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff1d56644b0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff1d5663400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff1d56591d0"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff1d56591d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff1d5630980"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff1d5662060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff1d56562d0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff1d5660720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff1d5657630"/></to>
    </wire>
    <wire loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7ff1d565f480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7ff1d565fc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff1d5631880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff1d5609b70"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff1d5630980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff1d4891020"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7ff1d5657020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7ff1d562d900"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7ff1d562d900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7ff1d4890df0"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff1d562b760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff1d488da80"/></to>
    </wire>
    <wire loc="89:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff1d564ccd0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff1d4b49550"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff1d4b49550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff1d4b3ba80"/></to>
    </wire>
    <wire loc="86:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ff1d563eb20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ff1d561fbb0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ff1d561fbb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ff1d55fb700"/></to>
    </wire>
    <wire loc="81:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff1d56583f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff1d562fcb0"/></to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff1d562fcb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff1d4890210"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff1d5629810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff1d55fc670"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff1d562c020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff1d488e470"/></to>
    </wire>
    <wire loc="90:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff1d5649dc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff1d4b45660"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff1d4b45660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff1d4b37af0"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff1d5609b70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff1d48c2b80"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d5617d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d488b8b0"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7ff1d560ad20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7ff1d488cce0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d5622970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d55fd670"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d55fd670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4b4e670"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ff1d55fb700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ff1d48c2080"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff1d55fc670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7ff1d4b4b6e0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7ff1d5615020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7ff1d55fa2e0"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7ff1d55fa2e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7ff1d48ae020"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff1d561ea80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff1d55fb080"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff1d55fb080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff1d4b4aa70"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7ff1d48820f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d5605210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff1d488a860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7ff1d55fe170"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7ff1d55fe170"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7ff1d492bc90"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff1d4889690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7ff1d55fd020"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7ff1d55fd020"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7ff1d492aa50"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff1d48854d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff1d4d75b30"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4889ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4b4e670"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4b4e670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4b40d20"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4888b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4b4a0c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4b4a0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4b3c640"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7ff1d4887610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7ff1d556fb80"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7ff1d556fb80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7ff1d5564970"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7ff1d48841f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d55f5990"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d55f5990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d55ef020"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff1d4882d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff1d5960380"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff1d48c2b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7ff1d48bfd90"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff1d4b4aa70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff1d4b3b020"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7ff1d48ae020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7ff1d48ac410"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7ff1d492bc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7ff1d4920a20"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ff1d48c2080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ff1d48bb2d0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7ff1d5600d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff1d492b5e0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff1d492b5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7ff1d4920370"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7ff1d4b4b6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7ff1d4b3dc50"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d5605210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d492dbe0"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d492dbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d49237b0"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7ff1d5600020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff1d492c8e0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff1d492c8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7ff1d49224d0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7ff1d55ff420"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7ff1d4929170"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7ff1d4929170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7ff1d491e020"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7ff1d492aa50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7ff1d491f840"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7ff1d48bfd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff1d55f99f0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff1d55f99f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff1d55f1690"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff1d49286b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff1d497c220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff1d497c220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff1d497aa20"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff1d497b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff1d48b1350"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff1d48b1350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ff1d48aed70"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff1d48aed70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff1d48c6ce0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff1d48c6ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ff1d48c0860"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff1d48c0860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff1d55f6600"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff1d55f6600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff1d55f02e0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff1d4928020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff1d48c3980"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff1d48c3980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7ff1d48bf690"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff1d48bf690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff1d4960aa0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff1d4960aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff1d495ce30"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff1d495d950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff1d55f5300"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff1d55f5300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff1d4bd17c0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff1d4bd17c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff1d4bcb020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d55efe60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d557f720"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d557f720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d5565b10"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7ff1d55e63f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7ff1d557aa60"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7ff1d557aa60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7ff1d5562740"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7ff1d55e5020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff1d4ccc6c0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7ff1d55e5020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff1d4bd65c0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7ff1d4bd65c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff1d4bcdca0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7ff1d4ccc6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff1d4cbc320"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff1d55dcd30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff1d4cc9020"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff1d4cc9020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff1d4cbcbc0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7ff1d55e4ae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d4cc9cb0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d4cc9cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d4cbb970"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d55d7020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4b4e670"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d55d1660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4b4a0c0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ff1d55db020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7ff1d499ea20"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ff1d499ea20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7ff1d4997a20"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7ff1d55cbe40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff1d49a0aa0"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff1d49a0aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff1d5183280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff1d55db7f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff1d5960380"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7ff1d55c79e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7ff1d55c8a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7ff1d55c9a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7ff1d556d020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7ff1d5561b40"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7ff1d5555d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff1d54b1220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff1d54b1220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff1d54abd20"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ff1d5552060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ff1d53ade60"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ff1d53ade60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d539fb60"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7ff1d5551380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7ff1d53a96a0"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7ff1d53a96a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d5391d70"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7ff1d55506a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7ff1d53a7ce0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7ff1d53a7ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d5386710"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7ff1d554e0e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7ff1d5370d60"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7ff1d5370d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7ff1d5251a30"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ff1d55381d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d4e00e20"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d4e00e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d5204960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff1d55372b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7ff1d4dfd7b0"/></to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff1d4dfd7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff1d55379c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7ff1d4dfbae0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff1d4dfbae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff1d5539a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7ff1d4dfead0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff1d4dfead0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff1d5539120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff1d4df8160"/></to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff1d4df8160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff1d553eb00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7ff1d4df0870"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff1d4df0870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff1d55453d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7ff1d4dee880"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff1d4dee880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff1d5545c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7ff1d4dec0a0"/></to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff1d4dec0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff1d55405f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff1d4df5e50"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff1d4df5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d553c020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d4df3670"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d4df3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff1d5549520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7ff1d4de0500"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff1d4de0500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff1d5541a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7ff1d4de1ce0"/></to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff1d4de1ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff1d553c8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7ff1d4df1e50"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff1d4df1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff1d553b1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7ff1d4df3e50"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff1d4df3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d553ba70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d4df2e50"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d4df2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7ff1d5536d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d4dcea80"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d4dcea80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d5204960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7ff1d5536020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d4da19e0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d4da19e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d5204960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff1d5546810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff1d4d75b30"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff1d555d020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff1d4d74d30"/></to>
    </wire>
    <wire loc="23:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff1d4d74d30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff1d4d58310"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7ff1d552a820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7ff1d552b940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff1d54b47e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d54ab490"/></to>
    </wire>
    <wire loc="51:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff1d54ab490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d4278060"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff1d54abd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff1d42788b0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff1d4278060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d4271020"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff1d42788b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff1d426ba90"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff1d4271020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d4255a30"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7ff1d4264210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff1d4271870"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff1d4271870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff1d4254340"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff1d4267e10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff1d5438020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff1d5438020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff1d53fc0f0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d42504c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d425a570"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d425a570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d548d4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d424fa90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d4259c10"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d4259c10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d548a280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d424eda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d4257020"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d4257020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d5489ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d548d4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff1d5c6a6c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d548a280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7ff1d5c68020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d5489ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7ff1d5c5e570"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d548d4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff1d5c6a6c0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d548a280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7ff1d5c65be0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d5489ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7ff1d5c5c1f0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d548d4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff1d5c6a6c0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d548a280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7ff1d5c630c0"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d5489ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7ff1d5c5b020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d548d4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff1d5c6a6c0"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d548a280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7ff1d5c625a0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d5489ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7ff1d5c5bda0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d548d4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff1d5c6a6c0"/></to>
    </wire>
    <wire loc="79:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d548a280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7ff1d5c61a50"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d5489ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7ff1d5c5ab80"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d548d4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff1d5c6a6c0"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d548a280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7ff1d5c5f020"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d5489ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7ff1d5c59a20"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7ff1d53f9540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ff1d542f020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ff1d542f020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff1d542a0a0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d541b2c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff1d5c6a6c0"/></to>
    </wire>
    <wire loc="73:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7ff1d53ab090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d539a710"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7ff1d53aa390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d53951d0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7ff1d53b0c70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d53a4020"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7ff1d53a89b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d538cb60"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d53a32f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7ff1d591b810"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d539ede0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7ff1d58ee9a0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d5399930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7ff1d591d810"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d5394480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7ff1d5921900"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d538f020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7ff1d58e69a0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d538ade0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7ff1d58f09a0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d5385930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7ff1d58e89a0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7ff1d5370150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff1d5367a20"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff1d536ba20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7ff1d5242a70"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d53545d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7ff1d5c675a0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7ff1d53538f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7ff1d5c57a20"/></to>
    </wire>
    <wire loc="55:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d53527a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7ff1d58f09a0"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7ff1d5250610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7ff1d53438a0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7ff1d53438a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7ff1d532f8a0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7ff1d5241610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7ff1d53458f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7ff1d53458f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7ff1d5335810"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7ff1d5338a30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7ff1d5325a30"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7ff1d53408a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7ff1d532c8a0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7ff1d533e8a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7ff1d532a8a0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7ff1d53498a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7ff1d53318a0"/></to>
    </wire>
    <wire loc="80:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7ff1d533a8a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7ff1d53278a0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7ff1d53428a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7ff1d532e8a0"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7ff1d5337a30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7ff1d5324a30"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7ff1d533c8a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7ff1d53298a0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7ff1d53448a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7ff1d53308a0"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7ff1d5339a30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7ff1d5326a30"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7ff1d53418a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7ff1d532d8a0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7ff1d533f8a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7ff1d532b8a0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7ff1d534a8a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7ff1d53328a0"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7ff1d533b8a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7ff1d53288a0"/></to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff1d4dfd160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d4def880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff1d4de70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff1d4dee0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff1d4ddb500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff1d4ddd500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff1d4dfb490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff1d4de3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff1d4dde500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff1d4de9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff1d4dea0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d4dffa90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d5201680"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d5201680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d51fb920"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff1d4df8e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff1d4df7490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff1d4de2c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff1d4df7be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff1d4ddece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff1d4de30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff1d4df2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff1d4de40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff1d4de7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff1d4de4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff1d4ddcce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff1d4dddce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff1d4dea880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff1d4de50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff1d4de0ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff1d4dec880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff1d4ddbce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff1d5200630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff1d4dfe480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff1d4df5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff1d4df1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff1d4de80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff1d4de8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d4def0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff1d4df62f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff1d4df5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff1d4df87b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff1d4de1500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff1d4ddc500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff1d4de90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff1d4de5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff1d4dfde00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff1d4deb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff1d4df6940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff1d4deb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff1d4de20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff1d4dda9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff1d5200630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7ff1d5200630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff1d51f7bb0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51f4020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51f4db0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d5204960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d51f8810"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51f3ba0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7ff1d51ef020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff1d5187770"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff1d5187770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff1d5183280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ff1d51f2400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d5166c40"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d5166c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d4175c30"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ff1d51f0080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ff1d51658f0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ff1d51658f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ff1d41710c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ff1d51e7680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ff1d4e26020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ff1d4e26020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ff1d41702b0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff1d51efdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff1d5960380"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7ff1d51e2120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff1d5183280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff1d517eb70"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ff1d41702b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ff1d50fc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ff1d41710c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ff1d5100dd0"/></to>
    </wire>
    <wire loc="105:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d4175c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d5106a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff1d41728f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff1d41662c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff1d41662c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff1d4f8b8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ff1d5100dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ff1d5084440"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7ff1d41716d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7ff1d50ff480"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7ff1d50ff480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7ff1d5084a50"/></to>
    </wire>
    <wire loc="111:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff1d50fa600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff1d4170a50"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d4158760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d51005e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7ff1d50fb370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d4167640"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d4167640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d4f8c5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff1d50f56a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff1d4161c10"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff1d4161c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ff1d4f90a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d51005e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d5085c40"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ff1d50fc510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ff1d5082700"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d5106a20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d5086e80"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff1d5081e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff1d50fa600"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7ff1d5081060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7ff1d50fb370"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff1d507cde0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff1d50f56a0"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7ff1d5080490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff1d5074860"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff1d5074860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7ff1d5067020"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff1d507b5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff1d5960380"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7ff1d507ac50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff1d506a8a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff1d5062750"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff1d506d3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ff1d5063dc0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7ff1d5034700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7ff1d58bfcc0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7ff1d5032670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7ff1d58bbcc0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7ff1d5030670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7ff1d58b9cc0"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7ff1d502e670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7ff1d58b2cc0"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7ff1d502c670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7ff1d58b4cc0"/></to>
    </wire>
    <wire loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7ff1d50395b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7ff1d4ee3430"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff1d415f440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff1d4f8d9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff1d415fa50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff1d4eef880"/></to>
    </wire>
    <wire loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff1d4eef880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7ff1d4ee3430"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff1d41652b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff1d5074860"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff1d4166a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff1d4f89130"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff1d4f89130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff1d4ef6060"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d4f88020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d4158760"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff1d4f8b8a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff1d4ef8bf0"/></to>
    </wire>
    <wire loc="106:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff1d4ef8bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff1d40ea850"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7ff1d4f90a80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ff1d4f845c0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d4f8c5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d4ef9e60"/></to>
    </wire>
    <wire loc="105:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d4ef9e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d40eb970"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff1d4f8d9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff1d4f73020"/></to>
    </wire>
    <wire loc="108:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff1d4ef6060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff1d40e9c30"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d4ef6930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d4f88020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff1d4f714b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff1d4ef6060"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7ff1d4f73690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff1d506d3b0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7ff1d4f73e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff1d506a8a0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff1d4ef7400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff1d40e9020"/></to>
    </wire>
    <wire loc="109:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d40e8590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d4ef6930"/></to>
    </wire>
    <wire loc="111:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7ff1d40e8d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7ff1d40ee750"/></to>
    </wire>
    <wire loc="75:../../../..//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7ff1d40e5020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7ff1d4edb250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7ff1d5067020"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7ff1d4ed7d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7ff1d58bfcc0"/></to>
    </wire>
    <wire loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7ff1d4ed5cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7ff1d58b9cc0"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff1d4dc1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff1d4dcbda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff1d4dc4b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d4dbe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff1d4db7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff1d4dbee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff1d4daa2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff1d4dad2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff1d4dc9120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff1d4db2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff1d4dae2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff1d4dc3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d4dc2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff1d4db8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff1d4dbbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff1d4dbd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d4dcc760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d5201680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff1d4dc8aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff1d4dc7120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff1d4db1a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff1d4dc7870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff1d4daead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff1d4dc9dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff1d4db4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff1d4dc2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d4dc3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff1d4dcb750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff1d4db5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff1d4db6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff1d4db4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff1d4dacad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff1d4dadad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff1d4dba670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff1d4db6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff1d4dafad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff1d4dbc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff1d4daaad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff1d5200630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff1d4dcb100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff1d4dc4370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff1d4dc1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff1d4db8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff1d4dbde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff1d4db7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff1d4dbf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff1d4dca450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d4dbfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff1d4dc5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff1d4dc5cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff1d4daf2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff1d4db0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff1d4dc8450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff1d4db02f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff1d4dac2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff1d4dbae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff1d4db5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff1d4dcaaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff1d4dc9770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff1d4dbce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff1d4dc5670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff1d4dbb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff1d4db2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff1d4da97a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff1d5200630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff1d4d94c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff1d4d9fda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff1d4d98b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d4d92670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff1d4d8be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff1d4d92e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff1d4d7e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff1d4d802f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff1d4d9c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff1d4d86670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff1d4d812f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff1d4d96c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d4d95c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff1d4d8c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff1d4d8ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff1d4d91670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d4da0760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d5201680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff1d4d9baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff1d4d9a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff1d4d85a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff1d4d9a870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff1d4d81ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff1d4d9cdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff1d4d87e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff1d4d95480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d4d96480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff1d4d9f750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff1d4d88e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff1d4d89670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff1d4d87670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff1d4d7fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff1d4d80ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff1d4d8d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff1d4d89e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff1d4d83ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff1d4d8f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff1d4d7ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff1d5200630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff1d4d9f100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff1d4d98370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff1d4d94480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff1d4d8ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff1d4d91e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff1d4d8b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff1d4d93670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff1d4d9e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d4d93e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff1d4d99020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff1d4d99cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff1d4d832f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff1d4d84ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff1d4d9b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff1d4d842f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff1d4d7f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff1d4d8de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff1d4d88670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff1d4d9eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff1d4d9c770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff1d4d8fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff1d4d99670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff1d4d8e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff1d4d86e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff1d4d7d7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff1d5200630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7ff1d4d55880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7ff1d4d4a020"/></to>
    </wire>
    <wire loc="20:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7ff1d4d4a020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7ff1d4d45140"/></to>
    </wire>
    <wire loc="16:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7ff1d4d40bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7ff1d4d49c50"/></to>
    </wire>
    <wire loc="21:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7ff1d4d49c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7ff1d4d2c150"/></to>
    </wire>
    <wire loc="17:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7ff1d4d44530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff1d4ce3a20"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7ff1d4d30540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7ff1d4d31590"/></to>
    </wire>
    <wire loc="11:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7ff1d4d31590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d4ce19e0"/></to>
    </wire>
    <wire loc="18:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7ff1d4d27950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7ff1d4d2eca0"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7ff1d4d2eca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7ff1d4d04a90"/></to>
    </wire>
    <wire loc="19:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7ff1d4d2c9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7ff1d4d30540"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff1d4cf4020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7ff1d4cee530"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7ff1d4cee530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff1d4ceae50"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d4ce7020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7ff1d5c8b060"/></to>
    </wire>
    <wire loc="9:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d4cdfc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7ff1d590a810"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7ff1d4cc5990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7ff1d4cba900"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7ff1d4cc7150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7ff1d4cb90f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7ff1d4cb9ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff1d54b1220"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7ff1d4ca5500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7ff1d53b0c70"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ff1d4ca4820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ff1d53ade60"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7ff1d4ca3b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7ff1d53a89b0"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7ff1d4cac880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7ff1d5370150"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ff1d4ca1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d4c06c30"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d4c06c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d5204960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d4ca1d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d4c058f0"/></to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d4c058f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d5201680"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff1d4c9e6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7ff1d4c042f0"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff1d4c042f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff1d4c9ede0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7ff1d4c03cc0"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff1d4c03cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff1d4c9d530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7ff1d4c01370"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff1d4c01370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff1d4c9dc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff1d4c00d00"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff1d4c00d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d4c9fe00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d4bfac60"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d4bfac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff1d4ca0780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7ff1d4be27a0"/></to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff1d4be27a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff1d5200630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff1d4c9f550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff1d4be62f0"/></to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff1d4be62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d4c9c3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d4bfb480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d4bfb480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d4c9b5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d4bf8e50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d4bf8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d4c9a020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d4bf7670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d4bf7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff1d4c9ce80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7ff1d4bfe7b0"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff1d4bfe7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff1d4c999c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7ff1d4be4ad0"/></to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff1d4be4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff1d4c9a890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7ff1d4be52f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff1d4be52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff1d4c99130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7ff1d4be5ad0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff1d4be5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7ff1d4c93d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7ff1d4bd6df0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7ff1d4bd6df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7ff1d4bcc550"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4cb5d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4b4e670"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4cb2bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4b4a0c0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ff1d4cb1950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff1d4b49550"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff1d4ca6be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff1d4b41480"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff1d4b41480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff1d4b338b0"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff1d4c976c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff1d5960380"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff1d4bf9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff1d4c03020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff1d4bfdc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff1d4bf0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff1d4bf7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff1d4be32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff1d4beb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff1d4bfbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff1d4bf1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff1d4bf3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff1d4bf6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff1d4bff370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff1d4beaa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff1d4bffac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff1d4be6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff1d4c00060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff1d4bece50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff1d4bfa480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff1d4c04940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff1d4bede50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff1d4bee670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff1d4bec670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff1d4bf2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff1d4beee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff1d4be8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff1d4bf4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff1d4be3ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff1d5200630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff1d4bfd490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff1d4bf9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff1d4bf1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff1d4bf6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff1d4bf0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff1d4bf8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff1d4c03670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff1d4bfe160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff1d4bfee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff1d4be82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff1d4be9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff1d4c006b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff1d4be92f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff1d4be42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff1d4bf2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff1d4bed670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff1d4c019c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff1d4bf4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff1d4bf3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff1d4bebe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7ff1d4bd0020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7ff1d4bcb7c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff1d4bb6150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff1d5960380"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ff1d4bca020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ff1d53ade60"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7ff1d4bc9380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7ff1d53ab090"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7ff1d4bc86b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7ff1d53aa390"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff1d4bc7a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff1d536ba20"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ff1d4bc66e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d49ecd00"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff1d49ecd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff1d5204960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff1d4bc5530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7ff1d49c8ad0"/></to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff1d49c8ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff1d5200630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff1d4bc4ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff1d49e66b0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff1d49e66b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff1d4bc43a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7ff1d49e4370"/></to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff1d49e4370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4bc3330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4b4e670"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4bc21e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4b4a0c0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ff1d4bc0d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff1d4b49550"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7ff1d4bc2b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7ff1d556fb80"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d4bbb3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d49dde50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d49dde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d4bbbcb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d49dc670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d49dc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff1d4bbcb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7ff1d49e3160"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff1d49e3160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff1d4bb86d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7ff1d49c82f0"/></to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff1d49c82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff1d4bb9590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7ff1d49cb2f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff1d49cb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff1d4bb9e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7ff1d49cbad0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff1d49cbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff1d4bb7020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff1d49ccad0"/></to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff1d49ccad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff1d4bb78b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7ff1d49e9300"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff1d49e9300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7ff1d4baa9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff1d4ad37c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff1d5438020"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7ff1d4b2d820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ff1d4adc4e0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7ff1d4b2fb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ff1d4ac7610"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7ff1d4ac7610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ff1d4a0e2b0"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7ff1d4acc020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d4a1c150"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff1d4acd130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d4a98020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff1d4a98020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d3fdf9d0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7ff1d4a17640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff1d4a6c2f0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff1d4a66850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff1d4a98870"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff1d4a98870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff1d3fd85f0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff1d4a0d690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff1d4ab7b70"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff1d4ab7b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff1d4aaf610"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff1d3fdf9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d3fc2360"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7ff1d3fd2d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff1d3fde260"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff1d3fde260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff1d3fc2bf0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff1d3fd59b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff1d4ab7b70"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d3fbfdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d3fc8020"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d3fc8020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d548d4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d3fbd440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d3fc7760"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d3fc7760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d548a280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d3fbb760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d3fc6a80"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d3fc6a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d5489ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7ff1d4aacb90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ff1d542f020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7ff1d4a639c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7ff1d4a11a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff1d4a048c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff1d49fb2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7ff1d49fb2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff1d4acc020"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff1d49dfc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff1d49e8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff1d49e2c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff1d49d5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff1d49dce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff1d49e7370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff1d49d0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff1d49cc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff1d49e1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d49e0c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff1d49d6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff1d49d9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff1d49db670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d49ea970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d5201680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff1d49e6d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff1d49cfa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff1d49e4ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff1d49e6060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff1d49d2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff1d49e0480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d49e1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff1d49e9950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff1d49d3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff1d49d4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff1d49d2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff1d49c9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff1d49d7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff1d49d4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff1d49cdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff1d49da670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff1d49e2490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff1d49df480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff1d49d6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff1d49dbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff1d49d5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff1d49dd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff1d49e8670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff1d49e3e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff1d49cd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff1d49cead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff1d49ce2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff1d49c92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff1d49d7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff1d49d3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff1d49e8cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff1d49e79c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff1d49dae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff1d49e37b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff1d49d9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff1d49d0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff1d49c77a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff1d5200630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7ff1d499b920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7ff1d4998940"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff1d49a29a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff1d4998080"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff1d4977e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ff1d497b020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff1d4976ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff1d4978690"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff1d4978690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff1d5183280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ff1d49758f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7ff1d499ea20"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4974170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4b4a0c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7ff1d495d200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7ff1d4959570"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff1d49573f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7ff1d495d950"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4957a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4b4a0c0"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff1d491ed70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ff1d49286b0"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff1d491db10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7ff1d4928020"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d491c2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4b4e670"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d491b170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4b4a0c0"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7ff1d491bb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7ff1d48ce410"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7ff1d48efdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7ff1d48c1800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff1d48bd580"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff1d48bd580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff1d5183280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff1d48a91c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff1d55fc670"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff1d47dcc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff1d56562d0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff1d47d6400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff1d56562d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../..//tos/system/MainC.nc">
      <documentation loc="45:../../../..//tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../..//tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../..//tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../..//tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../..//tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../..//tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../..//tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../..//tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../..//tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../..//tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="RelayC" loc="4:RelayC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../..//tos/system/LedsC.nc">
      <documentation loc="34:../../../..//tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../..//tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../..//tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Relay_AppC.AMSenderC" loc="47(Relay_AppC.AMSenderC):../../../..//tos/system/AMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Relay_AppC.AMSenderC.SenderC" loc="47(Relay_AppC.AMSenderC.SenderC):../../../..//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Relay_AppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(Relay_AppC.AMSenderC.SenderC.AMQueueEntryP):../../../..//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../..//tos/system/AMQueueP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../..//tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../..//tos/system/StateImplC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../..//tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../..//tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../..//tos/system/ArbiterP.nc">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../..//tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../..//tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../..//tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../..//tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b26d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff1d5b25180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b26d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff1d5b25180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../..//tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../..//tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../..//tos/system/RandomC.nc">
      <documentation loc="33:../../../..//tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../..//tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../..//tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Relay_AppC.R_A" loc="43(Relay_AppC.R_A):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Relay_AppC.R_B" loc="43(Relay_AppC.R_B):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Relay_AppC.Timer1" loc="44(Relay_AppC.Timer1):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7ff1d5c4d890" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7ff1d5c4dc30" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7ff1d5c4b020" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7ff1d5c4b3a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7ff1d5c4b720" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7ff1d5c4ba90" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7ff1d5c4be20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7ff1d5c4a200" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7ff1d5c4a5d0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7ff1d5c0fe70" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7ff1d5c0c270" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7ff1d5888190" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7ff1d5888540" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7ff1d58888f0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7ff1d5888ca0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7ff1d5886060" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../..//tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7ff1d56f2da0" loc="47:../../../..//tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../..//tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7ff1d56dee20" loc="47:../../../..//tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../..//tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7ff1d56cfac0" loc="43:../../../..//tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../..//tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7ff1d56acc80" loc="45:../../../..//tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7ff1d546b9d0" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7ff1d546b9d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7ff1d5429120" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7ff1d5429120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../..//tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7ff1d5418a50" loc="55:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7ff1d5418a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7ff1d5415290" loc="56:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7ff1d5415290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7ff1d5415680" loc="57:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7ff1d5415680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7ff1d5415e60" loc="58:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7ff1d5415e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7ff1d5413260" loc="59:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7ff1d5413a60" loc="60:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7ff1d5413a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../..//tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7ff1d5439a20" loc="52:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7ff1d5439a20"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7ff1d53f2290" loc="53:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7ff1d53f2290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7ff1d53f2680" loc="54:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7ff1d53f2680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7ff1d53f2e60" loc="55:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7ff1d53f2e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7ff1d53f1260" loc="56:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../..//tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../..//tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7ff1d4f6c020" loc="89:../../../..//tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7ff1d4f5f0d0" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../..//tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7ff1d4f44800" loc="52:../../../..//tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff1d4d02020" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff1d4d02020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff1d4d027b0" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d4d027b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff1d4adea60" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff1d4adea60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff1d4a93cc0" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff1d4a93cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff1d4a5d230" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff1d4a5d230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7ff1d4a5d560" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../..//tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../..//tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7ff1d47e1390" loc="43:../../../..//tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7ff1d5cfc8d0" loc="58:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5cfc8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5cfcc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ff1d5cfd3f0" loc="57:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ff1d5cfd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ff1d5cfd770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d5cff880" loc="42:../../../..//tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d5cff880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5cffc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7ff1d5cf68a0" loc="6:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7ff1d5cf68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5cf6c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d5cfaa70" loc="4:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d5cfaa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5cfadf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7ff1d5cf61c0" loc="5:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7ff1d5cf61c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5cf6540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7ff1d5cf5020" loc="7:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7ff1d5cf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5cf53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d5cf9c80" loc="2:../../../..//tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d5cf9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5cef0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7ff1d5cd8020" loc="39:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7ff1d5cd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5cd83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7ff1d5cce6c0" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff1d5cce6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7ff1d5cd4660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7ff1d5ccebd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7ff1d5cced60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7ff1d5cd4020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7ff1d5ccea40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7ff1d5cd41b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7ff1d5cd4340"/>
        <function-ref name="initClocks" scoped="" ref="0x7ff1d5cd44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d5cd5020" loc="39:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d5cd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5cd53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7ff1d5cbe3d0" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff1d5cbe3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7ff1d5cbd340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7ff1d5cbe8e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7ff1d5cbea70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7ff1d5cbec00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7ff1d5cbe750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7ff1d5cbed90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7ff1d5cbd020"/>
        <function-ref name="initClocks" scoped="" ref="0x7ff1d5cbd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7ff1d5cbd680" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7ff1d5cbd680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7ff1d5cbda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d5cbfcb0" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d5cbfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5cbe0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7ff1d5c7a5a0" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7ff1d5c7a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5c7a920"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5c7aab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c7ac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5c7add0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5c79020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c791b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5c79340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5c794d0"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5c79660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7ff1d5c68020" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7ff1d5c68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5c683a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5c68530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c686c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5c68850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5c689e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c68b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5c68d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5c67020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5c671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7ff1d5c71700" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7ff1d5c71700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c71a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5c71c10"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5c71da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c70020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c701b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5c70340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7ff1d5c55a20" loc="68:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7ff1d5c55a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c55da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5c54020"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5c541b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c54340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c544d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5c54660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7ff1d5c78aa0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7ff1d5c78aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c78e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5c77020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5c771b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5c77340"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c774d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7ff1d5c5b020" loc="61:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7ff1d5c5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c5b3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5c5b530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5c5b6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5c5b850"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c5b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7ff1d5c52a20" loc="71:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7ff1d5c52a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c52da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5c51020"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5c511b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c51340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c514d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5c51660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7ff1d5c625a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7ff1d5c625a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5c62920"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5c62ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c62c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5c62dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5c61020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c611b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5c61340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5c614d0"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5c61660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7ff1d5c7bb10" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7ff1d5c7bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5c82020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5c821b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c82340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5c824d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5c82660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c827f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5c82980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5c82b10"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5c82ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7ff1d5c57a20" loc="66:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7ff1d5c57a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c57da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5c56020"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5c561b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c56340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c564d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5c56660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7ff1d5c5d3e0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7ff1d5c5d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c5d760"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5c5d8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5c5da80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5c5dc10"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c5dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7ff1d5c675a0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7ff1d5c675a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5c67a20"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5c67bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c67d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5c65020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5c651b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c65340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5c654d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5c65660"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5c657f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7ff1d5c70700" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7ff1d5c70700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c70a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5c70c10"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5c70da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c6a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c6a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5c6a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7ff1d5c54a20" loc="69:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7ff1d5c54a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c54da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5c53020"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5c531b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c53340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c534d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5c53660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7ff1d5c65be0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7ff1d5c65be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5c64020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5c641b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c64340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5c644d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5c64660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c647f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5c64980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5c64b10"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5c64ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7ff1d5c77890" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7ff1d5c77890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c77c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5c77da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5c72020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5c721b0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c72340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7ff1d5c8b060" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7ff1d5c8b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5c8b3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5c8b570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c8b700"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5c8b890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c8ba20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c8bbb0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5c8bd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c8a020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5c8a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5c8a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5c8a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7ff1d5c5bda0" loc="62:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7ff1d5c5bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c5a180"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5c5a310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5c5a4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5c5a630"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c5a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7ff1d5c810c0" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7ff1d5c810c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5c81440"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5c815d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c81760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5c818f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5c81a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c81c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5c81da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5c7a020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5c7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7ff1d5c61a50" loc="56:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7ff1d5c61a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5c61dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5c60020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c601b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5c60340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5c604d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c60660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5c607f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5c60980"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5c60b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7ff1d5c6b6d0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7ff1d5c6b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c6ba50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5c6bbe0"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5c6bd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c71020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c711b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5c71340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7ff1d5c56a20" loc="67:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7ff1d5c56a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c56da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5c55020"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5c551b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c55340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c554d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5c55660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7ff1d5c73cf0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7ff1d5c73cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c780a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5c78230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5c783c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5c78550"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c786e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7ff1d5c5c1f0" loc="60:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7ff1d5c5c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c5c570"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5c5c700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5c5c890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5c5ca20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c5cbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7ff1d5c53a20" loc="70:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7ff1d5c53a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c53da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5c52020"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5c521b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c52340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c524d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5c52660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7ff1d5c630c0" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7ff1d5c630c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5c63440"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5c635d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c63760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5c638f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5c63a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c63c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5c63da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5c62020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5c621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7ff1d5c6a6c0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7ff1d5c6a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5c6aa40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5c6abd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c6ad60"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5c69020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c691b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c69340"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5c694d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c69660"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5c697f0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5c69980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5c69b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7ff1d5c5ab80" loc="63:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7ff1d5c5ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c59020"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5c591b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5c59340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5c594d0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c59660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7ff1d5c58a20" loc="65:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7ff1d5c58a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c58da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5c57020"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5c571b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c57340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c574d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5c57660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7ff1d5c59a20" loc="64:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7ff1d5c59a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c58020"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5c581b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5c58340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5c584d0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c58660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7ff1d5c5e570" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7ff1d5c5e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5c5e8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5c5ea80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5c5ec10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5c5eda0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7ff1d5c5f020" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7ff1d5c5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5c5f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5c5f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c5f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5c5f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5c5f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c5fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5c5fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5c5e020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5c5e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7ff1d5c19aa0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7ff1d5c19aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c19e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7ff1d5c19450" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7ff1d5c19450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c197d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7ff1d5c17120" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7ff1d5c17120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c174a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7ff1d5c1ad80" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff1d5c1ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c19180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff1d5c1b540" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d5c1b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5c1b8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5c1ba50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c1bbe0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5c1bd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c1a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c1a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5c1a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c1a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5c1a660"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5c1a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5c1a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7ff1d5c11940" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7ff1d5c11940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c11cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7ff1d5c112f0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7ff1d5c112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c11670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7ff1d5c10020" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7ff1d5c10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7ff1d5c12bf0" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff1d5c12bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5c11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff1d5c133e0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d5c133e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5c13760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5c138f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5c13a80"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5c13c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5c13da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5c12020"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5c121b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5c12340"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5c124d0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5c12660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5c127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff1d5bc5a90" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff1d5bc5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5bc5e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5bc4020"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5bc41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5bc4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5bc44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5bc4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff1d5c0d9d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff1d5c0d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5c0dd50"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5bc6020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5bc61b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5bc6340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5bc64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5bc6660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5bc67f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5bc6980"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5bc6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff1d5bc2020" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff1d5bc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5bc23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff1d5bc6de0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff1d5bc6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5bc5180"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5bc5310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5bc54a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5bc5630"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5bc57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff1d5bc4930" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d5bc4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5bc4cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5bc4e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5bc3020"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5bc31b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5bc3340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5bc34d0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5bc3660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5bc37f0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5bc3980"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5bc3b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5bc3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff1d5bbd160" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff1d5bbd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5bbd4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5bbd670"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5bbd800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5bbd990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5bbdb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5bbdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff1d5bbf020" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff1d5bbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5bbf3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5bbf530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5bbf6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5bbf850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5bbf9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5bbfb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5bbfd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5bbe020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5bbe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff1d5bba7a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff1d5bba7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5bbab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff1d5bbe480" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff1d5bbe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5bbe800"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5bbe990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5bbeb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5bbecb0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5bbee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff1d5bbb020" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d5bbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5bbb3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5bbb530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5bbb6c0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5bbb850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5bbb9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5bbbb70"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5bbbd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5bba020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5bba1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5bba340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5bba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff1d5bb57a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff1d5bb57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5bb5b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5bb5cb0"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5bb5e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5bb4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5bb41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5bb4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff1d5bb76d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff1d5bb76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5bb7a50"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5bb7be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5bb7d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5bb6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5bb61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5bb6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5bb64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5bb6660"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5bb67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff1d5bb3c50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff1d5bb3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5bb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff1d5bb6ac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff1d5bb6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5bb6e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5bb5020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5bb51b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5bb5340"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5bb54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff1d5bb4610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d5bb4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5bb4990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5bb4b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5bb4cb0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5bb4e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5bb3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5bb31b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5bb3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5bb34d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5bb3660"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5bb37f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5bb3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff1d5baecb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff1d5baecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5bad0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5bad230"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5bad3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5bad550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5bad6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5bad870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff1d5bb0b30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff1d5bb0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5baf020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5baf1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5baf340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5baf4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5baf660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5baf7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5baf980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5bafb10"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5bafca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff1d5baa2f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff1d5baa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5baa670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff1d5bae020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff1d5bae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5bae3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5bae530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5bae6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5bae850"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5bae9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff1d5badb40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d5badb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5bab020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5bab1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5bab340"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5bab4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5bab660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5bab7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5bab980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5babb10"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5babca0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5babe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5baa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff1d5ba52f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff1d5ba52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5ba5670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5ba5800"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5ba5990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5ba5b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5ba5cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5ba5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff1d5ba7220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff1d5ba7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5ba75a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5ba7730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5ba78c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5ba7a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5ba7be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5ba7d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5ba6020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5ba61b0"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5ba6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff1d5ba37a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff1d5ba37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5ba3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff1d5ba6610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff1d5ba6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5ba6990"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5ba6b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5ba6cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5ba6e40"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5ba5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff1d5ba4160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d5ba4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5ba44e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5ba4670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5ba4800"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5ba4990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5ba4b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5ba4cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5ba4e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5ba3020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5ba31b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5ba3340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5ba34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff1d5b9e7a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff1d5b9e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5b9eb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5b9ecb0"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5b9ee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5b9d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5b9d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5b9d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff1d5ba06d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff1d5ba06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5ba0a50"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5ba0be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5ba0d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5b9f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5b9f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5b9f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5b9f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5b9f660"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5b9f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff1d5b9bc50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff1d5b9bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff1d5b9fac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff1d5b9fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5b9fe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5b9e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5b9e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5b9e340"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b9e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff1d5b9d610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d5b9d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5b9d990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5b9db20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5b9dcb0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5b9de40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5b9b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5b9b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5b9b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5b9b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5b9b660"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5b9b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5b9b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff1d5b96cb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff1d5b96cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5b950a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5b95230"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5b953c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5b95550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5b956e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5b95870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff1d5b98b30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff1d5b98b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5b97020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5b971b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5b97340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5b974d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5b97660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5b977f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5b97980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5b97b10"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5b97ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff1d5b932f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff1d5b932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b93670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff1d5b96020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff1d5b96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5b963a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5b96530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5b966c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5b96850"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b969e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff1d5b95b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d5b95b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5b94020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5b941b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5b94340"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5b944d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5b94660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5b947f0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5b94980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5b94b10"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5b94ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5b94e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5b93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff1d5b8e2f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff1d5b8e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5b8e670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5b8e800"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5b8e990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5b8eb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5b8ecb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5b8ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff1d5b90220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff1d5b90220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5b905a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5b90730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5b908c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5b90a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5b90be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5b90d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5b8f020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5b8f1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5b8f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff1d5b8c7a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff1d5b8c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b8cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff1d5b8f610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff1d5b8f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5b8f990"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5b8fb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5b8fcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5b8fe40"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b8e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff1d5b8d160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d5b8d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5b8d4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5b8d670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5b8d800"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5b8d990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5b8db20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5b8dcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5b8de40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5b8c020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5b8c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5b8c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5b8c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff1d5b867a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff1d5b867a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5b86b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5b86cb0"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5b86e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5b85020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5b851b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5b85340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff1d5b886d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff1d5b886d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5b88a50"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5b88be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5b88d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5b87020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5b871b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5b87340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5b874d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5b87660"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5b877f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff1d5b84c50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff1d5b84c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff1d5b87ac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff1d5b87ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5b87e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5b86020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5b861b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5b86340"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b864d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff1d5b85610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d5b85610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5b85990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5b85b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5b85cb0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5b85e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5b84020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5b841b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5b84340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5b844d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5b84660"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5b847f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5b84980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff1d5b7fcb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff1d5b7fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5b7e0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5b7e230"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5b7e3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5b7e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5b7e6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d5b7e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff1d5b81b30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff1d5b81b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5b80020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5b801b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5b80340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5b804d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5b80660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5b807f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5b80980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d5b80b10"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5b80ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff1d5b7c2f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff1d5b7c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b7c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff1d5b7f020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff1d5b7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5b7f3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d5b7f530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5b7f6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d5b7f850"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b7f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff1d5b7eb40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d5b7eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5b7d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5b7d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5b7d340"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5b7d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d5b7d660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5b7d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5b7d980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5b7db10"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5b7dca0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d5b7de30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d5b7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7ff1d5b75240" loc="7:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7ff1d5b75240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b755c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7ff1d5b79a90" loc="4:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7ff1d5b79a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b79e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7ff1d5b76260" loc="5:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7ff1d5b76260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b765e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7ff1d5b769f0" loc="6:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7ff1d5b769f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5b76d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7ff1d5e1b4c0" loc="55:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7ff1d5e1b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7ff1d5e1b840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7ff1d612f3b0" loc="51:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7ff1d612f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7ff1d612f730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7ff1d612f8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7ff1d612fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7ff1d5f57bc0" loc="52:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7ff1d5f57bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7ff1d6093020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7ff1d5cd6b40" loc="39:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff1d5cd6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7ff1d5b3eb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7ff1d5b3e1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7ff1d5b3e340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7ff1d5b3e4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7ff1d5b3e020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7ff1d5b3e660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7ff1d5b3e7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7ff1d5b3e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7ff1d5b32dc0" loc="60:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7ff1d5b32dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5b31180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ff1d5b3f590" loc="57:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ff1d5b3f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ff1d5b3f910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7ff1d5b326c0" loc="59:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7ff1d5b326c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5b32a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7ff1d5b3fc00" loc="58:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7ff1d5b3fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5b32020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ff1d5b321b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ff1d5b32340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7ff1d65f8410" loc="48:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d65f8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d65f8790"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d65f8920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7ff1d61983a0" loc="47:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7ff1d61983a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d6198720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ff1d61988b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ff1d6198a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7ff1d5d41040" loc="56:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7ff1d5d41040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d5d413c0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d5d41550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7ff1d5d3d490" loc="57:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7ff1d5d3d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7ff1d5d3d810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7ff1d5d3d9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7ff1d5d3db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7ff1d5d43140" loc="55:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7ff1d5d43140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5d434c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ff1d5d43650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ff1d5d437e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_A" ref="0x7ff1d5ab9220" loc="11:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_A" scoped="" ref="0x7ff1d5ab9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d5ab95a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7ff1d5aab140" loc="17:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7ff1d5aab140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff1d5aab4c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff1d5aab650"/>
        <function-ref name="start" scoped="" ref="0x7ff1d5aab7e0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d5aab970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7ff1d5b23c40" loc="8:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ff1d5b23c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ff1d5b22020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7ff1d5aaa020" loc="18:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff1d5aaa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5aaa3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff1d5aaa530"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d5aaa6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d5aaa850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff1d5aaa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7ff1d5abd8f0" loc="10:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff1d5abd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d5abdc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d5abde00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d5b16020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d5b161b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d5b16340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="assignFlowstoSlots" ref="0x7ff1d5a95080" loc="55:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7ff1d5a95080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d5a95400"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d5a95590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateSchedule" ref="0x7ff1d5a922a0" loc="58:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateSchedule" scoped="" ref="0x7ff1d5a922a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d5a92720"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d5a928b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7ff1d5ab09e0" loc="13:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7ff1d5ab09e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d5aad020"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5abb510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff1d5aae300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff1d5abbe10"/>
        <function-ref name="getdt" scoped="" ref="0x7ff1d5aad920"/>
        <function-ref name="gett0" scoped="" ref="0x7ff1d5aad4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d5abb990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff1d5aca670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff1d5aae910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff1d5acab40"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d5abb090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_B" ref="0x7ff1d5ab98e0" loc="12:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_B" scoped="" ref="0x7ff1d5ab98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d5ab9c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeFlow" ref="0x7ff1d5a96100" loc="54:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeFlow" scoped="" ref="0x7ff1d5a96100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d5a96480"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d5a96610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff1d5b17500" loc="7:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff1d5b17500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff1d5b17880"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff1d5b17a10"/>
        <function-ref name="led1On" scoped="" ref="0x7ff1d5b17ba0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff1d5b17d30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff1d5b23020"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5b231b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff1d5b23340"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff1d5b23980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5b234d0"/>
        <function-ref name="led0On" scoped="" ref="0x7ff1d5b23660"/>
        <function-ref name="led2On" scoped="" ref="0x7ff1d5b237f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeSchedule" ref="0x7ff1d5a94020" loc="56:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeSchedule" scoped="" ref="0x7ff1d5a94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d5a943a0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d5a94530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeCluster" ref="0x7ff1d5a91300" loc="59:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeCluster" scoped="" ref="0x7ff1d5a91300"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d5a91680"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d5a91810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PermutateCipher" ref="0x7ff1d5a93310" loc="57:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PermutateCipher" scoped="" ref="0x7ff1d5a93310"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d5a93690"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d5a93820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7ff1d5960380" loc="46:../../../..//tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff1d5960380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff1d5960700"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff1d5960890"/>
        <function-ref name="led1On" scoped="" ref="0x7ff1d5960a20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff1d5960bb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff1d5960d40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d595d020"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff1d595d1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff1d595d7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d595d340"/>
        <function-ref name="led0On" scoped="" ref="0x7ff1d595d4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7ff1d595d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7ff1d59513a0" loc="50:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7ff1d59513a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5951720"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d59518b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5951a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5951bd0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5951d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5957020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d59571b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5957340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d595c7c0" loc="46:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d595c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d595cb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7ff1d5957660" loc="51:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7ff1d5957660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d59579e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5957b70"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5957d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5956020"/>
        <function-ref name="get" scoped="" ref="0x7ff1d59561b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5956340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d59564d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5956660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7ff1d595cdc0" loc="47:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff1d595cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff1d5959180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff1d5959310"/>
        <function-ref name="led1On" scoped="" ref="0x7ff1d59594a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff1d5959630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff1d59597c0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5959950"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff1d5959ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff1d59581b0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5959c70"/>
        <function-ref name="led0On" scoped="" ref="0x7ff1d5959e00"/>
        <function-ref name="led2On" scoped="" ref="0x7ff1d5958020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7ff1d5956980" loc="52:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7ff1d5956980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5956d00"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5950020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d59501b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5950340"/>
        <function-ref name="get" scoped="" ref="0x7ff1d59504d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5950660"/>
        <function-ref name="set" scoped="" ref="0x7ff1d59507f0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5950980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7ff1d5934060" loc="41:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7ff1d5934060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d59343e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5934570"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5934700"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5934890"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5934a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5934bb0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5934d40"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5933020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7ff1d5933380" loc="42:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7ff1d5933380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5933700"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5933890"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5933a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5933bb0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5933d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5932020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d59321b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5932340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7ff1d5931920" loc="44:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d5931920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5931ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7ff1d59326a0" loc="43:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7ff1d59326a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5932a20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5932bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5932d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5931020"/>
        <function-ref name="get" scoped="" ref="0x7ff1d59311b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5931340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d59314d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5931660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7ff1d591b810" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7ff1d591b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d591bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d591bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d591a020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d591a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d591a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d591a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d591a660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d591a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d591a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d591ab10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d591aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d591ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5919020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d59192b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5919440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7ff1d5906810" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7ff1d5906810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5906b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5906d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5905020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d59051b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5905340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d59054d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5905660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d59057f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5905980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5905b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5905ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5905e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5904020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d59042b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5904440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7ff1d58bdca0" loc="145:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7ff1d58bdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58bc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58bc230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58bc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58bc550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58bc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58bc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58bca00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58bcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58bcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58bb020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58bb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58bb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58bb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58bb760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7ff1d5898cb0" loc="165:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7ff1d5898cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58970a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5897230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58973c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5897550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58976e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5897870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5897a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5897b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5897d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5896020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58961b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5896340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58964d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5896760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7ff1d58bbcc0" loc="146:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7ff1d58bbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58ba0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58ba230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58ba3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58ba550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58ba6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58ba870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58baa00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58bab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58bad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58b9020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58b91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58b9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58b94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58b9760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7ff1d5902810" loc="71:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7ff1d5902810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5902b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5902d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5901020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d59011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5901340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d59014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5901660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d59017f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5901980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5901b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5901ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5901e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5900020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d59002b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5900440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7ff1d58ee9a0" loc="84:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7ff1d58ee9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58eed20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58ed020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58ed1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58ed340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58ed4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58ed660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58ed7f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58ed980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58edb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58edca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58ede30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58ec020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58ec1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58ec440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58ec5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7ff1d58d99a0" loc="97:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7ff1d58d99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58d9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58d8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58d81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58d8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58d84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58d8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58d87f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58d8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58d8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58d8ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58d8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58d7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58d71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58d7440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58d75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7ff1d58c99a0" loc="108:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7ff1d58c99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58c9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58c8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58c81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58c8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58c84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58c8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58c87f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58c8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58c8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58c8ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58c8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58c7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58c71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58c7440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58c75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7ff1d58b4cc0" loc="149:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7ff1d58b4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58b30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58b3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58b33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58b3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58b36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58b3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58b3a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58b3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58b3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58b2020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58b21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58b2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58b24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58b2760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58b28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7ff1d58a4cb0" loc="159:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7ff1d58a4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58a30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58a3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58a33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58a3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58a36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58a3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58a3a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58a3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58a3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58a2020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58a21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58a2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58a24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58a2760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58a28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7ff1d5890cc0" loc="171:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7ff1d5890cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d588f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d588f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d588f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d588f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d588f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d588f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d588fa00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d588fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d588fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d588e020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d588e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d588e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d588e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d588e760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d588e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7ff1d5915810" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7ff1d5915810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5915b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5915d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5913020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d59131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5913340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d59134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5913660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d59137f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5913980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5913b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5913ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5913e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5912020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d59122b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5912440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7ff1d58b2cc0" loc="150:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7ff1d58b2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58b10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58b1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58b13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58b1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58b16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58b1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58b1a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58b1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58b1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58b0020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58b01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58b0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58b04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58b0760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58b08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7ff1d5910810" loc="61:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7ff1d5910810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5910b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5910d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d590f020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d590f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d590f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d590f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d590f660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d590f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d590f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d590fb10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d590fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d590fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d590e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d590e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d590e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7ff1d58fc810" loc="74:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7ff1d58fc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58fcb90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58fcd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58fb020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58fb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58fb340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58fb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58fb660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58fb7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58fb980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58fbb10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58fbca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58fbe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58fa020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58fa2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58fa440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7ff1d58e89a0" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7ff1d58e89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58e8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58e7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58e71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58e7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58e74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58e7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58e77f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58e7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58e7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58e7ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58e7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58e6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58e61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58e6440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58e65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7ff1d58d39a0" loc="100:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7ff1d58d39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58d3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58d2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58d21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58d2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58d24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58d2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58d27f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58d2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58d2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58d2ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58d2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58d1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58d11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58d1440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58d15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7ff1d58c39a0" loc="111:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7ff1d58c39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58c3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58c2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58c21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58c2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58c24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58c2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58c27f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58c2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58c2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58c2ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58c2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58c1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58c11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58c1440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58c15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7ff1d591f810" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7ff1d591f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d591fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d591fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d591e020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d591e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d591e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d591e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d591e660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d591e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d591e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d591eb10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d591eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d591ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d591d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d591d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d591d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7ff1d590a810" loc="64:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7ff1d590a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d590ac90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d590ae20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5909020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d59091b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5909340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d59094d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5909660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d59097f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5909980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5909b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5909ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5909e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5908020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d59082b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5908440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7ff1d58f6810" loc="77:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7ff1d58f6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58f6b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58f6d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58f5020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58f51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58f5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58f54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58f5660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58f57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58f5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58f5b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58f5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58f5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58f4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58f42b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58f4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7ff1d58bfcc0" loc="144:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7ff1d58bfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58be0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58be230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58be3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58be550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58be6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58be870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58bea00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58beb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58bed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58bd020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58bd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58bd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58bd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58bd760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7ff1d589ecb0" loc="162:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7ff1d589ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d589d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d589d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d589d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d589d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d589d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d589d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d589da00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d589db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d589dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d589c020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d589c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d589c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d589c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d589c760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d589c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7ff1d5892cb0" loc="169:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7ff1d5892cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58910a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5891230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58913c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5891550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58916e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5891870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5891a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5891b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5891d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5890020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58901b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5890340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58904d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5890760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58908f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7ff1d58aacc0" loc="155:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7ff1d58aacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58a90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58a9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58a93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58a9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58a96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58a9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58a9a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58a9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58a9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58a8020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58a81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58a8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58a84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58a8760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58a88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7ff1d58f2810" loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7ff1d58f2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58f2d90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58f1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58f11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58f1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58f14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58f1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58f17f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58f1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58f1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58f1ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58f1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58f0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58f01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58f0440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58f05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7ff1d58dd9a0" loc="95:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7ff1d58dd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58ddd20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58dc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58dc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58dc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58dc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58dc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58dc7f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58dc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58dcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58dcca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58dce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58db020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58db1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58db440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58db5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7ff1d58cd9a0" loc="106:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7ff1d58cd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58cdd20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58cc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58cc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58cc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58cc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58cc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58cc7f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58cc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58ccb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58ccca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58cce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58cb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58cb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58cb440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58cb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7ff1d589ccb0" loc="163:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7ff1d589ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d589b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d589b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d589b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d589b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d589b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d589b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d589ba00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d589bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d589bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d589a020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d589a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d589a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d589a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d589a760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d589a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7ff1d58b0cb0" loc="152:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7ff1d58b0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58af0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58af230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58af3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58af550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58af6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58af870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58afa00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58afb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58afd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58ae020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58ae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58ae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58ae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58ae760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58ae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7ff1d5919810" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7ff1d5919810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5919b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5919d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5918020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d59181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5918340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d59184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5918660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d59187f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5918980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5918b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5918ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5918e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5917020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d59172b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5917440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7ff1d5904810" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7ff1d5904810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5904b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5904d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5903020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d59031b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5903340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d59034d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5903660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d59037f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5903980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5903b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5903ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5903e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5902020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d59022b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5902440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7ff1d58d19a0" loc="104:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7ff1d58d19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58d1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58d0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58d01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58d0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58d04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58d0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58d07f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58d0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58d0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58d0ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58d0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58cf020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58cf1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58cf440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58cf5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7ff1d5900810" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7ff1d5900810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5900b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5900d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58ff020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58ff1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58ff340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58ff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58ff660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58ff7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58ff980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58ffb10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58ffca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58ffe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58fe020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58fe2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58fe440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7ff1d58ec9a0" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7ff1d58ec9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58ecd20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58eb020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58eb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58eb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58eb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58eb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58eb7f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58eb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58ebb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58ebca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58ebe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58ea020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58ea1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58ea440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58ea5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7ff1d58d79a0" loc="98:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7ff1d58d79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58d7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58d6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58d61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58d6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58d64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58d6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58d67f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58d6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58d6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58d6ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58d6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58d5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58d51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58d5440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58d55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7ff1d58c79a0" loc="109:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7ff1d58c79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58c7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58c6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58c61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58c6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58c64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58c6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58c67f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58c6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58c6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58c6ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58c6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58c5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58c51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58c5440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58c55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7ff1d58accc0" loc="154:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7ff1d58accc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58ab0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58ab230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58ab3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58ab550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58ab6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58ab870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58aba00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58abb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58abd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58aa020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58aa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58aa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58aa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58aa760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58aa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7ff1d5921900" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7ff1d5921900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5921c80"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5921e10"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d592d020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d592d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d592d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d592d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d592d660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d592d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d592d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d592db10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d592dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d592de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d592b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d592b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d592b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7ff1d590e810" loc="62:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7ff1d590e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d590eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d590ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d590d020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d590d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d590d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d590d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d590d660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d590d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d590d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d590db10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d590dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d590de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d590c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d590c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d590c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7ff1d58fa810" loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7ff1d58fa810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58fab90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58fad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58f9020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58f91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58f9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58f94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58f9660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58f97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58f9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58f9b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58f9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58f9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58f8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58f82b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58f8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7ff1d58e69a0" loc="88:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7ff1d58e69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58e6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58e4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58e41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58e4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58e44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58e4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58e47f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58e4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58e4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58e4ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58e4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58e3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58e31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58e3440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58e35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7ff1d58a8cc0" loc="156:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7ff1d58a8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58a70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58a7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58a73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58a7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58a76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58a7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58a7a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58a7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58a7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58a6020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58a61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58a6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58a64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58a6760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58a68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7ff1d58a2cb0" loc="160:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7ff1d58a2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58a10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58a1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58a13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58a1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58a16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58a1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58a1a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58a1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58a1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58a0020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58a01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58a0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58a04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58a0760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58a08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7ff1d5896cb0" loc="166:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7ff1d5896cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58950a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5895230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58953c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5895550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58956e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5895870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5895a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5895b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5895d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5894020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58941b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5894340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58944d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5894760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58948f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7ff1d58e19a0" loc="93:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7ff1d58e19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58e1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58e0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58e01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58e0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58e04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58e0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58e07f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58e0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58e0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58e0ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58e0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58df020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58df1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58df440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58df5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7ff1d58a6cc0" loc="157:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7ff1d58a6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58a50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58a5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58a53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58a5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58a56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58a5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58a5a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58a5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58a5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58a4020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58a41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58a4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58a44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58a4760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58a48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7ff1d591d810" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7ff1d591d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d591db90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d591dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d591c020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d591c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d591c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d591c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d591c660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d591c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d591c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d591cb10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d591cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d591ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d591b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d591b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d591b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7ff1d5908810" loc="65:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7ff1d5908810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5908b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5908d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5907020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d59071b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5907340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d59074d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5907660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d59077f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5907980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5907b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5907ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5907e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5906020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d59062b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5906440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7ff1d58f4810" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7ff1d58f4810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58f4b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58f4d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58f3020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58f31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58f3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58f34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58f3660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58f37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58f3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58f3b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58f3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58f3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58f2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58f22b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58f2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7ff1d58aecc0" loc="153:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7ff1d58aecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58ad0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58ad230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58ad3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58ad550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58ad6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58ad870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58ada00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58adb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58add20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58ac020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58ac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58ac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58ac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58ac760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58ac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7ff1d589acb0" loc="164:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7ff1d589acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58990a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5899230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58993c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5899550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58996e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5899870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5899a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5899b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5899d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5898020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58981b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5898340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58984d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5898760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58988f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7ff1d58f09a0" loc="83:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7ff1d58f09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58f0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58ef020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58ef1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58ef340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58ef4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58ef660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58ef7f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58ef980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58efb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58efca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58efe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58ee020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58ee1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58ee440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58ee5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7ff1d58db9a0" loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7ff1d58db9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58dbd20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58da020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58da1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58da340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58da4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58da660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58da7f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58da980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58dab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58daca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58dae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58d9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58d91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58d9440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58d95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7ff1d58cb9a0" loc="107:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7ff1d58cb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58cbd20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58ca020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58ca1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58ca340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58ca4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58ca660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58ca7f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58ca980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58cab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58caca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58cae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58c9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58c91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58c9440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58c95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7ff1d5917810" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7ff1d5917810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5917b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5917d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5916020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d59161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5916340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d59164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5916660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d59167f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5916980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5916b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5916ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5916e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5915020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d59152b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5915440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7ff1d58cf9a0" loc="105:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7ff1d58cf9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58cfd20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58ce020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58ce1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58ce340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58ce4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58ce660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58ce7f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58ce980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58ceb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58ceca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58cee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58cd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58cd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58cd440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58cd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7ff1d5912810" loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7ff1d5912810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5912b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5912d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5911020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d59111b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5911340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d59114d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5911660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d59117f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5911980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5911b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5911ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5911e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5910020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d59102b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5910440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7ff1d58fe810" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7ff1d58fe810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58feb90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58fed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58fd020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58fd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58fd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58fd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58fd660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58fd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58fd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58fdb10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58fdca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58fde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58fc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58fc2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58fc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7ff1d58ea9a0" loc="86:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7ff1d58ea9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58ead20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58e9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58e91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58e9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58e94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58e9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58e97f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58e9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58e9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58e9ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58e9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58e8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58e81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58e8440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58e85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7ff1d58d59a0" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7ff1d58d59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58d5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58d4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58d41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58d4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58d44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58d4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58d47f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58d4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58d4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58d4ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58d4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58d3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58d31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58d3440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58d35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7ff1d58c59a0" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7ff1d58c59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58c5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58c4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58c41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58c4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58c44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58c4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58c47f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58c4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58c4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58c4ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58c4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58c3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58c31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58c3440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58c35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7ff1d592b810" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7ff1d592b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d592bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d592bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5920020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d59201b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5920340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d59204d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5920660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d59207f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5920980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5920b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5920ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5920e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d591f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d591f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d591f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7ff1d590c810" loc="63:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7ff1d590c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d590cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d590cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d590b020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d590b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d590b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d590b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d590b660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d590b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d590b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d590bb10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d590bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d590be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d590a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d590a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d590a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7ff1d58f8810" loc="76:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7ff1d58f8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58f8b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58f8d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58f7020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58f71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58f7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58f74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58f7660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58f77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58f7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58f7b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58f7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58f7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58f6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58f62b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58f6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7ff1d58e39a0" loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7ff1d58e39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58e3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58e2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58e21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58e2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58e24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58e2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58e27f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58e2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58e2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58e2ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58e2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58e1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58e11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58e1440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58e15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7ff1d58b7ca0" loc="148:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7ff1d58b7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58b50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58b5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58b53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58b5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58b56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58b5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58b5a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58b5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58b5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58b4020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58b41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58b4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58b44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58b4760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58b48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7ff1d58a0cb0" loc="161:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7ff1d58a0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d589f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d589f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d589f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d589f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d589f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d589f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d589fa00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d589fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d589fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d589e020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d589e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d589e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d589e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d589e760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d589e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7ff1d58b9cc0" loc="147:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7ff1d58b9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58b80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58b8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58b83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58b8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58b86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58b8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58b8a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58b8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58b8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58b7020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58b71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58b7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58b74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58b7760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58b78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7ff1d58df9a0" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7ff1d58df9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58dfd20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58de020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58de1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58de340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58de4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58de660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58de7f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58de980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58deb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58deca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58dee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58dd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58dd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58dd440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58dd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7ff1d5894cb0" loc="168:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7ff1d5894cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58930a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5893230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58933c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5893550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58936e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5893870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5893a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5893b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5893d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5892020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58921b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5892340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58924d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5892760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58928f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7ff1d588ecc0" loc="172:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7ff1d588ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d588d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d588d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d588d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d588d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d588d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d588d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d588da00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d588db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d588dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d588c020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d588c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d588c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d588c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d588c760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d588c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7ff1d58c19f0" loc="143:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7ff1d58c19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58c01c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d58c0350"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58c04e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d58c0670"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58c0800"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58c0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58c0b20"/>
        <function-ref name="get" scoped="" ref="0x7ff1d58c0cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58c0e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d58bf020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58bf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d58bf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58bf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d58bf760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58bf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5889d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5889d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58610e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5861270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5861400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5861590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5861720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58618b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5861a40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5861bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5861d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5860020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58601b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5860340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58604d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5860760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58608f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d585d740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d585d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d585dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d585dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d585dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d585c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d585c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d585c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d585c4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d585c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d585c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d585c980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d585cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d585cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d585ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d585b120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d585b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5858100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5858100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5858480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5858610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58587a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5858930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5858ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5858c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5858de0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5857020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58571b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5857340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58574d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5857660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58577f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5857a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5857c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5854d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5854d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58530e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5853270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5853400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5853590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5853720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58538b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5853a40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5853bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5853d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5852020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58521b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5852340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58524d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5852760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58528f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d584f740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d584f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d584fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d584fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d584fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d584e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d584e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d584e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d584e4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d584e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d584e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d584e980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d584eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d584eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d584ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d584d120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d584d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d584a100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d584a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d584a480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d584a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d584a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d584a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d584aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d584ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d584ade0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5849020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58491b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5849340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58494d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5849660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58497f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5849a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5849c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5846d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5846d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58450e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5845270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5845400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5845590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5845720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58458b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5845a40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5845bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5845d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5844020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58441b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5844340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58444d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5844760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5841740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5841740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5841ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5841c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5841de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d583f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d583f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d583f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d583f4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d583f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d583f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d583f980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d583fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d583fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d583fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d583e120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d583e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d583b100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d583b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d583b480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d583b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d583b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d583b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d583bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d583bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d583bde0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d583a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d583a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d583a340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d583a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d583a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d583a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d583aa80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d583ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5837d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5837d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58360e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5836270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5836400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5836590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5836720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58368b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5836a40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5836bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5836d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5835020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58351b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5835340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58354d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5835760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58358f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5832740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5832740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5832ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5832c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5832de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5831020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58311b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5831340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58314d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5831660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58317f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5831980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5831b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5831ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5831e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5830120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d582d100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d582d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d582d480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d582d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d582d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d582d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d582dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d582dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d582dde0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d582c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d582c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d582c340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d582c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d582c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d582c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d582ca80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d582cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5829d80" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5829d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5828180"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5828310"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58284a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5828630"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58287c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5828950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5828ae0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5828c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5828e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5827020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58271b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5827340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58274d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5827760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58278f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5824740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5824740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5824ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5824c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5824de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5823020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58231b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5823340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58234d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5823660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58237f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5823980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5823b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5823ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5823e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5822120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58222b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d581f100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d581f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d581f480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d581f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d581f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d581f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d581fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d581fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d581fde0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d581e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d581e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d581e340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d581e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d581e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d581e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d581ea80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d581ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d581bd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d581bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d58190e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5819270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5819400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5819590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5819720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d58198b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5819a40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5819bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5819d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5818020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58181b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5818340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58184d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5818760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58188f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5815740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5815740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5815ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5815c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5815de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5814020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58141b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5814340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58144d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5814660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58147f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5814980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5814b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5814ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5814e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5813120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58132b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5810100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5810100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5810480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5810610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58107a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5810930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5810ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5810c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5810de0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d580f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d580f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d580f340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d580f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d580f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d580f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d580fa80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d580fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d580cd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d580cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d580b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d580b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d580b400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d580b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d580b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d580b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d580ba40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d580bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d580bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d580a020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d580a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d580a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d580a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d580a760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d580a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5807740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5807740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5807ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5807c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5807de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5806020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d58061b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5806340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d58064d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5806660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58067f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5806980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5806b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5806ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5806e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5805120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d58052b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5802100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5802100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5802480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5802610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d58027a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5802930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5802ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5802c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5802de0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5801020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d58011b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5801340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d58014d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5801660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d58017f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5801a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5801c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57fed10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57fed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57fd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57fd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57fd400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57fd590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57fd720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57fd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57fda40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57fdbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57fdd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57fc020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57fc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57fc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57fc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57fc760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57fc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57f9740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57f9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57f9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57f9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57f9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57f8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57f81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57f8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57f84d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57f8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57f87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57f8980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57f8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57f8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57f8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57f7120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57f72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57f3100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57f3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57f3480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57f3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57f37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57f3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57f3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57f3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57f3de0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57f2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57f21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57f2340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57f24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57f2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57f27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57f2a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57f2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57efe60" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57efe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57ee210"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57ee3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57ee530"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57ee6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57ee850"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57ee9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57eeb70"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57eed00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57ed020"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57ed1b0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57ed340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57ed4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57ed660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57ed8f0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57eda80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57ea9f0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57ea9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57ead70"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57e9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57e91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57e9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57e94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57e9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57e97f0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57e9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57e9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57e9ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57e9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57e8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57e81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57e8440"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57e85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57e5460" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57e5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57e57e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57e5970"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57e5b00"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57e5c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57e5e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57e4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57e41b0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57e4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57e44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57e4660"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57e47f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57e4980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57e4b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57e4da0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57e1e00" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57e1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57e01c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57e0350"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57e04e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57e0670"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57e0800"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57e0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57e0b20"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57e0cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57e0e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57df020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57df1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57df340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57df4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57df760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57df8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57dc740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57dc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57dcac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57dcc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57dcde0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57db020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57db1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57db340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57db4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57db660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57db7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57db980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57dbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57dbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57dbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57da120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57d7100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57d7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57d7480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57d7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57d77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57d7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57d7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57d7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57d7de0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57d6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57d61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57d6340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57d64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57d6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57d67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57d6a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57d6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57d3d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57d3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57d10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57d1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57d1400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57d1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57d1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57d18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57d1a40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57d1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57d1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57d0020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57d01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57d0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57d04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57d0760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57d08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57cd740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57cd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57cdac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57cdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57cdde0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57cc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57cc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57cc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57cc4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57cc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57cc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57cc980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57ccb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57ccca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57cce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57cb120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57cb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57c8100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57c8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57c8480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57c8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57c87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57c8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57c8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57c8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57c8de0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57c7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57c71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57c7340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57c74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57c7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57c77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57c7a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57c7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57c4d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57c4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57c30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57c3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57c3400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57c3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57c3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57c38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57c3a40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57c3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57c3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57c2020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57c21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57c2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57c24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57c2760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57c28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57bf740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57bf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57bfac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57bfc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57bfde0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57be020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57be1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57be340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57be4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57be660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57be7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57be980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57beb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57beca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57bee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57bd120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57bd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57ba100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57ba100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57ba480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57ba610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57ba7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57ba930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57baac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57bac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57bade0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57b9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57b91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57b9340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57b94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57b9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57b97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57b9a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57b9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57b6d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57b6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57b50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57b5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57b5400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57b5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57b5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57b58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57b5a40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57b5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57b5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57b4020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57b41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57b4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57b44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57b4760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57b48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57b1740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57b1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57b1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57b1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57b1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57b0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57b01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57b0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57b04d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57b0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57b07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57b0980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57b0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57b0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57b0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57af120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57af2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57ac100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57ac100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57ac480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57ac610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57ac7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57ac930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57acac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57acc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57acde0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57aa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57aa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57aa340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57aa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57aa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57aa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57aaa80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57aac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57a7d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57a7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57a60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57a6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57a6400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57a6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57a6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57a68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57a6a40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57a6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57a6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57a5020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57a51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57a5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57a54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57a5760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57a58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d57a2740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d57a2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57a2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57a2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57a2de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57a1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57a11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57a1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57a14d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57a1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57a17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57a1980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57a1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57a1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57a1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d57a0120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57a02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d579d100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d579d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d579d480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d579d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d579d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d579d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d579dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d579dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d579dde0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d579c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d579c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d579c340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d579c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d579c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d579c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d579ca80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d579cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5799d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5799d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57980e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5798270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5798400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5798590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5798720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d57988b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5798a40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5798bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5798d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5797020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57971b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5797340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57974d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5797760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57978f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5794740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5794740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5794ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5794c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5794de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5793020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57931b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5793340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57934d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5793660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57937f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5793980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5793b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5793ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5793e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5792120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57922b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d578f100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d578f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d578f480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d578f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d578f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d578f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d578fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d578fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d578fde0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d578e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d578e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d578e340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d578e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d578e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d578e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d578ea80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d578ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d578bd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d578bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d578a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d578a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d578a400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d578a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d578a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d578a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d578aa40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d578abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d578ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5789020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57891b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5789340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57894d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5789760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57898f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5785740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5785740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5785ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5785c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5785de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5784020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57841b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5784340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57844d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5784660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d57847f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5784980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5784b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5784ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5784e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5783120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff1d5780100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff1d5780100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5780480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5780610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57807a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5780930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5780ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5780c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5780de0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d577f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d577f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d577f340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d577f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d577f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d577f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d577fa80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d577fc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff1d57082f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d57082f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5708670"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5708800"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5708990"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5708b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5708cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5708e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5707020"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57071b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5707340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d57074d0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5707660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d57077f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5707980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5707c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5707da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff1d5722020" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d5722020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d57223a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5722530"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d57226c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5722850"/>
        <function-ref name="get" scoped="" ref="0x7ff1d57229e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5722b70"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5722d00"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5708020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff1d5704de0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d5704de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5703180"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5703310"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d57034a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5703630"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57037c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5703950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5703ae0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5703c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5703e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5702020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d57021b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5702340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d57024d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5702760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d57028f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff1d5705b90" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d5705b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5704020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d57041b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5704340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d57044d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5704660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d57047f0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5704980"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5704b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff1d56ff930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d56ff930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d56ffcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d56ffe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d56fe020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d56fe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d56fe340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d56fe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d56fe660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d56fe7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d56fe980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d56feb10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d56feca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d56fee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d56fd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d56fd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d56fd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff1d5700710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d5700710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5700a90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5700c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5700db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d56ff020"/>
        <function-ref name="get" scoped="" ref="0x7ff1d56ff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d56ff340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d56ff4d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d56ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff1d47e9020" loc="49:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff1d47e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d47e93a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d47e9530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d47e96c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d47e9850"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d47e99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff1d47e9c30" loc="50:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff1d47e9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d47e8020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff1d47e81b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d47e8340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d47e84d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff1d47e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff1d47e88b0" loc="51:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff1d47e88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff1d47e8c30"/>
        <function-ref name="source" scoped="" ref="0x7ff1d47e8dc0"/>
        <function-ref name="address" scoped="" ref="0x7ff1d47e6020"/>
        <function-ref name="destination" scoped="" ref="0x7ff1d47e61b0"/>
        <function-ref name="setSource" scoped="" ref="0x7ff1d47e6340"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff1d47e64d0"/>
        <function-ref name="type" scoped="" ref="0x7ff1d47e6660"/>
        <function-ref name="setType" scoped="" ref="0x7ff1d47e67f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff1d47e6980"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff1d47e6b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff1d47e6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ff1d47e5020" loc="52:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ff1d47e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff1d47e53a0"/>
        <function-ref name="noAck" scoped="" ref="0x7ff1d47e5530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff1d47e56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff1d4300420" loc="49:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff1d4300420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d43007a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d4300930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d4300ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d4300c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d4300de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff1d42ff060" loc="50:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff1d42ff060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d42ff3e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff1d42ff570"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d42ff700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d42ff890"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff1d42ffa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff1d42ffc70" loc="51:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff1d42ffc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff1d42fe020"/>
        <function-ref name="source" scoped="" ref="0x7ff1d42fe1b0"/>
        <function-ref name="address" scoped="" ref="0x7ff1d42fe340"/>
        <function-ref name="destination" scoped="" ref="0x7ff1d42fe4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7ff1d42fe660"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff1d42fe7f0"/>
        <function-ref name="type" scoped="" ref="0x7ff1d42fe980"/>
        <function-ref name="setType" scoped="" ref="0x7ff1d42feb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff1d42feca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff1d42fee30"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff1d42fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ff1d42fd2b0" loc="52:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ff1d42fd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff1d42fd630"/>
        <function-ref name="noAck" scoped="" ref="0x7ff1d42fd7c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff1d42fd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff1d42f3390" loc="44:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff1d42f3390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d42f3710"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d42f38a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d42f3a30"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d42f3bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d42f3d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7ff1d42f2060" loc="46:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff1d42f2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d42f23e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d42f2570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d42f2700"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d42f2890"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d42f2a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7ff1d42f2c70" loc="47:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff1d42f2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff1d42f1020"/>
        <function-ref name="source" scoped="" ref="0x7ff1d42f11b0"/>
        <function-ref name="address" scoped="" ref="0x7ff1d42f1340"/>
        <function-ref name="destination" scoped="" ref="0x7ff1d42f14d0"/>
        <function-ref name="setSource" scoped="" ref="0x7ff1d42f1660"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff1d42f17f0"/>
        <function-ref name="type" scoped="" ref="0x7ff1d42f1980"/>
        <function-ref name="setType" scoped="" ref="0x7ff1d42f1b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff1d42f1ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff1d42f1e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff1d42f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff1d56b0940" loc="43:../../../..//tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff1d56b0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d56b0cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d56b0e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d56ad020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d56ad1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d56ad340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7ff1d5663400" loc="48:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff1d5663400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d56637a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d5663930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d5663ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d5663c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d5663de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff1d56644b0" loc="46:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff1d56644b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d5664850"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d56649e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d5664b70"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d5664d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d5663020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7ff1d5660720" loc="50:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff1d5660720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5660aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff1d5660c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d5660dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d565f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff1d565f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7ff1d565f480" loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7ff1d565f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d565f800"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d565f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7ff1d565fc60" loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7ff1d565fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d565e020"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d565e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7ff1d5662060" loc="49:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff1d5662060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff1d56623e0"/>
        <function-ref name="source" scoped="" ref="0x7ff1d5662570"/>
        <function-ref name="address" scoped="" ref="0x7ff1d5662700"/>
        <function-ref name="destination" scoped="" ref="0x7ff1d5662890"/>
        <function-ref name="setSource" scoped="" ref="0x7ff1d5662a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff1d5662bb0"/>
        <function-ref name="type" scoped="" ref="0x7ff1d5662d40"/>
        <function-ref name="setType" scoped="" ref="0x7ff1d5660020"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff1d56601b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff1d5660340"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff1d56604d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff1d565a140" loc="61:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff1d565a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff1d565a4c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff1d565a650"/>
        <function-ref name="start" scoped="" ref="0x7ff1d565a7e0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d565a970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff1d56591d0" loc="63:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff1d56591d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d5659550"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d56596e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d5659870"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d5659a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d5659b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ff1d5657020" loc="65:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7ff1d5657020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d56573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff1d5657630" loc="67:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff1d5657630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d56579b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff1d5657b40"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d5657cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d5657e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff1d5656020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7ff1d564ccd0" loc="70:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff1d564ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff1d564a2e0"/>
        <function-ref name="clear" scoped="" ref="0x7ff1d564aa10"/>
        <function-ref name="isValid" scoped="" ref="0x7ff1d5652b60"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5649170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff1d563eb20" loc="72:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff1d563eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff1d5644020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff1d56441b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff1d5644340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff1d56444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff1d56583f0" loc="64:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff1d56583f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d5658770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ff1d5655990" loc="69:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff1d5655990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff1d5655d10"/>
        <function-ref name="noAck" scoped="" ref="0x7ff1d5653020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff1d56531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff1d56562d0" loc="68:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff1d56562d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff1d5656650"/>
        <function-ref name="source" scoped="" ref="0x7ff1d56567e0"/>
        <function-ref name="address" scoped="" ref="0x7ff1d5656970"/>
        <function-ref name="destination" scoped="" ref="0x7ff1d5656b00"/>
        <function-ref name="setSource" scoped="" ref="0x7ff1d5656c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff1d5656e20"/>
        <function-ref name="type" scoped="" ref="0x7ff1d5655020"/>
        <function-ref name="setType" scoped="" ref="0x7ff1d56551b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff1d5655340"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff1d56554d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff1d5655660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7ff1d5649dc0" loc="71:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff1d5649dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff1d56463f0"/>
        <function-ref name="clear" scoped="" ref="0x7ff1d5646b20"/>
        <function-ref name="isValid" scoped="" ref="0x7ff1d5648ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d56452a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff1d5631880" loc="55:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff1d5631880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff1d5631c00"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff1d5631d90"/>
        <function-ref name="start" scoped="" ref="0x7ff1d5630020"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d56301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff1d5617d40" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d5617d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff1d561f0e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff1d561f270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff1d561f400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff1d561f590"/>
        <function-ref name="setCca" scoped="" ref="0x7ff1d561f720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff1d561f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7ff1d560ad20" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7ff1d560ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7ff1d56141c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff1d562b760" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff1d562b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d562bae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff1d562bc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d562be00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d562a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff1d562a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff1d5630980" loc="56:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff1d5630980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d5630d00"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d562f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d562f1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d562f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d562f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ff1d562d900" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7ff1d562d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d562dc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ff1d5622970" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d5622970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff1d5622cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff1d5622e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff1d5629030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff1d56291c0"/>
        <function-ref name="getPower" scoped="" ref="0x7ff1d5629350"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff1d56294e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff1d561fbb0" loc="65:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff1d561fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff1d561d020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff1d561d1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff1d561d340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff1d561d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff1d562fcb0" loc="57:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff1d562fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d562d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ff1d5629810" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff1d5629810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff1d5629b90"/>
        <function-ref name="noAck" scoped="" ref="0x7ff1d5629d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff1d5628020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ff1d5615020" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ff1d5615020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ff1d56153a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7ff1d5615530"/>
        <function-ref name="getRetries" scoped="" ref="0x7ff1d56156c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ff1d5615850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ff1d56159e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff1d562c020" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff1d562c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff1d562c3a0"/>
        <function-ref name="source" scoped="" ref="0x7ff1d562c530"/>
        <function-ref name="address" scoped="" ref="0x7ff1d562c6c0"/>
        <function-ref name="destination" scoped="" ref="0x7ff1d562c850"/>
        <function-ref name="setSource" scoped="" ref="0x7ff1d562c9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff1d562cb70"/>
        <function-ref name="type" scoped="" ref="0x7ff1d562cd00"/>
        <function-ref name="setType" scoped="" ref="0x7ff1d562b020"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff1d562b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff1d562b340"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff1d562b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ff1d561ea80" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff1d561ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ff1d561ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff1d5609b70" loc="43:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff1d5609b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff1d5606020"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff1d56061b0"/>
        <function-ref name="start" scoped="" ref="0x7ff1d5606340"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d56064d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ff1d55fb080" loc="55:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff1d55fb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ff1d55fb400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ff1d55fa2e0" loc="57:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ff1d55fa2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ff1d55fa660"/>
        <function-ref name="setRetries" scoped="" ref="0x7ff1d55fa7f0"/>
        <function-ref name="getRetries" scoped="" ref="0x7ff1d55fa980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ff1d55fab10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ff1d55faca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ff1d55fd670" loc="53:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d55fd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff1d55fd9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff1d55fdb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff1d55fdd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff1d55fc020"/>
        <function-ref name="getPower" scoped="" ref="0x7ff1d55fc1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff1d55fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7ff1d55fe170" loc="50:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7ff1d55fe170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d55fe4f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d55fe680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d55fe810"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d55fe9a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d55feb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff1d55fb700" loc="56:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff1d55fb700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff1d55fba80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff1d55fbc10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff1d55fbda0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff1d55fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7ff1d5600d30" loc="47:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7ff1d5600d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d55ff0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ff1d55fc670" loc="54:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff1d55fc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff1d55fc9f0"/>
        <function-ref name="noAck" scoped="" ref="0x7ff1d55fcb80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff1d55fcd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d5605210" loc="45:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d5605210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d5605590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d5605720"/>
        <function-ref name="request" scoped="" ref="0x7ff1d56058b0"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d5605a40"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d5605bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7ff1d5600020" loc="46:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7ff1d5600020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d56003a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d5600530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d56006c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d5600850"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d56009e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7ff1d55ff420" loc="48:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7ff1d55ff420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d55ff7a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff1d55ff930"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d55ffac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d55ffc50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff1d55ffde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7ff1d55fd020" loc="51:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7ff1d55fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d55fd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff1d55f99f0" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff1d55f99f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff1d55f9d70"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff1d55f6020"/>
        <function-ref name="start" scoped="" ref="0x7ff1d55f61b0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d55f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff1d55f5990" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d55f5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff1d55f5d10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff1d55f4020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff1d55f41b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff1d55f4340"/>
        <function-ref name="setCca" scoped="" ref="0x7ff1d55f44d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff1d55f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff1d55f6600" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff1d55f6600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d55f6980"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d55f6b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d55f6ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d55f6e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d55f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff1d55f5300" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff1d55f5300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d55f5680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff1d55f1690" loc="39:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff1d55f1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff1d55f1a10"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff1d55f1ba0"/>
        <function-ref name="start" scoped="" ref="0x7ff1d55f1d30"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d55f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff1d55ef020" loc="41:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d55ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff1d55ef3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff1d55ef530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff1d55ef6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff1d55ef850"/>
        <function-ref name="setCca" scoped="" ref="0x7ff1d55ef9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff1d55efb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7ff1d55e4ae0" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7ff1d55e4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff1d55e4e60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff1d55e2020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff1d55e21b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff1d55e2340"/>
        <function-ref name="setCca" scoped="" ref="0x7ff1d55e24d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff1d55e2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff1d55d7020" loc="50:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d55d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff1d55d73a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff1d55d7530"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff1d55d76c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff1d55d7850"/>
        <function-ref name="getPower" scoped="" ref="0x7ff1d55d79e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff1d55d7b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7ff1d55dcd30" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff1d55dcd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d55e40e0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d55e4270"/>
        <function-ref name="modify" scoped="" ref="0x7ff1d55e4400"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d55e4590"/>
        <function-ref name="resend" scoped="" ref="0x7ff1d55e4720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff1d55f02e0" loc="40:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff1d55f02e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d55f0660"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d55f07f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d55f0980"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d55f0b10"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d55f0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7ff1d55db020" loc="48:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ff1d55db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ff1d55db3a0"/>
        <function-ref name="rand32" scoped="" ref="0x7ff1d55db530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7ff1d55e5020" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7ff1d55e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff1d55e53a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d55e5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff1d55d1660" loc="51:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d55d1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d55d19e0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff1d55d1b70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff1d55d1d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7ff1d55e63f0" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7ff1d55e63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7ff1d55e6770"/>
        <function-ref name="rfOff" scoped="" ref="0x7ff1d55e6900"/>
        <function-ref name="rxOn" scoped="" ref="0x7ff1d55e6a90"/>
        <function-ref name="startVReg" scoped="" ref="0x7ff1d55e6c20"/>
        <function-ref name="stopVReg" scoped="" ref="0x7ff1d55e6db0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7ff1d55ed020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7ff1d55ed1b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7ff1d55ed340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff1d55db7f0" loc="49:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff1d55db7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff1d55dbb70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff1d55dbd00"/>
        <function-ref name="led1On" scoped="" ref="0x7ff1d55da020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff1d55da1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff1d55da340"/>
        <function-ref name="get" scoped="" ref="0x7ff1d55da4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff1d55da660"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff1d55daca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d55da7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7ff1d55da980"/>
        <function-ref name="led2On" scoped="" ref="0x7ff1d55dab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7ff1d55efe60" loc="43:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d55efe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d55ee210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d55ee3a0"/>
        <function-ref name="request" scoped="" ref="0x7ff1d55ee530"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d55ee6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d55ee850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7ff1d55cbe40" loc="52:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7ff1d55cbe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff1d55d4310"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff1d55d44a0"/>
        <function-ref name="isState" scoped="" ref="0x7ff1d55d4630"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff1d55d47c0"/>
        <function-ref name="requestState" scoped="" ref="0x7ff1d55d4950"/>
        <function-ref name="forceState" scoped="" ref="0x7ff1d55d4ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7ff1d55c79e0" loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7ff1d55c79e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d55c7d60"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d55c5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7ff1d55c8a10" loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7ff1d55c8a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d55c8d90"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d55c7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7ff1d55c9a00" loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7ff1d55c9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d55c9d80"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d55c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7ff1d556fb80" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ff1d556fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ff1d557b020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ff1d557b1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ff1d557b340"/>
        <function-ref name="syncDone" scoped="" ref="0x7ff1d557b4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ff1d557b660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ff1d557b7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7ff1d557b980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ff1d557bb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ff1d557bca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ff1d557be30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ff1d557a020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ff1d557a1b0"/>
        <function-ref name="sync" scoped="" ref="0x7ff1d557a340"/>
        <function-ref name="getChannel" scoped="" ref="0x7ff1d557a5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ff1d557a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7ff1d556d020" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7ff1d556d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d556dc10"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d556c0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7ff1d557aa60" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7ff1d557aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7ff1d557ade0"/>
        <function-ref name="rfOff" scoped="" ref="0x7ff1d556e020"/>
        <function-ref name="rxOn" scoped="" ref="0x7ff1d556e1b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7ff1d556e340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7ff1d556e4d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7ff1d556e660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7ff1d556e7f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7ff1d556e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d557f720" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d557f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d557faa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d557fc30"/>
        <function-ref name="request" scoped="" ref="0x7ff1d557fdc0"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d557c020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d557c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7ff1d5564970" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ff1d5564970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ff1d5564cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ff1d5564e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ff1d5563030"/>
        <function-ref name="syncDone" scoped="" ref="0x7ff1d55631c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ff1d5563350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ff1d55634e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7ff1d5563670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ff1d5563800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ff1d5563990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ff1d5563b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ff1d5563cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ff1d5563e40"/>
        <function-ref name="sync" scoped="" ref="0x7ff1d5562020"/>
        <function-ref name="getChannel" scoped="" ref="0x7ff1d55622b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ff1d5562440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7ff1d553c8e0" loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff1d553c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d553cc60"/>
        <function-ref name="write" scoped="" ref="0x7ff1d553cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7ff1d555d020" loc="50:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff1d555d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7ff1d555d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7ff1d5555d90" loc="52:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7ff1d5555d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d5553670"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d555b5d0"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d5553020"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d555ba90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d5553b30"/>
        <function-ref name="start" scoped="" ref="0x7ff1d555cbc0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d555b110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7ff1d55405f0" loc="64:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff1d55405f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d5540970"/>
        <function-ref name="write" scoped="" ref="0x7ff1d5540b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7ff1d5551380" loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7ff1d5551380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5551700"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5551890"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5551a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5551bb0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5551d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5550020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d55501b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5550340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7ff1d5561b40" loc="48:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7ff1d5561b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d5560750"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d5560bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7ff1d552a820" loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7ff1d552a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d552aba0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d552ad30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7ff1d553b1c0" loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff1d553b1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d553b540"/>
        <function-ref name="write" scoped="" ref="0x7ff1d553b6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7ff1d553ba70" loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d553ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d553bdf0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d553a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7ff1d55453d0" loc="62:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff1d55453d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d5545750"/>
        <function-ref name="write" scoped="" ref="0x7ff1d55458e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7ff1d5546810" loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff1d5546810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7ff1d5546b90"/>
        <function-ref name="changed" scoped="" ref="0x7ff1d5546d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7ff1d554d020"/>
        <function-ref name="setAddress" scoped="" ref="0x7ff1d554d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7ff1d5552060" loc="53:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ff1d5552060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d55523e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5552570"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5552700"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5552890"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5552a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5552bb0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5552d40"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5551020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7ff1d5539120" loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff1d5539120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d55396a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7ff1d55506a0" loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7ff1d55506a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5550a20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5550bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5550d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d554f020"/>
        <function-ref name="get" scoped="" ref="0x7ff1d554f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d554f340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d554f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d554f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d55654a0" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d55654a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d5565820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7ff1d553c020" loc="65:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d553c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d553c3a0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d553c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7ff1d5539a40" loc="72:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff1d5539a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d5539dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ff1d55381d0" loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ff1d55381d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d5538550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d55386e0"/>
        <function-ref name="request" scoped="" ref="0x7ff1d5538870"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d5538a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d5538b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7ff1d5536d90" loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7ff1d5536d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d5535180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d5535310"/>
        <function-ref name="request" scoped="" ref="0x7ff1d55354a0"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d5535630"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d55357c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7ff1d5562740" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7ff1d5562740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7ff1d5562ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7ff1d5562c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7ff1d5562de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7ff1d5561020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7ff1d55611b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7ff1d5561340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7ff1d55614d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7ff1d5561660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7ff1d5545c80" loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff1d5545c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d55400a0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d5540230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7ff1d553eb00" loc="61:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff1d553eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d553ee80"/>
        <function-ref name="write" scoped="" ref="0x7ff1d5545030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7ff1d55372b0" loc="69:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff1d55372b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d5537630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff1d5535a80" loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff1d5535a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff1d5535e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff1d5534020"/>
        <function-ref name="led1On" scoped="" ref="0x7ff1d55341b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff1d5534340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff1d55344d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5534660"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff1d55347f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff1d5534e30"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5534980"/>
        <function-ref name="led0On" scoped="" ref="0x7ff1d5534b10"/>
        <function-ref name="led2On" scoped="" ref="0x7ff1d5534ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7ff1d552b940" loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7ff1d552b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d552bcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d552be50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d5565b10" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d5565b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d5564020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d55641b0"/>
        <function-ref name="request" scoped="" ref="0x7ff1d5564340"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d55644d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d5564660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7ff1d5549520" loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff1d5549520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d55498a0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d5549a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7ff1d5541a90" loc="59:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff1d5541a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d5549020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d55491b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7ff1d554e0e0" loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7ff1d554e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d554e460"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d554e5f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff1d554e780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff1d554e910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7ff1d5536020" loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7ff1d5536020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d55363a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d5536530"/>
        <function-ref name="request" scoped="" ref="0x7ff1d55366c0"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d5536850"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d55369e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7ff1d55379c0" loc="70:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff1d55379c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d5537d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d54b47e0" loc="45:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d54b47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d54b4b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7ff1d54b1220" loc="46:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff1d54b1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d54afb30"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d54b0a60"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d54af4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d54af020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d54ad020"/>
        <function-ref name="start" scoped="" ref="0x7ff1d54b0090"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d54b05a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d54ab490" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d54ab490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d54ab810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7ff1d54abd20" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff1d54abd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d53b2670"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d53b4550"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d53b2020"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d53b4a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d53b2b30"/>
        <function-ref name="start" scoped="" ref="0x7ff1d53b5b60"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d53b4090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff1d42788b0" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff1d42788b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d42740d0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d42760d0"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d4276a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d4276590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d4274590"/>
        <function-ref name="start" scoped="" ref="0x7ff1d42776e0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4277bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d4278060" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d4278060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d42783e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff1d4271870" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff1d4271870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d426d090"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d426e090"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d426ea10"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d426e550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d426d550"/>
        <function-ref name="start" scoped="" ref="0x7ff1d426f6a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d426fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d4271020" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d4271020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d42713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ff1d4257020" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d4257020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d42573a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d4257530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d42576c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d4257850"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d42579e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ff1d425a570" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d425a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d425a8f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d425aa80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d425ac10"/>
        <function-ref name="get" scoped="" ref="0x7ff1d425ada0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d4259020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d42591b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d4259340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d42594d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d4259660"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d42597f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d4259980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ff1d4259c10" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d4259c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d4258020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d42581b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d4258340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d42584d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d4258660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d42587f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d4258980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d4258b10"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d4258ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ff1d5489ba0" loc="52:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d5489ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5488020"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d54881b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d5488340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d54884d0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5488660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ff1d548d4d0" loc="50:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d548d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d548d850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d548d9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d548db70"/>
        <function-ref name="get" scoped="" ref="0x7ff1d548dd00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d548c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d548c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d548c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d548c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d548c660"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d548c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d548c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ff1d548a280" loc="51:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d548a280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d548a600"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d548a790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d548a920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d548aab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d548ac40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d548add0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5489020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d54891b0"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5489340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7ff1d424eda0" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d424eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d424d180"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d424d310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d424d4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d424d630"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d424d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ff1d42504c0" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d42504c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d4250840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d42509d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d4250b60"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4250cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d4250e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d424f030"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d424f1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d424f350"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d424f4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d424f670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d424f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff1d4254340" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff1d4254340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d4252ba0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d4253b80"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d4252550"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d4252090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d4250090"/>
        <function-ref name="start" scoped="" ref="0x7ff1d42531b0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d42536c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d4255a30" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d4255a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d4255db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ff1d424fa90" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d424fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d424fe10"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d424e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d424e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d424e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d424e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d424e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d424e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d424e980"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d424eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff1d5438020" loc="43:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff1d5438020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d5438e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d5437800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5437340"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d5437cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7ff1d542f020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ff1d542f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d542fe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d542d800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d542d340"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d542dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ff1d541b2c0" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d541b2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d541b640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d541b7d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d541b960"/>
        <function-ref name="get" scoped="" ref="0x7ff1d541baf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d541bc80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d541be10"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d541a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d541a1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d541a340"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d541a4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d541a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff1d542a0a0" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff1d542a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d541c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d541c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d541c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d541ce60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7ff1d53f9540" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7ff1d53f9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d53f83d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d53f8d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d53f8890"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d53f6260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff1d53fc0f0" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff1d53fc0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d53fa020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d53fa9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d53fa4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d53fae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff1d426ba90" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff1d426ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d42672e0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d42682e0"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d4268c60"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d42687a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d42677a0"/>
        <function-ref name="start" scoped="" ref="0x7ff1d426a8d0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d426ade0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7ff1d4264210" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7ff1d4264210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d4261b30"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d4263a60"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d42614e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d4261020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d4260020"/>
        <function-ref name="start" scoped="" ref="0x7ff1d4263090"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d42635a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff1d4267e10" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff1d4267e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4266ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d4265670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d42651b0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d4265b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7ff1d53ab090" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7ff1d53ab090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d53ab410"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d53ab5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d53ab730"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d53ab8c0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53aba50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d53abbe0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d53abd70"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d53aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7ff1d53aa390" loc="45:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7ff1d53aa390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d53aa710"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d53aa8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d53aaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d53aabc0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53aad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d53a9020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d53a91b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d53a9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7ff1d53a96a0" loc="46:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7ff1d53a96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d53a9a20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d53a9bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d53a9d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d53a8020"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53a81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d53a8340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d53a84d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d53a8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7ff1d53ade60" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ff1d53ade60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d53ac210"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d53ac3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d53ac530"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d53ac6c0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53ac850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d53ac9e0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d53acb70"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d53acd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7ff1d53a7ce0" loc="48:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7ff1d53a7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d53a60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d53a6230"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d53a63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d53a6550"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53a66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d53a6870"/>
        <function-ref name="set" scoped="" ref="0x7ff1d53a6a00"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d53a6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7ff1d53b0c70" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7ff1d53b0c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d53ad020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d53ad1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d53ad340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d53ad4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53ad660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d53ad7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d53ad980"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d53adb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7ff1d53a89b0" loc="47:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7ff1d53a89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d53a8d30"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d53a7020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d53a71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d53a7340"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53a74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d53a7660"/>
        <function-ref name="set" scoped="" ref="0x7ff1d53a77f0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d53a7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff1d53a32f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d53a32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d53a3670"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d53a3800"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d53a3990"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d53a3b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d53a3cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d53a3e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d53a1020"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53a11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d53a1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d53a14d0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d53a1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d53a17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d53a1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d53a1c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d53a1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff1d53a4020" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d53a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d53a43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d53a4530"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d53a46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d53a4850"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53a49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d53a4b70"/>
        <function-ref name="set" scoped="" ref="0x7ff1d53a4d00"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d53a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff1d539ede0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d539ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d539d180"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d539d310"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d539d4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d539d630"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d539d7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d539d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d539dae0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d539dc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d539de00"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d539c020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d539c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d539c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d539c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d539c760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d539c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff1d539fb60" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d539fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d539e020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d539e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d539e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d539e4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d539e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d539e7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d539e980"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d539eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff1d5399930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d5399930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5399cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5399e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5398020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d53981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5398340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d53984d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5398660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53987f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5398980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5398b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5398ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5398e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5397020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d53972b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5397440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff1d539a710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d539a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d539aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d539ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d539adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5399020"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53991b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5399340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d53994d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5399660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff1d5394480" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d5394480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5394800"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5394990"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5394b20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5394cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5394e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5393020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d53931b0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5393340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d53934d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5393660"/>
        <function-ref name="set" scoped="" ref="0x7ff1d53937f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5393980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5393b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5393da0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5392020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff1d53951d0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d53951d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5395550"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d53956e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5395870"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5395a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5395b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5395d20"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5394020"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d53941b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff1d538f020" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d538f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d538f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d538f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d538f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d538f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d538f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d538fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d538fd00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d538e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d538e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d538e340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d538e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d538e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d538e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d538ea80"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d538ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff1d5391d70" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d5391d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5390180"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5390310"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d53904a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5390630"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53907c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5390950"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5390ae0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5390c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff1d538ade0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d538ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5389180"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5389310"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d53894a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5389630"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d53897c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5389950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5389ae0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5389c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5389e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5388020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d53881b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5388340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d53884d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5388760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d53888f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff1d538cb60" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d538cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d538a020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d538a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d538a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d538a4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d538a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d538a7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d538a980"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d538ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff1d5385930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d5385930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5385cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5385e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5384020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d53841b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5384340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d53844d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5384660"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53847f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d5384980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5384b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5384ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5384e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5383020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d53832b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5383440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff1d5386710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d5386710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5386a90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5386c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5386db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d5385020"/>
        <function-ref name="get" scoped="" ref="0x7ff1d53851b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d5385340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d53854d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d5385660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7ff1d5370150" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7ff1d5370150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7ff1d53704d0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5370660"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d53707f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7ff1d5370980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7ff1d5370d60" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7ff1d5370d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d536b180"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d536b310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff1d536b4a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff1d536b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7ff1d536ba20" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff1d536ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d536bda0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d536a020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff1d536a1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff1d536a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7ff1d53538f0" loc="42:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7ff1d53538f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d5353c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff1d5353e00"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d5352020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d53521b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d5352340"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff1d53524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff1d5367a20" loc="40:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff1d5367a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7ff1d5367da0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5354020"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d53541b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7ff1d5354340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ff1d53545d0" loc="41:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d53545d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d5354950"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d5354ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d5354c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d5354e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d5353020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d53531b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d5353340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d53534d0"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d5353660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7ff1d53527a0" loc="43:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d53527a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5352b20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5352cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5352e40"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5351020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d53511b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5351340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d53514d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5351660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d53517f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5351980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5351b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5351ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5351e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5350120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d53502b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7ff1d53438a0" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7ff1d53438a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5343c20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5343db0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5342020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d53421b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5342340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d53424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7ff1d5338a30" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7ff1d5338a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5338db0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5337020"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d53371b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d5337340"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d53374d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d5337660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7ff1d53408a0" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7ff1d53408a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5340c20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5340db0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d533f020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d533f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d533f340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d533f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7ff1d533e8a0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7ff1d533e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d533ec20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d533edb0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d533c020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d533c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d533c340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d533c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7ff1d53498a0" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7ff1d53498a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5349c20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5349db0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5344020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d53441b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5344340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d53444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7ff1d533a8a0" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7ff1d533a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d533ad20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5339020"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d53391b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d5339340"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d53394d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d5339660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7ff1d53428a0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7ff1d53428a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5342c20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5342db0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5341020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d53411b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5341340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d53414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7ff1d5337a30" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7ff1d5337a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5337db0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5336020"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d53361b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d5336340"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d53364d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d5336660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7ff1d53458f0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7ff1d53458f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5345c70"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5345e00"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d534a020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d534a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d534a340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d534a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7ff1d533c8a0" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7ff1d533c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d533cc20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d533cdb0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d533b020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d533b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d533b340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d533b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7ff1d53448a0" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7ff1d53448a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5344c20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5344db0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5343020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d53431b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5343340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d53434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7ff1d5339a30" loc="57:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7ff1d5339a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5339db0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5338020"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d53381b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d5338340"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d53384d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d5338660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7ff1d53418a0" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7ff1d53418a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5341c20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5341db0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5340020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d53401b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5340340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d53404d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7ff1d533f8a0" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7ff1d533f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d533fc20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d533fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d533e020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d533e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d533e340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d533e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7ff1d534a8a0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7ff1d534a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d534ac20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d534adb0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5349020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d53491b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5349340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d53494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7ff1d533b8a0" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7ff1d533b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d533bc20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d533bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d533a020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d533a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d533a340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d533a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7ff1d532f8a0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7ff1d532f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d532fc20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d532fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d532e020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d532e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d532e340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d532e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7ff1d5325a30" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7ff1d5325a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5325db0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5324020"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d53241b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d5324340"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d53244d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d5324660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7ff1d532c8a0" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7ff1d532c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d532cc20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d532cdb0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d532b020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d532b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d532b340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d532b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7ff1d532a8a0" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7ff1d532a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d532ac20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d532adb0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5329020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d53291b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5329340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d53294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7ff1d53318a0" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7ff1d53318a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5331c20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5331db0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5330020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d53301b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5330340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d53304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7ff1d53278a0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7ff1d53278a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5327d20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5326020"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d53261b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d5326340"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d53264d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d5326660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7ff1d532e8a0" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7ff1d532e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d532ec20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d532edb0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d532d020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d532d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d532d340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d532d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7ff1d5324a30" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7ff1d5324a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5324db0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5322020"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d53221b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d5322340"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d53224d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d5322660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7ff1d5335810" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7ff1d5335810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5335b90"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5335d20"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5332020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d53321b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5332340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d53324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7ff1d53298a0" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7ff1d53298a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5329c20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5329db0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5328020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d53281b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5328340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d53284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7ff1d53308a0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7ff1d53308a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5330c20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5330db0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d532f020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d532f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d532f340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d532f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7ff1d5326a30" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7ff1d5326a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5326db0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5325020"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d53251b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d5325340"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d53254d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d5325660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7ff1d532d8a0" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7ff1d532d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d532dc20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d532ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d532c020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d532c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d532c340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d532c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7ff1d532b8a0" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7ff1d532b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d532bc20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d532bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d532a020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d532a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d532a340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d532a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7ff1d53328a0" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7ff1d53328a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5332c20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5332db0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5331020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d53311b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5331340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d53314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7ff1d53288a0" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7ff1d53288a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5328c20"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5328db0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5327020"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d53271b0"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5327340"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d53274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7ff1d5250610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7ff1d5250610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5250990"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5250b20"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5250cb0"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d5250e40"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5243020"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d52431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7ff1d5251a30" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ff1d5251a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5251db0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5250020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff1d52501b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff1d5250340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7ff1d5241610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7ff1d5241610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d5241990"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d5241b20"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5241cb0"/>
        <function-ref name="edge" scoped="" ref="0x7ff1d5241e40"/>
        <function-ref name="enable" scoped="" ref="0x7ff1d5240020"/>
        <function-ref name="getValue" scoped="" ref="0x7ff1d52401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7ff1d5242a70" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ff1d5242a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5242df0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d5241020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff1d52411b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff1d5241340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff1d4df1e50" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff1d4df1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4df0410"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4df05a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff1d4dfd160" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff1d4dfd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dfd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff1d4df5e50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff1d4df5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4df3210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4df33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff1d4def880" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d4def880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4defc00"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4defd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff1d4de70a0" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff1d4de70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de7420"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff1d4dee0a0" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff1d4dee0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dee420"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dee5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff1d4ddb500" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff1d4ddb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4ddb880"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4ddba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff1d4ddd500" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff1d4ddd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4ddd880"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4ddda10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff1d4dfb490" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff1d4dfb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dfb810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff1d4de3880" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff1d4de3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de3c00"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff1d4dde500" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff1d4dde500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dde880"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4ddea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff1d4df3e50" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff1d4df3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4df2210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4df23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff1d4df2e50" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d4df2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4df1210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4df13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff1d4de9880" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff1d4de9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de9c00"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff1d4dea0a0" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff1d4dea0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dea420"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dea5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff1d4dee880" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff1d4dee880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4deec00"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4deed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff1d4dffa90" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d4dffa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff1d4dffe10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff1d4dfe020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff1d4dfe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff1d4df8e00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff1d4df8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4df71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff1d4df7490" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff1d4df7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4df7910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff1d4de2c80" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff1d4de2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de10a0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff1d4df7be0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff1d4df7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4df6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff1d4ddece0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff1d4ddece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4ddd0a0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4ddd230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff1d4df8160" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff1d4df8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4df84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff1d4de30a0" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff1d4de30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de3420"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff1d4df2670" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff1d4df2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4df29f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4df2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff1d4df3670" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d4df3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4df39f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4df3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff1d4dfead0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff1d4dfead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dfee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff1d4de40a0" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff1d4de40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de4420"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff1d4de7880" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff1d4de7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de7c00"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff1d4de4880" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff1d4de4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de4c00"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff1d4ddcce0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff1d4ddcce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4ddb0a0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4ddb230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff1d4dddce0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff1d4dddce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4ddc0a0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4ddc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff1d4dea880" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff1d4dea880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4deac00"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dead90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff1d4de50a0" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff1d4de50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de5420"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff1d4de0ce0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff1d4de0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dde0a0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dde230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff1d4dec880" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff1d4dec880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4decc00"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4decd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff1d4ddbce0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff1d4ddbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d4dda0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d4dda230"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dda3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d4dda550"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d4dda6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff1d4dfe480" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff1d4dfe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dfe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff1d4df5670" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff1d4df5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4df59f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4df5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff1d4df1670" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff1d4df1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4df19f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4df1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff1d4de80a0" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff1d4de80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de8420"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff1d4dec0a0" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff1d4dec0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dec420"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dec5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff1d4de8880" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff1d4de8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de8c00"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff1d4df0870" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff1d4df0870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4df0bf0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4df0d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff1d4dfd7b0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff1d4dfd7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dfdb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff1d4def0a0" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d4def0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4def420"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4def5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d4e00e20" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d4e00e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d4dff1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d4dff350"/>
        <function-ref name="request" scoped="" ref="0x7ff1d4dff4e0"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d4dff670"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d4dff800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff1d4df62f0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff1d4df62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4df6670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff1d4df5020" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff1d4df5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4df53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff1d4de0500" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff1d4de0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de0880"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff1d4de1ce0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff1d4de1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de00a0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff1d4df87b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff1d4df87b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4df8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff1d4de1500" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff1d4de1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de1880"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff1d4ddc500" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff1d4ddc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4ddc880"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4ddca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff1d4de90a0" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff1d4de90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de9420"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff1d4de5880" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff1d4de5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de5c00"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff1d4dfde00" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff1d4dfde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dfb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff1d4dfbae0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff1d4dfbae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dfbe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff1d4deb0a0" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff1d4deb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4deb420"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4deb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff1d4df6940" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff1d4df6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4df6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff1d4deb880" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff1d4deb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4debc00"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4debd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff1d4de20a0" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff1d4de20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4de2820"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4de29b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff1d4dda9b0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff1d4dda9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d4ddad30"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d4dd9020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dd91b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d4dd9340"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d4dd94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7ff1d5200630" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7ff1d5200630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d52009b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d5200b40"/>
        <function-ref name="write" scoped="" ref="0x7ff1d5200cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d5200e60"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d51ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff1d5201680" loc="40:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d5201680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff1d5201a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff1d5201b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff1d5201d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7ff1d51ff8c0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7ff1d51ff8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d51ffc40"/>
        <function-ref name="write" scoped="" ref="0x7ff1d51ffdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7ff1d51fe6f0" loc="43:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7ff1d51fe6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d51fea70"/>
        <function-ref name="write" scoped="" ref="0x7ff1d51fec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d5204960" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d5204960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d5204ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d5204e70"/>
        <function-ref name="request" scoped="" ref="0x7ff1d5201030"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d52011c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d5201350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7ff1d51fc510" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7ff1d51fc510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d51fc890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7ff1d51e7680" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff1d51e7680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d51e7a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d51e7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7ff1d51f7bb0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7ff1d51f7bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d51f6020"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d51f61b0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d51f6340"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d51f64d0"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d51f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff1d51fb920" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d51fb920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff1d51fbca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff1d51fbe30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff1d51f8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7ff1d51f0080" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff1d51f0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff1d51f0400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7ff1d51ef020" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7ff1d51ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff1d51ef3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff1d51ef530"/>
        <function-ref name="isState" scoped="" ref="0x7ff1d51ef6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff1d51ef850"/>
        <function-ref name="requestState" scoped="" ref="0x7ff1d51ef9e0"/>
        <function-ref name="forceState" scoped="" ref="0x7ff1d51efb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ff1d51f2400" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ff1d51f2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d51f2780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d51f2910"/>
        <function-ref name="request" scoped="" ref="0x7ff1d51f2aa0"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d51f2c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d51f2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7ff1d51f4020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7ff1d51f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d51f43a0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d51f4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7ff1d51f4db0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7ff1d51f4db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d51f3180"/>
        <function-ref name="write" scoped="" ref="0x7ff1d51f3310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff1d51efdf0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff1d51efdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff1d51ee1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff1d51ee350"/>
        <function-ref name="led1On" scoped="" ref="0x7ff1d51ee4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff1d51ee670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff1d51ee800"/>
        <function-ref name="get" scoped="" ref="0x7ff1d51ee990"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff1d51eeb20"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff1d51e81b0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d51eecb0"/>
        <function-ref name="led0On" scoped="" ref="0x7ff1d51eee40"/>
        <function-ref name="led2On" scoped="" ref="0x7ff1d51e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d51f8810" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d51f8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d51f8b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d51f8d20"/>
        <function-ref name="request" scoped="" ref="0x7ff1d51f7020"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d51f71b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d51f7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7ff1d51e2120" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7ff1d51e2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d51e24a0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d51e2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7ff1d51f3ba0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7ff1d51f3ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d51f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff1d5187770" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff1d5187770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff1d5187af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff1d5187c80"/>
        <function-ref name="isState" scoped="" ref="0x7ff1d5187e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff1d5184020"/>
        <function-ref name="requestState" scoped="" ref="0x7ff1d51841b0"/>
        <function-ref name="forceState" scoped="" ref="0x7ff1d5184340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff1d5183280" loc="66:../../../..//tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff1d5183280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff1d5183600"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff1d5183790"/>
        <function-ref name="isState" scoped="" ref="0x7ff1d5183920"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff1d5183ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7ff1d5183c40"/>
        <function-ref name="forceState" scoped="" ref="0x7ff1d5183dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d517e020" loc="66:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d517e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d517e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff1d517eb70" loc="67:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff1d517eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff1d517d020"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff1d517d1b0"/>
        <function-ref name="isState" scoped="" ref="0x7ff1d517d340"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff1d517d4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7ff1d517d660"/>
        <function-ref name="forceState" scoped="" ref="0x7ff1d517d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ff1d4e26020" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff1d4e26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d4e263a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d4e26530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ff1d51658f0" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff1d51658f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff1d5165c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d5166c40" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d5166c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d5165020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d51651b0"/>
        <function-ref name="request" scoped="" ref="0x7ff1d5165340"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d51654d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d5165660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff1d41728f0" loc="82:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff1d41728f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff1d4172c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff1d4172e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ff1d41702b0" loc="87:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff1d41702b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d4170630"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d41707c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7ff1d4170a50" loc="89:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff1d4170a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ff1d4170dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ff1d41710c0" loc="83:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff1d41710c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff1d4171440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d4175c30" loc="81:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d4175c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d4172020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d41721b0"/>
        <function-ref name="request" scoped="" ref="0x7ff1d4172340"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d41724d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d4172660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7ff1d41716d0" loc="85:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7ff1d41716d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7ff1d4171a50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7ff1d4171be0"/>
        <function-ref name="splitRead" scoped="" ref="0x7ff1d4171d70"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4170020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7ff1d51005e0" loc="74:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d51005e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff1d5100960"/>
        <function-ref name="configure" scoped="" ref="0x7ff1d5100af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ff1d50fc510" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff1d50fc510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d50fc890"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d50fca20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7ff1d50fa600" loc="80:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff1d50fa600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ff1d50fa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ff1d5100dd0" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff1d5100dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff1d50ff180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7ff1d50fb370" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7ff1d50fb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d50fb6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d50fb880"/>
        <function-ref name="request" scoped="" ref="0x7ff1d50fba10"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d50fbba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d50fbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d5106a20" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d5106a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d5106da0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d5101020"/>
        <function-ref name="request" scoped="" ref="0x7ff1d51011b0"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d5101340"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d51014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7ff1d50ff480" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7ff1d50ff480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7ff1d50ff800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7ff1d50ff990"/>
        <function-ref name="splitRead" scoped="" ref="0x7ff1d50ffb20"/>
        <function-ref name="write" scoped="" ref="0x7ff1d50ffcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7ff1d50f56a0" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff1d50f56a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff1d50f5a20"/>
        <function-ref name="txDone" scoped="" ref="0x7ff1d50f5bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7ff1d5085c40" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d5085c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff1d5084020"/>
        <function-ref name="configure" scoped="" ref="0x7ff1d50841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ff1d5082700" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff1d5082700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d5082aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d5082c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7ff1d5081e00" loc="82:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff1d5081e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ff1d50801c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ff1d5084440" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff1d5084440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff1d50847c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7ff1d5080490" loc="83:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7ff1d5080490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff1d5080810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff1d50809a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff1d5080b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff1d5080cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff1d5080e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff1d507f020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff1d507f1b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff1d507f340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff1d507f4d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff1d507f660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff1d507f7f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff1d507f980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff1d507fb10"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff1d507fda0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff1d507e020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff1d507e1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff1d507e340"/>
        <function-ref name="isUart" scoped="" ref="0x7ff1d507e4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff1d507e660"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff1d507e7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff1d507e980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff1d507eb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff1d507eca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff1d507ee30"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d507d020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff1d507d3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff1d507d540"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff1d507d6d0"/>
        <function-ref name="tx" scoped="" ref="0x7ff1d507d860"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff1d507d9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff1d507db80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff1d507dd10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff1d507c020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff1d507c1b0"/>
        <function-ref name="rx" scoped="" ref="0x7ff1d507c340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff1d507c4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff1d507c660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff1d507c7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff1d507c980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff1d507cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff1d507b5a0" loc="85:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff1d507b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff1d507b920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff1d507bab0"/>
        <function-ref name="led1On" scoped="" ref="0x7ff1d507bc40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff1d507bdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff1d507a020"/>
        <function-ref name="get" scoped="" ref="0x7ff1d507a1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff1d507a340"/>
        <function-ref name="led2On" scoped="" ref="0x7ff1d507a980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d507a660"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff1d507a4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7ff1d507a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7ff1d5081060" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7ff1d5081060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d5081400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d5081590"/>
        <function-ref name="request" scoped="" ref="0x7ff1d5081720"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d50818b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d5081a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d5086e80" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d5086e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d5085240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d50853d0"/>
        <function-ref name="request" scoped="" ref="0x7ff1d5085560"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d50856f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d5085880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7ff1d5084a50" loc="78:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7ff1d5084a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7ff1d5084dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7ff1d5082020"/>
        <function-ref name="splitRead" scoped="" ref="0x7ff1d50821b0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d5082340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7ff1d507cde0" loc="84:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff1d507cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff1d507b180"/>
        <function-ref name="txDone" scoped="" ref="0x7ff1d507b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7ff1d507ac50" loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7ff1d507ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d5079020"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d50791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7ff1d506a8a0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff1d506a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d506ac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7ff1d506d3b0" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff1d506d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff1d506d730"/>
        <function-ref name="txDone" scoped="" ref="0x7ff1d506d8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7ff1d5074860" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff1d5074860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff1d5074be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff1d5074d70"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff1d5071020"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff1d50711b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff1d5071340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff1d50714d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff1d5071660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff1d50717f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff1d5071980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff1d5071b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff1d5071ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff1d5071e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff1d5070020"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff1d50702b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff1d5070440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff1d50705d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff1d5070760"/>
        <function-ref name="isUart" scoped="" ref="0x7ff1d50708f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff1d5070a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff1d5070c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff1d5070da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff1d506f020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff1d506f1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff1d506f340"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d506f4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff1d506f860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff1d506f9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff1d506fb80"/>
        <function-ref name="tx" scoped="" ref="0x7ff1d506fd10"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff1d506e020"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff1d506e1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff1d506e340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff1d506e4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff1d506e660"/>
        <function-ref name="rx" scoped="" ref="0x7ff1d506e7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff1d506e980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff1d506eb10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff1d506eca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff1d506ee30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff1d506d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7ff1d5030670" loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7ff1d5030670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d50309f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5030b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5030d10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d502f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d502f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d502f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d502f4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d502f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d502f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d502f980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d502fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d502fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d502fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d502e120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d502e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ff1d5063dc0" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ff1d5063dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff1d5062180"/>
        <function-ref name="txDone" scoped="" ref="0x7ff1d5062310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7ff1d502e670" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7ff1d502e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d502e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d502eb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d502ed10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d502d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d502d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d502d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d502d4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d502d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d502d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d502d980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d502db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d502dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d502de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d502c120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d502c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7ff1d502c670" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7ff1d502c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d502c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d502cb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d502cd10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d502b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d502b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d502b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d502b4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d502b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d502b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d502b980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d502bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d502bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d502be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d502a120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d502a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7ff1d5067020" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7ff1d5067020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff1d50673a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff1d5067530"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff1d50676c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff1d5067850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff1d50679e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff1d5067b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff1d5067d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff1d5066020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff1d50661b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff1d5066340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff1d50664d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff1d5066660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff1d50667f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff1d5066a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff1d5066c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff1d5066da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff1d5065020"/>
        <function-ref name="isUart" scoped="" ref="0x7ff1d50651b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff1d5065340"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff1d50654d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff1d5065660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff1d50657f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff1d5065980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff1d5065b10"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d5065ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff1d5064220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff1d50643b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff1d5064540"/>
        <function-ref name="tx" scoped="" ref="0x7ff1d50646d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff1d5064860"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff1d50649f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff1d5064b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff1d5064d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff1d5063020"/>
        <function-ref name="rx" scoped="" ref="0x7ff1d50631b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff1d5063340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff1d50634d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff1d5063660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff1d50637f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff1d5063980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7ff1d50395b0" loc="79:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7ff1d50395b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ff1d5039930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ff1d5039ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ff1d5039c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ff1d5039de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ff1d5060020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ff1d50601b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ff1d5060340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ff1d50604d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d5060660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ff1d50607f0"/>
        <function-ref name="getData" scoped="" ref="0x7ff1d5060980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ff1d5060b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ff1d5060ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ff1d505f020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ff1d505f1b0"/>
        <function-ref name="getIV" scoped="" ref="0x7ff1d505f340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ff1d505f4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ff1d505f660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ff1d505f7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ff1d505f980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ff1d505fb10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ff1d505fca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7ff1d505fe30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ff1d5038020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ff1d50381b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ff1d5038540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ff1d50386d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ff1d5038860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ff1d50389f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ff1d5038b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ff1d5038d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ff1d5037020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ff1d50371b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ff1d5037340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ff1d50374d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ff1d5037660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ff1d50377f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ff1d5037980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ff1d5037b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ff1d5037ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ff1d5037e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ff1d5036020"/>
        <function-ref name="setData" scoped="" ref="0x7ff1d50361b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ff1d5036340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ff1d50364d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ff1d5036660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ff1d50367f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ff1d5036980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ff1d5036b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ff1d5035420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ff1d50355b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ff1d5035740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ff1d50358d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ff1d5035a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ff1d5035bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ff1d5035d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ff1d5034020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ff1d50341b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ff1d5034340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7ff1d5032670" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7ff1d5032670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d50329f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5032b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5032d10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5031020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d50311b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5031340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d50314d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5031660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d50317f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5031980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5031b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5031ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5031e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5030120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d50302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ff1d5062750" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff1d5062750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d5062ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7ff1d5034700" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7ff1d5034700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d5034a80"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d5034c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d5034da0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d5033020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d50331b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d5033340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d50334d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d5033660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d50337f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d5033980"/>
        <function-ref name="set" scoped="" ref="0x7ff1d5033b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d5033ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d5033e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d5032120"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d50322b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff1d41662c0" loc="42:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff1d41662c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff1d4166640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff1d41667d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7ff1d415f440" loc="46:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff1d415f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d415f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff1d4158760" loc="51:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d4158760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff1d4158ae0"/>
        <function-ref name="configure" scoped="" ref="0x7ff1d4158c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7ff1d415fa50" loc="48:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff1d415fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ff1d415fdd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ff1d415e020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ff1d415e1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ff1d415e340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ff1d415e4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ff1d415e660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ff1d415e7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ff1d415e980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d415eb10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ff1d415eca0"/>
        <function-ref name="getData" scoped="" ref="0x7ff1d415ee30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ff1d415d020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ff1d415d1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ff1d415d440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ff1d415d5d0"/>
        <function-ref name="getIV" scoped="" ref="0x7ff1d415d760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ff1d415d8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ff1d415da80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ff1d415dc10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ff1d415dda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ff1d415c020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ff1d415c1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7ff1d415c340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ff1d415c4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ff1d415c660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ff1d415c9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ff1d415cb80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ff1d415cd10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ff1d415b020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ff1d415b1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ff1d415b340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ff1d415b4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ff1d415b660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ff1d415b7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ff1d415b980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ff1d415bb10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ff1d415bca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ff1d415be30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ff1d415a020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ff1d415a1b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ff1d415a340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ff1d415a4d0"/>
        <function-ref name="setData" scoped="" ref="0x7ff1d415a660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ff1d415a7f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ff1d415a980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ff1d415ab10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ff1d415aca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ff1d415ae30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ff1d4159020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ff1d41595b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ff1d4159740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ff1d41598d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ff1d4159a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ff1d4159bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ff1d4159d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ff1d4158020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ff1d41581b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ff1d4158340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ff1d41584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7ff1d4161c10" loc="45:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff1d4161c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff1d415f020"/>
        <function-ref name="txDone" scoped="" ref="0x7ff1d415f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d4167640" loc="41:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d4167640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d41679c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d4167b50"/>
        <function-ref name="request" scoped="" ref="0x7ff1d4167ce0"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d4167e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d4166030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7ff1d41652b0" loc="44:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff1d41652b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff1d4165630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff1d41657c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff1d4165950"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff1d4165ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff1d4165c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff1d4165e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff1d4164020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff1d41641b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff1d4164340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff1d41644d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff1d4164660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff1d41647f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff1d4164980"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff1d4164c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff1d4164da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff1d4163020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff1d41631b0"/>
        <function-ref name="isUart" scoped="" ref="0x7ff1d4163340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff1d41634d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff1d4163660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff1d41637f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff1d4163980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff1d4163b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff1d4163ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d4163e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff1d4162220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff1d41623b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff1d4162540"/>
        <function-ref name="tx" scoped="" ref="0x7ff1d41626d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff1d4162860"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff1d41629f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff1d4162b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff1d4162d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff1d4161020"/>
        <function-ref name="rx" scoped="" ref="0x7ff1d41611b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff1d4161340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff1d41614d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff1d4161660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff1d41617f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff1d4161980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff1d4166a60" loc="43:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff1d4166a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff1d4166de0"/>
        <function-ref name="userId" scoped="" ref="0x7ff1d4165020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff1d4f8b8a0" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff1d4f8b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff1d4f8bc20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff1d4f8bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff1d4f88020" loc="45:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d4f88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff1d4f883a0"/>
        <function-ref name="configure" scoped="" ref="0x7ff1d4f88530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ff1d4f90a80" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ff1d4f90a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff1d4f90e00"/>
        <function-ref name="txDone" scoped="" ref="0x7ff1d4f8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d4f8c5c0" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d4f8c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d4f8c940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d4f8cad0"/>
        <function-ref name="request" scoped="" ref="0x7ff1d4f8cc60"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d4f8cdf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d4f8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ff1d4f8d9a0" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff1d4f8d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d4f8dd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff1d4f89130" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff1d4f89130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff1d4f894b0"/>
        <function-ref name="userId" scoped="" ref="0x7ff1d4f89640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7ff1d4f714b0" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff1d4f714b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff1d4f71830"/>
        <function-ref name="userId" scoped="" ref="0x7ff1d4f719c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ff1d4f845c0" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ff1d4f845c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff1d4f84960"/>
        <function-ref name="txDone" scoped="" ref="0x7ff1d4f84af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7ff1d4f73e70" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7ff1d4f73e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d4f71220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ff1d4f73020" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff1d4f73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d4f733c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7ff1d4f73690" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7ff1d4f73690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff1d4f73a10"/>
        <function-ref name="txDone" scoped="" ref="0x7ff1d4f73ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff1d4ef8bf0" loc="92:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff1d4ef8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff1d4ef7020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff1d4ef71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff1d4ef6930" loc="96:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d4ef6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff1d4ef6cd0"/>
        <function-ref name="configure" scoped="" ref="0x7ff1d4ef6e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7ff1d4ef7400" loc="93:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff1d4ef7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d4ef7780"/>
        <function-ref name="requested" scoped="" ref="0x7ff1d4ef7910"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d4ef7aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d4ef7c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff1d4ef7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d4ef9e60" loc="91:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d4ef9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d4ef8230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d4ef83c0"/>
        <function-ref name="request" scoped="" ref="0x7ff1d4ef8550"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d4ef86e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d4ef8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff1d4ef6060" loc="94:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff1d4ef6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff1d4ef63e0"/>
        <function-ref name="userId" scoped="" ref="0x7ff1d4ef6570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d40ee140" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d40ee140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d40ee4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7ff1d40ee750" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7ff1d40ee750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff1d40eead0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff1d40eec60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff1d40eedf0"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff1d40ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff1d40ea850" loc="55:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff1d40ea850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff1d40eabf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff1d40ead80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff1d40e8590" loc="60:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff1d40e8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff1d40e8930"/>
        <function-ref name="configure" scoped="" ref="0x7ff1d40e8ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ff1d40e8d50" loc="61:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ff1d40e8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff1d40e7100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff1d40e7290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff1d40e7420"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff1d40e75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7ff1d40e9020" loc="56:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff1d40e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d40e93a0"/>
        <function-ref name="requested" scoped="" ref="0x7ff1d40e9530"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d40e96c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d40e9850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff1d40e99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff1d40e7800" loc="62:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff1d40e7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff1d40e7b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff1d40e7d10"/>
        <function-ref name="led1On" scoped="" ref="0x7ff1d40e6020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff1d40e61b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff1d40e6340"/>
        <function-ref name="get" scoped="" ref="0x7ff1d40e64d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff1d40e6660"/>
        <function-ref name="led0On" scoped="" ref="0x7ff1d40e6ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d40e6980"/>
        <function-ref name="led2On" scoped="" ref="0x7ff1d40e67f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff1d40e6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d40eb970" loc="54:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d40eb970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d40ebd10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d40ea020"/>
        <function-ref name="request" scoped="" ref="0x7ff1d40ea1b0"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d40ea340"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d40ea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff1d40e9c30" loc="57:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff1d40e9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff1d40e8020"/>
        <function-ref name="userId" scoped="" ref="0x7ff1d40e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7ff1d40e5020" loc="75:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7ff1d40e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d40e53a0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d40e5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7ff1d4eef880" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff1d4eef880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ff1d4eefc00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ff1d4eefd90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ff1d4eec020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ff1d4eec1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ff1d4eec340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ff1d4eec4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ff1d4eec660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ff1d4eec7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d4eec980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ff1d4eecb10"/>
        <function-ref name="getData" scoped="" ref="0x7ff1d4eecca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ff1d4eece30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ff1d4eeb020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ff1d4eeb2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ff1d4eeb440"/>
        <function-ref name="getIV" scoped="" ref="0x7ff1d4eeb5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ff1d4eeb760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ff1d4eeb8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ff1d4eeba80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ff1d4eebc10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ff1d4eebda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ff1d4eea020"/>
        <function-ref name="isI2C" scoped="" ref="0x7ff1d4eea1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ff1d4eea340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ff1d4eea4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ff1d4eea860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ff1d4eea9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ff1d4eeab80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ff1d4eead10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ff1d4ee9020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ff1d4ee91b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ff1d4ee9340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ff1d4ee94d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ff1d4ee9660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ff1d4ee97f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ff1d4ee9980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ff1d4ee9b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ff1d4ee9ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ff1d4ee9e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ff1d4ee8020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ff1d4ee81b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ff1d4ee8340"/>
        <function-ref name="setData" scoped="" ref="0x7ff1d4ee84d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ff1d4ee8660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ff1d4ee87f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ff1d4ee8980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ff1d4ee8b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ff1d4ee8ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ff1d4ee8e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ff1d4ee7420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ff1d4ee75b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ff1d4ee7740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ff1d4ee78d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ff1d4ee7a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ff1d4ee7bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ff1d4ee7d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ff1d4ee6020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ff1d4ee61b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ff1d4ee6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7ff1d4edb250" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7ff1d4edb250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff1d4edb5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff1d4edb760"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff1d4edb8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff1d4edba80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff1d4edbc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff1d4edbda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff1d4eda020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff1d4eda1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff1d4eda340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff1d4eda4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff1d4eda660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff1d4eda7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff1d4eda980"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff1d4edac10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff1d4edada0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff1d4ed9020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff1d4ed91b0"/>
        <function-ref name="isUart" scoped="" ref="0x7ff1d4ed9340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff1d4ed94d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff1d4ed9660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff1d4ed97f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff1d4ed9980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff1d4ed9b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff1d4ed9ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d4ed9e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff1d4ed8220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff1d4ed83b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff1d4ed8540"/>
        <function-ref name="tx" scoped="" ref="0x7ff1d4ed86d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff1d4ed8860"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff1d4ed89f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff1d4ed8b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff1d4ed8d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff1d4ed7020"/>
        <function-ref name="rx" scoped="" ref="0x7ff1d4ed71b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff1d4ed7340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff1d4ed74d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff1d4ed7660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff1d4ed77f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff1d4ed7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7ff1d4ed5cb0" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7ff1d4ed5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d4ed40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d4ed4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d4ed43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d4ed4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d4ed46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d4ed4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d4ed4a00"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4ed4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d4ed4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d4ed3020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4ed31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d4ed3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d4ed34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d4ed3760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d4ed38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7ff1d4ee3430" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7ff1d4ee3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ff1d4ee37b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ff1d4ee3940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ff1d4ee3ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ff1d4ee3c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ff1d4ee3df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ff1d4ee1020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ff1d4ee11b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ff1d4ee1340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d4ee14d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ff1d4ee1660"/>
        <function-ref name="getData" scoped="" ref="0x7ff1d4ee17f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ff1d4ee1980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ff1d4ee1b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ff1d4ee1da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ff1d4ee0020"/>
        <function-ref name="getIV" scoped="" ref="0x7ff1d4ee01b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ff1d4ee0340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ff1d4ee04d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ff1d4ee0660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ff1d4ee07f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ff1d4ee0980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ff1d4ee0b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7ff1d4ee0ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ff1d4ee0e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ff1d4edf020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ff1d4edf3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ff1d4edf540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ff1d4edf6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ff1d4edf860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ff1d4edf9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ff1d4edfb80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ff1d4edfd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ff1d4ede020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ff1d4ede1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ff1d4ede340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ff1d4ede4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ff1d4ede660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ff1d4ede7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ff1d4ede980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ff1d4edeb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ff1d4edeca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ff1d4edee30"/>
        <function-ref name="setData" scoped="" ref="0x7ff1d4edd020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ff1d4edd1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ff1d4edd340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ff1d4edd4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ff1d4edd660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ff1d4edd7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ff1d4edd980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ff1d4edc020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ff1d4edc1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ff1d4edc340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ff1d4edc4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ff1d4edc660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ff1d4edc7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ff1d4edc980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ff1d4edcb10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ff1d4edcca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ff1d4edce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7ff1d4ed7d40" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7ff1d4ed7d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d4ed60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d4ed6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d4ed6400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d4ed6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d4ed6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d4ed68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d4ed6a40"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4ed6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d4ed6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d4ed5020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4ed51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d4ed5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d4ed54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d4ed5760"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d4ed58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff1d4dc1c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff1d4dc1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dbf210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dbf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff1d4dcbda0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff1d4dcbda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dca180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff1d4dc4b50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff1d4dc4b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dc3020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff1d4dbe670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d4dbe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dbe9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dbeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff1d4db7e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff1d4db7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db6210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff1d4dbee50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff1d4dbee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dbd210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dbd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff1d4daa2f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff1d4daa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4daa670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4daa800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff1d4dad2f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff1d4dad2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dad670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dad800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff1d4dc9120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff1d4dc9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dc94a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff1d4db2670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff1d4db2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db29f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff1d4dae2f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff1d4dae2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dae670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dae800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff1d4dc3c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff1d4dc3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dc2020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff1d4dc2c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d4dc2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dc1020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dc11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff1d4db8670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff1d4db8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db89f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff1d4dbbe50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff1d4dbbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dba210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff1d4dbd670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff1d4dbd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dbd9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dbdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff1d4dcc760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d4dcc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff1d4dccae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff1d4dccc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff1d4dcce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff1d4dc8aa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff1d4dc8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dc8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff1d4dc7120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff1d4dc7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dc75a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff1d4db1a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff1d4db1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db1df0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff1d4dc7870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff1d4dc7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dc7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff1d4daead0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff1d4daead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4daee50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff1d4dc9dc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff1d4dc9dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dc8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff1d4db4e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff1d4db4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db2210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff1d4dc2480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff1d4dc2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dc2800"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dc2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff1d4dc3480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d4dc3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dc3800"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dc3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff1d4dcb750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff1d4dcb750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dcbad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff1d4db5e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff1d4db5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db4210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff1d4db6670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff1d4db6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db69f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff1d4db4670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff1d4db4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db49f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff1d4dacad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff1d4dacad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dace50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4daa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff1d4dadad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff1d4dadad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dade50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff1d4dba670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff1d4dba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dba9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dbab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff1d4db6e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff1d4db6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db5210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff1d4dafad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff1d4dafad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dafe50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff1d4dbc670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff1d4dbc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dbc9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dbcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff1d4daaad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff1d4daaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d4daae50"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d4da9020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4da91b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d4da9340"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d4da94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff1d4dcb100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff1d4dcb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dcb480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff1d4dc4370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff1d4dc4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dc46f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dc4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff1d4dc1480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff1d4dc1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dc1800"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dc1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff1d4db8e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff1d4db8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db7210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff1d4dbde50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff1d4dbde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dbc210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dbc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff1d4db7670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff1d4db7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db79f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff1d4dbf670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff1d4dbf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dbf9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dbfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff1d4dca450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff1d4dca450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dca7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff1d4dbfe50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d4dbfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dbe210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dbe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d4dcea80" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d4dcea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d4dcee00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d4dcc020"/>
        <function-ref name="request" scoped="" ref="0x7ff1d4dcc1b0"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d4dcc340"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d4dcc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff1d4dc5020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff1d4dc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dc53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff1d4dc5cc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff1d4dc5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dc40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff1d4daf2f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff1d4daf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4daf670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4daf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff1d4db0ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff1d4db0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db0e50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4daf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff1d4dc8450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff1d4dc8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dc87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff1d4db02f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff1d4db02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db0670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff1d4dac2f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff1d4dac2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dac670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dac800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff1d4dbae50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff1d4dbae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db8210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff1d4db5670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff1d4db5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db59f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff1d4dcaaa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff1d4dcaaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dcae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff1d4dc9770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff1d4dc9770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dc9af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff1d4dbce50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff1d4dbce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dbb210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dbb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff1d4dc5670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff1d4dc5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4dc59f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff1d4dbb670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff1d4dbb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4dbb9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4dbbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff1d4db2e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff1d4db2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4db1610"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4db17a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff1d4da97a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff1d4da97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d4da9b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d4da9cb0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4da9e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d4da8020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d4da81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff1d4d94c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff1d4d94c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d93210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff1d4d9fda0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff1d4d9fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d9e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff1d4d98b50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff1d4d98b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d96020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff1d4d92670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d4d92670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d929f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d92b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff1d4d8be50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff1d4d8be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d89210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff1d4d92e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff1d4d92e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d91210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff1d4d7e2f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff1d4d7e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d7e670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d7e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff1d4d802f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff1d4d802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d80670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d80800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff1d4d9c120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff1d4d9c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d9c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff1d4d86670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff1d4d86670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d869f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d86b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff1d4d812f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff1d4d812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d81670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d81800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff1d4d96c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff1d4d96c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d95020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff1d4d95c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d4d95c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d94020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff1d4d8c670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff1d4d8c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d8c9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d8cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff1d4d8ee50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff1d4d8ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d8d210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d8d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff1d4d91670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff1d4d91670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d919f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d91b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff1d4da0760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d4da0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff1d4da0ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff1d4da0c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff1d4da0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff1d4d9baa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff1d4d9baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d9be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff1d4d9a120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff1d4d9a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d9a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff1d4d85a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff1d4d85a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d85df0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff1d4d9a870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff1d4d9a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d9abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff1d4d81ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff1d4d81ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d81e50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff1d4d9cdc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff1d4d9cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d9b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff1d4d87e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff1d4d87e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d86210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff1d4d95480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff1d4d95480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d95800"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d95990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff1d4d96480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d4d96480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d96800"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d96990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff1d4d9f750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff1d4d9f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d9fad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff1d4d88e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff1d4d88e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d87210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff1d4d89670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff1d4d89670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d899f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d89b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff1d4d87670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff1d4d87670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d879f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d87b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff1d4d7fad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff1d4d7fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d7fe50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff1d4d80ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff1d4d80ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d80e50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff1d4d8d670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff1d4d8d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d8d9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d8db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff1d4d89e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff1d4d89e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d88210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff1d4d83ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff1d4d83ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d83e50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff1d4d8f670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff1d4d8f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d8f9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d8fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff1d4d7ead0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff1d4d7ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d4d7ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d4d7d020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d7d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d4d7d340"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d4d7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff1d4d9f100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff1d4d9f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d9f480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff1d4d98370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff1d4d98370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d986f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d98880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff1d4d94480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff1d4d94480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d94800"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d94990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff1d4d8ce50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff1d4d8ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d8b210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d8b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff1d4d91e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff1d4d91e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d8f210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d8f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff1d4d8b670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff1d4d8b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d8b9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d8bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff1d4d93670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff1d4d93670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d939f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d93b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff1d4d9e450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff1d4d9e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d9e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff1d4d93e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d4d93e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d92210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d4da19e0" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d4da19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d4da1d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d4da0020"/>
        <function-ref name="request" scoped="" ref="0x7ff1d4da01b0"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d4da0340"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d4da04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff1d4d99020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff1d4d99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff1d4d99cc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff1d4d99cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d980a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff1d4d832f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff1d4d832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d83670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d83800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff1d4d84ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff1d4d84ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d84e50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff1d4d9b450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff1d4d9b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d9b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff1d4d842f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff1d4d842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d84670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d84800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff1d4d7f2f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff1d4d7f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d7f670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d7f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff1d4d8de50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff1d4d8de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d8c210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d8c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff1d4d88670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff1d4d88670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d889f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d88b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff1d4d9eaa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff1d4d9eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d9ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff1d4d9c770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff1d4d9c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d9caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff1d4d8fe50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff1d4d8fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d8e210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d8e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff1d4d99670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff1d4d99670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4d999f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff1d4d8e670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff1d4d8e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d8e9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d8eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff1d4d86e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff1d4d86e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d85610"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d857a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff1d4d7d7a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff1d4d7d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d4d7db20"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d4d7dcb0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d7de40"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d4d7c020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d4d7c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7ff1d4d75b30" loc="54:../../../..//tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff1d4d75b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7ff1d4d71020"/>
        <function-ref name="changed" scoped="" ref="0x7ff1d4d711b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7ff1d4d71340"/>
        <function-ref name="setAddress" scoped="" ref="0x7ff1d4d714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7ff1d4d74d30" loc="13:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff1d4d74d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7ff1d4d5d0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7ff1d4d58310" loc="5:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff1d4d58310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7ff1d4d58690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7ff1d4d55880" loc="8:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7ff1d4d55880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d55c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7ff1d4d4a020" loc="8:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7ff1d4d4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d4a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7ff1d4d40bd0" loc="14:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7ff1d4d40bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d44020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d441b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7ff1d4d44530" loc="15:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7ff1d4d44530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff1d4d448b0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4d44a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7ff1d4d45140" loc="11:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7ff1d4d45140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d454c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7ff1d4d49c50" loc="8:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7ff1d4d49c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d30020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d301b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7ff1d4d30540" loc="11:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7ff1d4d30540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d4d308c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d4d30a50"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d4d30be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d4d30d70"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4d2f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d4d2f1b0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4d2f340"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d4d2f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7ff1d4d27950" loc="15:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7ff1d4d27950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b26d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff1d5b25180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7ff1d4d2a780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7ff1d4d2c150" loc="11:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7ff1d4d2c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4d2c4d0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4d2c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7ff1d4d2c9f0" loc="14:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7ff1d4d2c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d4d2cd70"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d4d2b020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d4d2b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d4d2b340"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4d2b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d4d2b660"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4d2b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d4d2b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7ff1d4d2eca0" loc="41:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7ff1d4d2eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b26d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff1d5b25180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7ff1d4d06ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7ff1d4d04a90" loc="54:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7ff1d4d04a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b26d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff1d5b25180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7ff1d4cf58d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff1d4cf4020" loc="55:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff1d4cf4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b26d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff1d5b25180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4cf4e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d4cf2800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d4cf2340"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d4cf2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7ff1d4cee530" loc="46:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7ff1d4cee530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b26d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff1d5b25180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4ced3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d4cedd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d4ced890"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d4cec260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ff1d4ce7020" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d4ce7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d4ce73a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d4ce7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d4ce76c0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4ce7850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d4ce79e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d4ce7b70"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d4ce7d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d4ce6020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d4ce61b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d4ce6340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d4ce64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff1d4ceae50" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff1d4ceae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b26d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff1d5b25180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4ce9ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d4ce8670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d4ce81b0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d4ce8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7ff1d4d31590" loc="3:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7ff1d4d31590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d4d31910"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d4d31aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d4d31c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d4d31dc0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4ce2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d4ce21b0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4ce2340"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d4ce24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff1d4cdfc50" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff1d4cdfc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d4cde020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d4cde1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff1d4cde340"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d4cde4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d4cde660"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff1d4cde7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d4cde980"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4cdeb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff1d4cdeca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff1d4cdee30"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4cdd020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff1d4cdd1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff1d4cdd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff1d4cdd5d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d4cdd760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff1d4ce19e0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff1d4ce19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d4ce1d60"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d4cdf020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d4cdf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d4cdf340"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4cdf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d4cdf660"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4cdf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d4cdf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff1d4ce3a20" loc="14:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff1d4ce3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff1d4ce3da0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4cd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff1d4cc9cb0" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d4cc9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff1d4cc80a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff1d4cc8230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff1d4cc83c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff1d4cc8550"/>
        <function-ref name="setCca" scoped="" ref="0x7ff1d4cc86e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff1d4cc8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7ff1d4cc5990" loc="47:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7ff1d4cc5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff1d4cc5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7ff1d4cc9020" loc="45:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff1d4cc9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d4cc93a0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d4cc9530"/>
        <function-ref name="modify" scoped="" ref="0x7ff1d4cc96c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d4cc9850"/>
        <function-ref name="resend" scoped="" ref="0x7ff1d4cc99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff1d4ccc6c0" loc="44:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff1d4ccc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff1d4ccca40"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4cccbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7ff1d4cc7150" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7ff1d4cc7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff1d4cc74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff1d4cbb970" loc="51:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d4cbb970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff1d4cbbcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff1d4cbbe80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff1d4cba030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff1d4cba1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7ff1d4cba350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff1d4cba4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7ff1d4cb1950" loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ff1d4cb1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff1d4caf020"/>
        <function-ref name="clear" scoped="" ref="0x7ff1d4caf750"/>
        <function-ref name="isValid" scoped="" ref="0x7ff1d4cb0780"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4cafe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7ff1d4c9a020" loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d4c9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4c9a3a0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4c9a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7ff1d4c9a890" loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff1d4c9a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4c9ac10"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4c9ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7ff1d4cba900" loc="52:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7ff1d4cba900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff1d4cbac80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7ff1d4c9d530" loc="72:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff1d4c9d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c9d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7ff1d4cac880" loc="60:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7ff1d4cac880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7ff1d4cacc00"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d4cacd90"/>
        <function-ref name="captured" scoped="" ref="0x7ff1d4ca5020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7ff1d4ca51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7ff1d4cb9ae0" loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7ff1d4cb9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d4cb5390"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d4cb7360"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d4cb7ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d4cb7820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d4cb5850"/>
        <function-ref name="start" scoped="" ref="0x7ff1d4cb8970"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4cb8e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff1d4cb5d00" loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4cb5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff1d4cb20a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff1d4cb2230"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff1d4cb23c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff1d4cb2550"/>
        <function-ref name="getPower" scoped="" ref="0x7ff1d4cb26e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff1d4cb2870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7ff1d4c9f550" loc="68:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff1d4c9f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4c9f8d0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4c9fa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7ff1d4c9fe00" loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d4c9fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4c9e1c0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4c9e350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7ff1d4c93d40" loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7ff1d4c93d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d4c970e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7ff1d4c97270"/>
        <function-ref name="sfd" scoped="" ref="0x7ff1d4c97400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff1d4cbcbc0" loc="50:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff1d4cbcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d4cbb020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d4cbb1b0"/>
        <function-ref name="modify" scoped="" ref="0x7ff1d4cbb340"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d4cbb4d0"/>
        <function-ref name="resend" scoped="" ref="0x7ff1d4cbb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7ff1d4ca1d10" loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d4ca1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff1d4ca00e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff1d4ca0270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff1d4ca0400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7ff1d4c9dc60" loc="73:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff1d4c9dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c9c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7ff1d4ca4820" loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ff1d4ca4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d4ca4ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d4ca4d30"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d4ca3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d4ca31b0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4ca3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d4ca34d0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4ca3660"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d4ca37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d4cbec60" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d4cbec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d4cbc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff1d4cb2bb0" loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4cb2bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d4cb1020"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff1d4cb11b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff1d4cb1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7ff1d4ca6be0" loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff1d4ca6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4cac020"/>
        <function-ref name="isSet" scoped="" ref="0x7ff1d4cac1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d4cac340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4cac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7ff1d4c9c3e0" loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d4c9c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4c9c960"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4c9caf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ff1d4ca1020" loc="65:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ff1d4ca1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d4ca13a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d4ca1530"/>
        <function-ref name="request" scoped="" ref="0x7ff1d4ca16c0"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d4ca1850"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d4ca19e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7ff1d4ca5500" loc="61:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7ff1d4ca5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d4ca5980"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d4ca5b10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d4ca5ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d4ca5e30"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4ca4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d4ca41b0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4ca4340"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d4ca44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7ff1d4c99130" loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff1d4c99130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4c994b0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4c99640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7ff1d4c999c0" loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff1d4c999c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4c99d40"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4c98020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7ff1d4c9e6d0" loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff1d4c9e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c9ea50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7ff1d4ca3b40" loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7ff1d4ca3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d4ca2020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d4ca21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d4ca2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d4ca24d0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4ca2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d4ca27f0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4ca2980"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d4ca2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff1d4c976c0" loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff1d4c976c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff1d4c97a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff1d4c97bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7ff1d4c97d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff1d4c96020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff1d4c961b0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4c96340"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff1d4c964d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff1d4c96b10"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4c96660"/>
        <function-ref name="led0On" scoped="" ref="0x7ff1d4c967f0"/>
        <function-ref name="led2On" scoped="" ref="0x7ff1d4c96980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7ff1d4c9b5e0" loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d4c9b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4c9b960"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4c9baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff1d4cbc320" loc="49:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff1d4cbc320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff1d4cbc6a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4cbc830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7ff1d4ca0780" loc="67:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff1d4ca0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d4ca0b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d4ca0c90"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4ca0e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d4c9f020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d4c9f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7ff1d4c9ede0" loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff1d4c9ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c9d180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7ff1d4c9ce80" loc="76:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff1d4c9ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c9b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7ff1d4cb90f0" loc="53:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7ff1d4cb90f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff1d4cb9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff1d4bf9c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff1d4bf9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf8210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff1d4c03020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff1d4c03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff1d4bfdc70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff1d4bfdc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bfb020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bfb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff1d4bf7670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d4bf7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf79f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff1d4bf0e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff1d4bf0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bee210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff1d4bf7e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff1d4bf7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf6210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff1d4be32f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff1d4be32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4be3670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff1d4be52f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff1d4be52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4be5670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff1d4c01370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff1d4c01370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c016f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff1d4beb670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff1d4beb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4beb9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bebb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff1d4be62f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff1d4be62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4be6670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff1d4bfbc60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff1d4bfbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bfa020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bfa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff1d4bfac60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d4bfac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf9020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff1d4bf1670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff1d4bf1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf19f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff1d4bf3e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff1d4bf3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf2210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff1d4bf6670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff1d4bf6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf69f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff1d4c058f0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d4c058f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff1d4c05c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff1d4c05e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff1d4c04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff1d4c00d00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff1d4c00d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4bff0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff1d4bff370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff1d4bff370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4bff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff1d4beaa70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff1d4beaa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4beadf0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff1d4bffac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff1d4bffac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4bffe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff1d4be6ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff1d4be6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4be6e50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff1d4c00060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff1d4c00060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c003e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff1d4bece50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff1d4bece50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4beb210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4beb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff1d4bfa480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff1d4bfa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bfa800"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bfa990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff1d4bfb480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d4bfb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bfb800"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bfb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff1d4c04940" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff1d4c04940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c04cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff1d4bede50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff1d4bede50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bec210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff1d4bee670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff1d4bee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bee9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4beeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff1d4bec670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff1d4bec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bec9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4becb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff1d4be4ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff1d4be4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4be4e50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff1d4be5ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff1d4be5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4be5e50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff1d4bf2670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff1d4bf2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf29f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff1d4beee50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff1d4beee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bed210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff1d4be8ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff1d4be8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4be8e50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff1d4bf4670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff1d4bf4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf49f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff1d4be3ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff1d4be3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d4be3e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d4be2020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be21b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d4be2340"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d4be24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff1d4c042f0" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff1d4c042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c04670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff1d4bfd490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff1d4bfd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bfd810"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bfd9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff1d4bf9480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff1d4bf9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf9800"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff1d4bf1e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff1d4bf1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf0210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff1d4bf6e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff1d4bf6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf4210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff1d4bf0670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff1d4bf0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf09f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff1d4bf8670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff1d4bf8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf89f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff1d4c03670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff1d4c03670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c039f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff1d4bf8e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d4bf8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf7210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d4c06c30" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d4c06c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d4c05020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d4c051b0"/>
        <function-ref name="request" scoped="" ref="0x7ff1d4c05340"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d4c054d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d4c05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff1d4bfe160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff1d4bfe160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4bfe4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff1d4bfee00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff1d4bfee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4bfd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff1d4be82f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff1d4be82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4be8670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff1d4be9ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff1d4be9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4be9e50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff1d4c006b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff1d4c006b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c00a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff1d4be92f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff1d4be92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4be9670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff1d4be42f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff1d4be42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4be4670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff1d4bf2e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff1d4bf2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf1210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff1d4bed670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff1d4bed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bed9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bedb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff1d4c03cc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff1d4c03cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c010a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff1d4c019c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff1d4c019c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4c01d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff1d4bf4e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff1d4bf4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf3210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff1d4bfe7b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff1d4bfe7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4bfeb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff1d4bf3670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff1d4bf3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bf39f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bf3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff1d4bebe50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff1d4bebe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bea610"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bea7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff1d4be27a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff1d4be27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d4be2b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d4be2cb0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4be2e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d4be1020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d4be11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7ff1d4bd6df0" loc="42:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7ff1d4bd6df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d4bd11c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7ff1d4bd1350"/>
        <function-ref name="sfd" scoped="" ref="0x7ff1d4bd14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff1d4bd17c0" loc="43:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff1d4bd17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d4bd1b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7ff1d4bd0020" loc="44:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7ff1d4bd0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff1d4bd03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff1d4bd65c0" loc="41:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff1d4bd65c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff1d4bd6940"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4bd6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7ff1d4bc9380" loc="54:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7ff1d4bc9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d4bc9700"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d4bc9890"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d4bc9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d4bc9bb0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4bc9d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d4bc8020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4bc81b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d4bc8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7ff1d4bc2b90" loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ff1d4bc2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ff1d4bc1020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ff1d4bc11b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ff1d4bc1340"/>
        <function-ref name="syncDone" scoped="" ref="0x7ff1d4bc14d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ff1d4bc1660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ff1d4bc17f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7ff1d4bc1980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ff1d4bc1b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ff1d4bc1ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ff1d4bc1e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ff1d4bc0020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ff1d4bc01b0"/>
        <function-ref name="sync" scoped="" ref="0x7ff1d4bc0340"/>
        <function-ref name="getChannel" scoped="" ref="0x7ff1d4bc05d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ff1d4bc0760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7ff1d4baa9d0" loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7ff1d4baa9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d4baad50"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d4ba9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7ff1d4bc0d70" loc="65:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ff1d4bc0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff1d4bbd330"/>
        <function-ref name="clear" scoped="" ref="0x7ff1d4bbda60"/>
        <function-ref name="isValid" scoped="" ref="0x7ff1d4bbeba0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4bbc210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7ff1d4bc86b0" loc="55:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7ff1d4bc86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d4bc8a30"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d4bc8bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d4bc8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d4bc7020"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4bc71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d4bc7340"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4bc74d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d4bc7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7ff1d4bbbcb0" loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d4bbbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bb90a0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bb9230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7ff1d4bb9590" loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff1d4bb9590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bb9910"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bb9aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7ff1d4bb86d0" loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff1d4bb86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bb8a50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bb8be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff1d4bc3330" loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4bc3330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff1d4bc36b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff1d4bc3840"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff1d4bc39d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff1d4bc3b60"/>
        <function-ref name="getPower" scoped="" ref="0x7ff1d4bc3cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff1d4bc3e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7ff1d4bcc550" loc="49:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7ff1d4bcc550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d4bcc8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7ff1d4bcca60"/>
        <function-ref name="sfd" scoped="" ref="0x7ff1d4bccbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7ff1d4bc43a0" loc="60:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff1d4bc43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4bc4720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7ff1d4bca020" loc="53:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ff1d4bca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff1d4bca3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff1d4bca530"/>
        <function-ref name="toggle" scoped="" ref="0x7ff1d4bca6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff1d4bca850"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4bca9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff1d4bcab70"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4bcad00"/>
        <function-ref name="clr" scoped="" ref="0x7ff1d4bc9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7ff1d4bb7020" loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff1d4bb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bb73a0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bb7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d4bcd620" loc="47:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d4bcd620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d4bcd9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff1d4bc21e0" loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4bc21e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d4bc2560"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff1d4bc26f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff1d4bc2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff1d4bcb020" loc="50:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff1d4bcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d4bcb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ff1d4bc66e0" loc="58:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ff1d4bc66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d4bc6a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d4bc6bf0"/>
        <function-ref name="request" scoped="" ref="0x7ff1d4bc6d80"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d4bc5020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d4bc51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7ff1d4bb9e00" loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff1d4bb9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bb81c0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bb8350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7ff1d4bc5530" loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff1d4bc5530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d4bc58b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d4bc5a40"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bc5bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d4bc5d60"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d4bc4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7ff1d4bb78b0" loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff1d4bb78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4bb7e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7ff1d4bcb7c0" loc="51:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7ff1d4bcb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff1d4bcbb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff1d4bb6150" loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff1d4bb6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff1d4bb64d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff1d4bb6660"/>
        <function-ref name="led1On" scoped="" ref="0x7ff1d4bb67f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff1d4bb6980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff1d4bb6b10"/>
        <function-ref name="get" scoped="" ref="0x7ff1d4bb6ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff1d4bb6e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff1d4bb54d0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4bb5020"/>
        <function-ref name="led0On" scoped="" ref="0x7ff1d4bb51b0"/>
        <function-ref name="led2On" scoped="" ref="0x7ff1d4bb5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7ff1d4bbb3e0" loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d4bbb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d4bbb760"/>
        <function-ref name="write" scoped="" ref="0x7ff1d4bbb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7ff1d4bbcb10" loc="67:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff1d4bbcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4bbb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7ff1d4bc7a50" loc="56:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff1d4bc7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff1d4bc7dd0"/>
        <function-ref name="disable" scoped="" ref="0x7ff1d4bc6020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff1d4bc61b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff1d4bc6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7ff1d4bc4ad0" loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff1d4bc4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d4bc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff1d4bcdca0" loc="48:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff1d4bcdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff1d4bcc0a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4bcc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ff1d4b4aa70" loc="44:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff1d4b4aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ff1d4b4adf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ff1d4b4e670" loc="41:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4b4e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff1d4b4e9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff1d4b4eb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff1d4b4ed10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff1d4b4b020"/>
        <function-ref name="getPower" scoped="" ref="0x7ff1d4b4b1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff1d4b4b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7ff1d4b49550" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff1d4b49550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff1d4b48b00"/>
        <function-ref name="clear" scoped="" ref="0x7ff1d4b462a0"/>
        <function-ref name="isValid" scoped="" ref="0x7ff1d4b483d0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4b469d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7ff1d4b4a0c0" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4b4a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d4b4a440"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff1d4b4a5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff1d4b4a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7ff1d4b41480" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff1d4b41480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4b41800"/>
        <function-ref name="isSet" scoped="" ref="0x7ff1d4b41990"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d4b41b20"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4b41cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7ff1d4b45660" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff1d4b45660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff1d4b44ce0"/>
        <function-ref name="clear" scoped="" ref="0x7ff1d4b42460"/>
        <function-ref name="isValid" scoped="" ref="0x7ff1d4b445b0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4b42b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ff1d4b4b6e0" loc="42:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ff1d4b4b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff1d4b4ba60"/>
        <function-ref name="noAck" scoped="" ref="0x7ff1d4b4bbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff1d4b4bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ff1d4b3b020" loc="49:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff1d4b3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ff1d4b3b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ff1d4b40d20" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4b40d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff1d4b3d0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff1d4b3d270"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff1d4b3d400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff1d4b3d590"/>
        <function-ref name="getPower" scoped="" ref="0x7ff1d4b3d720"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff1d4b3d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7ff1d4b314a0" loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff1d4b314a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d4b31820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff1d4b319b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d4b31b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d4b31cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff1d4b31e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7ff1d4b3ba80" loc="51:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff1d4b3ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff1d4b38020"/>
        <function-ref name="clear" scoped="" ref="0x7ff1d4b38750"/>
        <function-ref name="isValid" scoped="" ref="0x7ff1d4b398d0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4b38e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7ff1d4b3c640" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4b3c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d4b3c9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff1d4b3cb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff1d4b3cce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7ff1d4b338b0" loc="53:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff1d4b338b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4b33c30"/>
        <function-ref name="isSet" scoped="" ref="0x7ff1d4b33dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d4b31020"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4b311b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7ff1d4b2d820" loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7ff1d4b2d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4b2f4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7ff1d4b2fb80" loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7ff1d4b2fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4b2e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7ff1d4b37af0" loc="52:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff1d4b37af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff1d4b340d0"/>
        <function-ref name="clear" scoped="" ref="0x7ff1d4b34800"/>
        <function-ref name="isValid" scoped="" ref="0x7ff1d4b35970"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4b33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ff1d4b3dc50" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ff1d4b3dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff1d4b3c020"/>
        <function-ref name="noAck" scoped="" ref="0x7ff1d4b3c1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff1d4b3c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ff1d4adc4e0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ff1d4adc4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4ad3150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff1d4ad37c0" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff1d4ad37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4ad2620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d4ad1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d4ad2ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d4ad14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7ff1d4acc020" loc="46:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7ff1d4acc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d4ac8630"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d4acba60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff1d4ac9920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff1d4ac94a0"/>
        <function-ref name="getdt" scoped="" ref="0x7ff1d4ac7020"/>
        <function-ref name="gett0" scoped="" ref="0x7ff1d4ac8ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d4ac9020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff1d4accc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff1d4ac8020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff1d4acb110"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4acb5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ff1d4ac7610" loc="47:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ff1d4ac7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4ac53d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d4acd130" loc="45:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d4acd130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d4acd4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff1d4a98870" loc="44:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff1d4a98870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d4a94090"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d4a96090"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d4a96a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d4a96550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d4a94550"/>
        <function-ref name="start" scoped="" ref="0x7ff1d4a976a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4a97bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d4a98020" loc="43:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d4a98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d4a983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff1d3fde260" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff1d3fde260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d3fdcb30"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d3fdda60"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d3fdc4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d3fdc020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d3fda020"/>
        <function-ref name="start" scoped="" ref="0x7ff1d3fdd090"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d3fdd5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d3fdf9d0" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d3fdf9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d3fdfd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ff1d3fc6a80" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d3fc6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d3fc6e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d3fc4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d3fc41b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d3fc4340"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d3fc44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ff1d3fc8020" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d3fc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d3fc83a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d3fc8530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d3fc86c0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d3fc8850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d3fc89e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d3fc8b70"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d3fc8d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d3fc7020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d3fc71b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d3fc7340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d3fc74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ff1d3fc7760" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d3fc7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d3fc7ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d3fc7c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d3fc7e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d3fc6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d3fc61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d3fc6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d3fc64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d3fc6660"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d3fc67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7ff1d3fbb760" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff1d3fbb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff1d3fbbae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff1d3fbbc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff1d3fbbe00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff1d3fba020"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d3fba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ff1d3fbfdd0" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff1d3fbfdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d3fbe180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff1d3fbe310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d3fbe4a0"/>
        <function-ref name="get" scoped="" ref="0x7ff1d3fbe630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d3fbe7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d3fbe950"/>
        <function-ref name="getMode" scoped="" ref="0x7ff1d3fbeae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d3fbec70"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d3fbee00"/>
        <function-ref name="setMode" scoped="" ref="0x7ff1d3fbd020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff1d3fbd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff1d3fc2bf0" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff1d3fc2bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d3fbf4e0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d3fc04e0"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d3fc0e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d3fc09a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d3fbf9a0"/>
        <function-ref name="start" scoped="" ref="0x7ff1d3fc1a80"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d3fc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d3fc2360" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d3fc2360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d3fc26e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ff1d3fbd440" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff1d3fbd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff1d3fbd7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff1d3fbd950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff1d3fbdae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff1d3fbdc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff1d3fbde00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff1d3fbb020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff1d3fbb1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff1d3fbb340"/>
        <function-ref name="setControl" scoped="" ref="0x7ff1d3fbb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff1d4ab7b70" loc="43:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff1d4ab7b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4ab49b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d4ab3360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d4ab4e70"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d4ab3820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7ff1d4aacb90" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7ff1d4aacb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4aab9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d4aaa4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d4aaa020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d4aaa9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff1d4aaf610" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff1d4aaf610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4aae5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d4aac020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d4aaea70"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d4aac4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff1d3fd85f0" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff1d3fd85f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d3fd6e50"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d3fd7e00"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d3fd6800"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d3fd6340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d3fd5340"/>
        <function-ref name="start" scoped="" ref="0x7ff1d3fd7430"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d3fd7940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7ff1d3fd2d20" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7ff1d3fd2d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5b265c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff1d5b26930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d3fcf670"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d3fd0550"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d3fcf020"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d3fd0a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d3fcfb30"/>
        <function-ref name="start" scoped="" ref="0x7ff1d3fd1b60"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d3fd0090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff1d3fd59b0" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff1d3fd59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d3fd37e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d3fd21b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d3fd3ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d3fd2670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7ff1d4a639c0" loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7ff1d4a639c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d4a63d40"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d4a61020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7ff1d4a66850" loc="49:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff1d4a66850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d4a63090"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d4a64090"/>
        <function-ref name="startAt" scoped="" ref="0x7ff1d4a64a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d4a64550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff1d4a63550"/>
        <function-ref name="start" scoped="" ref="0x7ff1d4a656a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4a65bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff1d4a6c2f0" loc="48:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d4a6c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d4a68870"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d4a6ae40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff1d4a69c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff1d4a69780"/>
        <function-ref name="getdt" scoped="" ref="0x7ff1d4a661e0"/>
        <function-ref name="gett0" scoped="" ref="0x7ff1d4a68cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d4a69300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff1d4a6a020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff1d4a68260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff1d4a6a4f0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4a6a9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7ff1d4a11a00" loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7ff1d4a11a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d4a11d80"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d4a10020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7ff1d4a17640" loc="49:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7ff1d4a17640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d4a13c40"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d4a141e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff1d4a13020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff1d4a14ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7ff1d4a11590"/>
        <function-ref name="gett0" scoped="" ref="0x7ff1d4a11110"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d4a14660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff1d4a15390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff1d4a13630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff1d4a15860"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4a15d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff1d4a1c150" loc="48:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d4a1c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d4a18700"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d4a1bc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff1d4a1aa50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff1d4a1a5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7ff1d4a17090"/>
        <function-ref name="gett0" scoped="" ref="0x7ff1d4a18ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d4a1a110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff1d4a1cd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff1d4a180d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff1d4a1b2a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d4a1b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ff1d4a0e2b0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ff1d4a0e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4a0d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff1d4a0d690" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff1d4a0d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff1d4a0b5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff1d4a0a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff1d4a0ba70"/>
        <function-ref name="overflow" scoped="" ref="0x7ff1d4a0a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff1d4a048c0" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d4a048c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d49f0cf0"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d49f1320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff1d49f00d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff1d49f1c20"/>
        <function-ref name="getdt" scoped="" ref="0x7ff1d49ef660"/>
        <function-ref name="gett0" scoped="" ref="0x7ff1d49ef1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d49f17a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff1d49f34e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff1d49f06e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff1d49f39b0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d49f3e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7ff1d49fb2c0" loc="49:../../../..//tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7ff1d49fb2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d49f7870"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d49fae40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff1d49f8c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff1d49f8780"/>
        <function-ref name="getdt" scoped="" ref="0x7ff1d49f61e0"/>
        <function-ref name="gett0" scoped="" ref="0x7ff1d49f7cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d49f8300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff1d49fa020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff1d49f7260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff1d49fa4f0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d49fa9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff1d49dfc60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff1d49dfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49dd210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49dd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff1d49e8020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff1d49e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff1d49e2c70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff1d49e2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49e1020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff1d49dc670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff1d49dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49dc9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49dcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff1d49d5e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff1d49d5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d4210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff1d49dce50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff1d49dce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49db210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49db3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff1d49c82f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff1d49c82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49c8670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49c8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff1d49cb2f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff1d49cb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49cb670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49cb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff1d49e7370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff1d49e7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e76f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff1d49d0670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff1d49d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d09f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff1d49cc2f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff1d49cc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49cc670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49cc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff1d49e1c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff1d49e1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49e0020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff1d49e0c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff1d49e0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49df020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff1d49d6670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff1d49d6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d69f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff1d49d9e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff1d49d9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d7210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff1d49db670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff1d49db670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49db9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49dbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff1d49ea970" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff1d49ea970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff1d49eacf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff1d49eae80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff1d49e9030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff1d49e6d00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff1d49e6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff1d49e4370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff1d49e4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff1d49cfa70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff1d49cfa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49cfdf0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff1d49e4ac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff1d49e4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff1d49ccad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff1d49ccad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49cce50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff1d49e6060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff1d49e6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e63e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff1d49d2e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff1d49d2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d0210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff1d49e0480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff1d49e0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49e0800"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49e0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff1d49e1480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff1d49e1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49e1800"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49e1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff1d49e9950" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff1d49e9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff1d49d3e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff1d49d3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d2210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff1d49d4670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff1d49d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d49f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff1d49d2670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff1d49d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d29f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff1d49c9ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff1d49c9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49c9e50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff1d49cbad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff1d49cbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49cbe50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff1d49d7670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff1d49d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d79f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff1d49d4e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff1d49d4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d3210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff1d49cdad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff1d49cdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49cde50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff1d49da670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff1d49da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49da9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49dab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff1d49c8ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff1d49c8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d49c8e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d49c7020"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49c71b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d49c7340"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d49c74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff1d49e9300" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff1d49e9300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e9680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff1d49e2490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff1d49e2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49e2810"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49e29a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff1d49df480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff1d49df480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49df800"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49df990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff1d49d6e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff1d49d6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d5210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff1d49dbe50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff1d49dbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49da210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49da3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff1d49d5670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff1d49d5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d59f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff1d49dd670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff1d49dd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49dd9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49ddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff1d49e8670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff1d49e8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e89f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff1d49dde50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff1d49dde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49dc210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d49ecd00" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d49ecd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d49ea0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d49ea230"/>
        <function-ref name="request" scoped="" ref="0x7ff1d49ea3c0"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d49ea550"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d49ea6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff1d49e3160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff1d49e3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff1d49e3e00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff1d49e3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff1d49cd2f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff1d49cd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49cd670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49cd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff1d49cead0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff1d49cead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49cee50"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff1d49e66b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff1d49e66b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e6a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff1d49ce2f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff1d49ce2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49ce670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49ce800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff1d49c92f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff1d49c92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49c9670"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49c9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff1d49d7e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff1d49d7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d6210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff1d49d3670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff1d49d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d39f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff1d49e8cc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff1d49e8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff1d49e79c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff1d49e79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e7d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff1d49dae50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff1d49dae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d9210"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff1d49e37b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff1d49e37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff1d49e3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff1d49d9670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff1d49d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49d99f0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49d9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff1d49d0e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff1d49d0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff1d49cf610"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49cf7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff1d49c77a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff1d49c77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff1d49c7b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff1d49c7cb0"/>
        <function-ref name="write" scoped="" ref="0x7ff1d49c7e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff1d49c6020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff1d49c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7ff1d499ea20" loc="46:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ff1d499ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ff1d499eda0"/>
        <function-ref name="rand32" scoped="" ref="0x7ff1d499d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7ff1d499b920" loc="45:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7ff1d499b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d499e560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d49a29a0" loc="44:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d49a29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d49a2d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7ff1d4997a20" loc="48:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ff1d4997a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ff1d4997da0"/>
        <function-ref name="rand32" scoped="" ref="0x7ff1d4996020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7ff1d4998940" loc="47:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7ff1d4998940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d4997560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d4998080" loc="46:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d4998080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d4998400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff1d49a0aa0" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff1d49a0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff1d49a0e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff1d4989020"/>
        <function-ref name="isState" scoped="" ref="0x7ff1d49891b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff1d4989340"/>
        <function-ref name="requestState" scoped="" ref="0x7ff1d49894d0"/>
        <function-ref name="forceState" scoped="" ref="0x7ff1d4989660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff1d497b020" loc="44:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff1d497b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d497b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d497b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d497b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d497b850"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d497b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff1d497c220" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff1d497c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d497c5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d497c730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d497c8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d497ca50"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d497cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff1d4977e60" loc="45:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff1d4977e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d4976210"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d49763a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d4976530"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d49766c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d4976850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff1d497aa20" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff1d497aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d497ada0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d4977020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d49771b0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d4977340"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d49774d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7ff1d49758f0" loc="47:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ff1d49758f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ff1d4975c70"/>
        <function-ref name="rand32" scoped="" ref="0x7ff1d4975e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d4977750" loc="41:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d4977750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d4977ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff1d4974170" loc="48:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4974170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d49744f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff1d4974680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff1d4974810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7ff1d4976ae0" loc="46:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff1d4976ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff1d4976e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff1d4975020"/>
        <function-ref name="isState" scoped="" ref="0x7ff1d49751b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff1d4975340"/>
        <function-ref name="requestState" scoped="" ref="0x7ff1d49754d0"/>
        <function-ref name="forceState" scoped="" ref="0x7ff1d4975660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff1d4978690" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff1d4978690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff1d4978a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff1d4978ba0"/>
        <function-ref name="isState" scoped="" ref="0x7ff1d4978d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff1d4963020"/>
        <function-ref name="requestState" scoped="" ref="0x7ff1d49631b0"/>
        <function-ref name="forceState" scoped="" ref="0x7ff1d4963340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff1d495d950" loc="47:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff1d495d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d495dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff1d4960aa0" loc="42:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff1d4960aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d4960e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7ff1d495d200" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7ff1d495d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d495d580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff1d49573f0" loc="49:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff1d49573f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d4957770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d4959b70" loc="45:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d4959b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d4957020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff1d495ce30" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff1d495ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d49591e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff1d4957a70" loc="50:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4957a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d4957df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff1d4956020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff1d49561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7ff1d4959570" loc="44:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7ff1d4959570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d49598f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff1d4928020" loc="75:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff1d4928020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d49283a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff1d49286b0" loc="76:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff1d49286b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d4928a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d4928bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d4928d50"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d4927020"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d49271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff1d492c8e0" loc="65:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff1d492c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d492cc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d492cdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d492b020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d492b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d492b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7ff1d492bc90" loc="68:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7ff1d492bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d492a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d492a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d492a3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d492a550"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d492a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff1d492b5e0" loc="66:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff1d492b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d492b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d492dbe0" loc="64:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d492dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d492c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d492c1b0"/>
        <function-ref name="request" scoped="" ref="0x7ff1d492c340"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d492c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d492c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7ff1d492aa50" loc="69:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7ff1d492aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d492add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7ff1d4929170" loc="71:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7ff1d4929170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d49294f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff1d4929680"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d4929810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d49299a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff1d4929b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff1d491ed70" loc="58:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff1d491ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d491d180"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d491d310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d491d4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d491d630"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d491d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff1d491db10" loc="59:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff1d491db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d491c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7ff1d48efdb0" loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7ff1d48efdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff1d48ee180"/>
        <function-ref name="runTask" scoped="" ref="0x7ff1d48ee310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff1d491c2f0" loc="60:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d491c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff1d491c670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff1d491c800"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff1d491c990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff1d491cb20"/>
        <function-ref name="getPower" scoped="" ref="0x7ff1d491ccb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff1d491ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7ff1d4920a20" loc="51:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7ff1d4920a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d4920da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d491f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d491f1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d491f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d491f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ff1d491bb70" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ff1d491bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff1d491a020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff1d491a1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff1d491a340"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff1d491a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff1d491b170" loc="61:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d491b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d491b4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff1d491b680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff1d491b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7ff1d4920370" loc="49:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7ff1d4920370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d49206f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff1d49237b0" loc="46:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff1d49237b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d4923b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d4923cc0"/>
        <function-ref name="request" scoped="" ref="0x7ff1d4923e50"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d4922020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d49221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7ff1d49224d0" loc="48:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7ff1d49224d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d4922850"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d49229e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d4922b70"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d4922d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d4920020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7ff1d491f840" loc="52:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7ff1d491f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d491fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7ff1d491e020" loc="54:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7ff1d491e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d491e3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff1d491e530"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d491e6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d491e850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff1d491e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff1d48cfdd0" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff1d48cfdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff1d48ce180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7ff1d48ce410" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7ff1d48ce410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff1d48ce790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff1d48ce920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff1d48ceab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff1d48cec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff1d48c2b80" loc="46:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff1d48c2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff1d48c1020"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff1d48c11b0"/>
        <function-ref name="start" scoped="" ref="0x7ff1d48c1340"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d48c14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff1d48c0860" loc="51:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff1d48c0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d48c0be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d48c0d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d48bf020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d48bf1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d48bf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff1d48bf690" loc="52:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff1d48bf690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d48bfa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff1d48c6ce0" loc="43:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff1d48c6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d48c30a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d48c3230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d48c33c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d48c3550"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d48c36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff1d48c2080" loc="45:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff1d48c2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff1d48c2400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff1d48c2590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff1d48c2720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff1d48c28b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7ff1d48c1800" loc="47:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7ff1d48c1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff1d48c1b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff1d48c1d10"/>
        <function-ref name="isState" scoped="" ref="0x7ff1d48c0020"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff1d48c01b0"/>
        <function-ref name="requestState" scoped="" ref="0x7ff1d48c0340"/>
        <function-ref name="forceState" scoped="" ref="0x7ff1d48c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7ff1d48bfd90" loc="53:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7ff1d48bfd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff1d48be180"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff1d48be310"/>
        <function-ref name="start" scoped="" ref="0x7ff1d48be4a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d48be630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff1d48c3980" loc="44:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff1d48c3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d48c3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff1d48bb2d0" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff1d48bb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff1d48bb650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff1d48bb7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff1d48bb970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff1d48bbb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff1d48bd580" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff1d48bd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff1d48bd900"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff1d48bda90"/>
        <function-ref name="isState" scoped="" ref="0x7ff1d48bdc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff1d48bddb0"/>
        <function-ref name="requestState" scoped="" ref="0x7ff1d48bc020"/>
        <function-ref name="forceState" scoped="" ref="0x7ff1d48bc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff1d48aed70" loc="45:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff1d48aed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d48ad180"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d48ad310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d48ad4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d48ad630"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d48ad7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff1d48b1350" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff1d48b1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d48b16d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d48b1860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d48b19f0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d48b1b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d48b1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ff1d48ae020" loc="41:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ff1d48ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ff1d48ae3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7ff1d48ae530"/>
        <function-ref name="getRetries" scoped="" ref="0x7ff1d48ae6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ff1d48ae850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ff1d48ae9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7ff1d48a91c0" loc="44:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff1d48a91c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff1d48a9540"/>
        <function-ref name="noAck" scoped="" ref="0x7ff1d48a96d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff1d48a9860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ff1d48ac410" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ff1d48ac410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ff1d48ac790"/>
        <function-ref name="setRetries" scoped="" ref="0x7ff1d48ac920"/>
        <function-ref name="getRetries" scoped="" ref="0x7ff1d48acab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ff1d48acc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ff1d48acdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff1d4889690" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff1d4889690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d4889a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff1d488a860" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff1d488a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d488abe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d488ad70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d4889020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d48891b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d4889340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7ff1d4887610" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ff1d4887610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ff1d4887990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ff1d4887b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ff1d4887cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7ff1d4887e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ff1d4886020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ff1d48861b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7ff1d4886340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ff1d48864d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ff1d4886660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ff1d48867f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ff1d4886980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ff1d4886b10"/>
        <function-ref name="sync" scoped="" ref="0x7ff1d4886ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7ff1d4885020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ff1d48851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff1d488b8b0" loc="54:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff1d488b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff1d488bc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff1d488bdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff1d488a020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff1d488a1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7ff1d488a340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff1d488a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7ff1d488cce0" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7ff1d488cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7ff1d488b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7ff1d48841f0" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7ff1d48841f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff1d4884570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff1d4884700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff1d4884890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff1d4884a20"/>
        <function-ref name="setCca" scoped="" ref="0x7ff1d4884bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff1d4884d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff1d488da80" loc="52:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff1d488da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d488de00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff1d488c020"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d488c1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d488c340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff1d488c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff1d4891020" loc="48:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff1d4891020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff1d48913a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d4891530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d48916c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff1d4891850"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff1d48919e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ff1d4890df0" loc="50:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7ff1d4890df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d488e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff1d4889ce0" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff1d4889ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff1d48880a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff1d4888230"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff1d48883c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff1d4888550"/>
        <function-ref name="getPower" scoped="" ref="0x7ff1d48886e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff1d4888870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7ff1d48854d0" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff1d48854d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7ff1d4885950"/>
        <function-ref name="changed" scoped="" ref="0x7ff1d4885ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7ff1d4885c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7ff1d4885e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff1d4888b70" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff1d4888b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d4887020"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff1d48871b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff1d4887340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff1d4890210" loc="49:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff1d4890210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d4890590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff1d4882d30" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff1d4882d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff1d48810e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff1d4881270"/>
        <function-ref name="led1On" scoped="" ref="0x7ff1d4881400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff1d4881590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff1d4881720"/>
        <function-ref name="get" scoped="" ref="0x7ff1d48818b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff1d4881a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff1d48801b0"/>
        <function-ref name="set" scoped="" ref="0x7ff1d4881bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7ff1d4881d60"/>
        <function-ref name="led2On" scoped="" ref="0x7ff1d4880020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff1d488e470" loc="51:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff1d488e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff1d488e7f0"/>
        <function-ref name="source" scoped="" ref="0x7ff1d488e980"/>
        <function-ref name="address" scoped="" ref="0x7ff1d488eb10"/>
        <function-ref name="destination" scoped="" ref="0x7ff1d488eca0"/>
        <function-ref name="setSource" scoped="" ref="0x7ff1d488ee30"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff1d488d020"/>
        <function-ref name="type" scoped="" ref="0x7ff1d488d1b0"/>
        <function-ref name="setType" scoped="" ref="0x7ff1d488d340"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff1d488d4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff1d488d660"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff1d488d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7ff1d48820f0" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7ff1d48820f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff1d4882470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff1d4882600"/>
        <function-ref name="request" scoped="" ref="0x7ff1d4882790"/>
        <function-ref name="granted" scoped="" ref="0x7ff1d4882920"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff1d4882ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff1d47dc020" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff1d47dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d47dc3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff1d47dc530"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d47dc6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d47dc850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff1d47dc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff1d47e2910" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff1d47e2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d47e2c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff1d47dcc30" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff1d47dcc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff1d47db020"/>
        <function-ref name="source" scoped="" ref="0x7ff1d47db1b0"/>
        <function-ref name="address" scoped="" ref="0x7ff1d47db340"/>
        <function-ref name="destination" scoped="" ref="0x7ff1d47db4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7ff1d47db660"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff1d47db7f0"/>
        <function-ref name="type" scoped="" ref="0x7ff1d47db980"/>
        <function-ref name="setType" scoped="" ref="0x7ff1d47dbb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff1d47dbca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff1d47dbe30"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff1d47da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff1d47d8780" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff1d47d8780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff1d47d8b00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff1d47d8c90"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff1d47d8e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff1d47d6020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff1d47d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff1d47d81b0" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff1d47d81b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff1d47d8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff1d47d6400" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff1d47d6400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff1d47d6780"/>
        <function-ref name="source" scoped="" ref="0x7ff1d47d6910"/>
        <function-ref name="address" scoped="" ref="0x7ff1d47d6aa0"/>
        <function-ref name="destination" scoped="" ref="0x7ff1d47d6c30"/>
        <function-ref name="setSource" scoped="" ref="0x7ff1d47d6dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff1d47d5020"/>
        <function-ref name="type" scoped="" ref="0x7ff1d47d51b0"/>
        <function-ref name="setType" scoped="" ref="0x7ff1d47d5340"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff1d47d54d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff1d47d5660"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff1d47d57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff1d47d35a0" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="Relay_AppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff1d47d35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff1d5d00db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff1d5b26180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff1d47d0a80"/>
        <function-ref name="fired" scoped="" ref="0x7ff1d47d1090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff1d47d1e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff1d47d1990"/>
        <function-ref name="getdt" scoped="" ref="0x7ff1d47ce4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7ff1d47ce020"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff1d47d1510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff1d47d2200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff1d47d0470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff1d47d26d0"/>
        <function-ref name="stop" scoped="" ref="0x7ff1d47d2ba0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../..//tos/interfaces/Init.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ff1d5cfc420" loc="62:../../../..//tos/interfaces/Init.nc">
        <documentation loc="53:../../../..//tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../..//tos/interfaces/Boot.nc">
      <documentation loc="42:../../../..//tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ff1d5cfd020" loc="60:../../../..//tos/interfaces/Boot.nc">
        <documentation loc="51:../../../..//tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7ff1d5cce420" loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7ff1d5cd0700" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7ff1d5ccfce0" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7ff1d5cd0020" loc="42:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7ff1d5cd0e70" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7ff1d5cd20e0" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7ff1d5cd27c0" loc="41:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7ff1d5ccf5c0" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../..//tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7ff1d5e1b020" loc="62:../../../..//tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../..//tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7ff1d60e0c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7ff1d5c7c020" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7ff1d5c7dcc0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7ff1d5c80390" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ff1d5cc7ec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7ff1d5cc6940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7ff1d5c7c890" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7ff1d5c7b7b0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7ff1d5c7d560" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7ff1d5c7b020" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7ff1d5c80b30" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7ff1d5c7f350" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7ff1d5c7fda0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ff1d5cc7ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7ff1d5cc6940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ff1d5c7fb20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ff1d5cc7ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7ff1d5cc6940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7ff1d5c6f0e0" loc="44:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7ff1d5c6c730" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7ff1d5c6c4b0" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7ff1d5c6b2e0" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ff1d5c6b060" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ff1d5c6dca0" loc="73:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ff1d5c6d3e0" loc="68:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7ff1d5c6fa90" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7ff1d5c6f810" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7ff1d5c763e0" loc="40:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7ff1d5c76d60" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ff1d5c76ae0" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7ff1d5c74790" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7ff1d5c74510" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7ff1d5c732a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7ff1d5c73020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ff1d5c73990" loc="45:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7ff1d5c86810" loc="52:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7ff1d5c832a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7ff1d5c83020" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7ff1d5c84020" loc="53:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff1d5c8cab0" loc="45:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7ff1d5c84760" loc="54:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ff1d5c889b0" loc="47:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7ff1d5c86120" loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ff1d5c88270" loc="46:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ff1d5c870e0" loc="48:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7ff1d5c879f0" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ff1d5c87770" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7ff1d5c83cb0" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7ff1d5c83a30" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7ff1d5c451f0" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../..//tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../..//tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7ff1d5d3ea80" loc="85:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7ff1d5d3d1f0" loc="86:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7ff1d5d3e2b0" loc="79:../../../..//tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../..//tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../..//tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7ff1d5f57810" loc="52:../../../..//tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../..//tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../..//tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../..//tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ff1d6199020" loc="57:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7ff1d6198020" loc="72:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../..//tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7ff1d6199790" loc="65:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../..//tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7ff1d618d270" loc="67:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7ff1d618dac0" loc="75:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../..//tos/interfaces/Receive.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7ff1d5abe9c0" loc="78:../../../..//tos/interfaces/Receive.nc">
        <documentation loc="58:../../../..//tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
              <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d5abe060" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7ff1d5abe3b0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff1d5abe6e0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../..//tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7ff1d5aa9730" loc="113:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../..//tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ff1d5aa94b0" loc="113:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7ff1d5aa7c80" loc="138:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ff1d5aa7a00" loc="138:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ff1d5aaca80" loc="104:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff1d5aa7020" loc="130:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../..//tos/interfaces/Packet.nc">
      <documentation loc="42:../../../..//tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7ff1d5aa58a0" loc="65:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="58:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d5aa5620" loc="65:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7ff1d5aa3950" loc="78:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="67:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d5aa36d0" loc="78:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ff1d5aa0d30" loc="126:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="109:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d5aa0730" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff1d5aa0a60" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ff1d5aa2da0" loc="106:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="96:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7ff1d5aa1dd0" loc="94:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="80:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d5aa1810" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff1d5aa1b40" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../..//tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7ff1d5ac42c0" loc="80:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ff1d5ac6940" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ff1d5ac6cc0" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff1d5ac4020" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ff1d5ac1970" loc="135:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d5ac1370" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff1d5ac16a0" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ff1d5ac0a60" loc="123:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff1d5ac3630" loc="96:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d5ac33b0" loc="96:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff1d5ac2b80" loc="110:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d5ac25a0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ff1d5ac28f0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../..//tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff1d5b156f0" loc="53:../../../..//tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff1d5b156f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7ff1d5ab1420" loc="136:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ff1d5ab6d60" loc="83:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7ff1d5ab4b10" loc="114:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ff1d5ab4540" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ff1d5ab4880" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7ff1d5ab5d60" loc="98:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7ff1d5ab0460" loc="151:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7ff1d5ab1bb0" loc="144:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7ff1d5ab5570" loc="92:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7ff1d5ab72a0" loc="64:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ff1d5ab7020" loc="64:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7ff1d5ab2aa0" loc="129:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ff1d5ab24d0" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ff1d5ab2810" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7ff1d5ab7d60" loc="73:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ff1d5ab7ae0" loc="73:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff1d5ab6650" loc="78:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../..//tos/interfaces/Leds.nc">
      <documentation loc="33:../../../..//tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7ff1d5b1d530" loc="61:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="58:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7ff1d5b1dce0" loc="67:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="63:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7ff1d5b1c4e0" loc="72:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="69:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7ff1d5b1b490" loc="83:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="79:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7ff1d5b1abd0" loc="100:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="96:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff1d5b18420" loc="117:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="103:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7ff1d5b1cc70" loc="77:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="74:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff1d5b17020" loc="134:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="120:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7ff1d5b18d10" loc="134:../../../..//tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7ff1d5b1fd60" loc="56:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="53:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7ff1d5b1bc70" loc="89:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="86:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7ff1d5b1a420" loc="94:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="91:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../..//tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../..//tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ff1d5953a60" loc="44:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ff1d59521f0" loc="45:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ff1d5955bb0" loc="42:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ff1d5951070" loc="47:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff1d5953350" loc="43:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ff1d5952910" loc="46:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff1d5958dd0" loc="40:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ff1d59554c0" loc="41:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ff1d5927c20" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ff1d5926390" loc="80:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7ff1d5922c10" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ff1d5922990" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ff1d59294a0" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ff1d5925270" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7ff1d5921520" loc="117:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ff1d5926ad0" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff1d5927480" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7ff1d5923940" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7ff1d5929c40" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff1d592a5f0" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7ff1d59259f0" loc="92:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7ff1d5922120" loc="101:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7ff1d59231f0" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ff1d592ad20" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../..//tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../..//tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7ff1d56df840" loc="177:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ff1d5ad8180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff1d56df5c0" loc="177:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7ff1d56e9400" loc="88:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff1d56e9180" loc="88:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7ff1d56eb840" loc="68:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7ff1d56ea350" loc="78:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff1d56ea0d0" loc="78:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7ff1d56e5d00" loc="121:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff1d56e5720" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7ff1d56e5a70" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7ff1d56e8800" loc="103:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff1d56e8220" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7ff1d56e8570" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7ff1d56e22e0" loc="147:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff1d56e2060" loc="147:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7ff1d56e1680" loc="162:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff1d56e10d0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7ff1d56e13f0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ff1d5ad9d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7ff1d56e30b0" loc="136:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff1d56e6e00" loc="136:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7ff1d56ddd00" loc="187:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff1d5ad8180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff1d56dd720" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7ff1d56dda70" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff1d5ad8180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7ff1d56dcb50" loc="195:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ff1d5ad8180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../..//tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7ff1d56d95f0" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d56d9370" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7ff1d56d87d0" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d56d8550" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7ff1d56d6940" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d56d66c0" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../..//tos/interfaces/Send.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff1d56c7020" loc="75:../../../..//tos/interfaces/Send.nc">
        <documentation loc="57:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d56cba30" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff1d56cbd60" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ff1d56c4660" loc="125:../../../..//tos/interfaces/Send.nc">
        <documentation loc="115:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d56c4060" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff1d56c4390" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ff1d56c3790" loc="112:../../../..//tos/interfaces/Send.nc">
        <documentation loc="102:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff1d56c6350" loc="89:../../../..//tos/interfaces/Send.nc">
        <documentation loc="77:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d56c60d0" loc="89:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff1d56c5870" loc="100:../../../..//tos/interfaces/Send.nc">
        <documentation loc="91:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d56c5290" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ff1d56c55e0" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7ff1d5653920" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff1d5653920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff1d5653b60" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d5653b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7ff1d564e970" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d5653b60"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d564e6f0" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7ff1d564db40" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d564d8c0" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7ff1d5650750" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d56504d0" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff1d564c020" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d5653b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d564b8a0" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7ff1d564bc00" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d5653b60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../..//tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../..//tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7ff1d563f030" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d56419e0" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7ff1d5641d70" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7ff1d563e2a0" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d563e020" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7ff1d56411f0" loc="57:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7ff1d56427f0" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7ff1d5642570" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7ff1d5617430" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d56171b0" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7ff1d5619720" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d56194a0" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7ff1d561cdc0" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7ff1d561cb40" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7ff1d561c2a0" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7ff1d561c020" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7ff1d561a880" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7ff1d561a600" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7ff1d56185e0" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d5618360" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../..//tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../..//tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7ff1d560be60" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../..//tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7ff1d560b850" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ff1d560bbd0" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7ff1d56260c0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff1d5627aa0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7ff1d5627df0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7ff1d56226d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff1d56220d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7ff1d5622440" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7ff1d5626ba0" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7ff1d68c9110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff1d5626920" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7ff1d5623600" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff1d5623380" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7ff1d56272a0" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff1d5627020" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7ff1d5624720" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff1d56244a0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../..//tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../..//tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7ff1d560f630" loc="65:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d560f3b0" loc="65:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7ff1d56136f0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d56130d0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7ff1d5613460" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7ff1d56105f0" loc="59:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../..//tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d5610370" loc="59:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7ff1d5612af0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d56124d0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7ff1d5612860" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7ff1d560e630" loc="71:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d560e3b0" loc="71:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../..//tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7ff1d561e0b0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../..//tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d5628de0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../..//tos/interfaces/Resource.nc">
      <documentation loc="63:../../../..//tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7ff1d5602cc0" loc="120:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="104:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7ff1d5603cc0" loc="97:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="90:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7ff1d5603350" loc="88:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="78:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7ff1d56024f0" loc="102:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="99:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7ff1d56018b0" loc="128:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="122:../../../..//tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff1d55e1ca0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff1d55e16e0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7ff1d55e1a10" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff1d55df020" loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7ff1d55dc930" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7ff1d55ddab0" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7ff1d55dc360" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff1d55dc690" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff1d55dd2b0" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff1d55dfbb0" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ff1d55dd020" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7ff1d55e0780" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7ff1d55e0500" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../..//tos/interfaces/Random.nc">
      <documentation loc="34:../../../..//tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7ff1d55d9b50" loc="52:../../../..//tos/interfaces/Random.nc">
        <documentation loc="48:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7ff1d55d9350" loc="46:../../../..//tos/interfaces/Random.nc">
        <documentation loc="42:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../..//tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7ff1d55e3270" loc="95:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff1d55e3a80" loc="105:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7ff1d55d2020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d55d3c90" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7ff1d55d3490" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7ff1d5b13720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7ff1d5b10090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d55d3190" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7ff1d55d1360" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7ff1d5b10b90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7ff1d5b0e4f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d55d1060" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7ff1d55e8070" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7ff1d55e60e0" loc="97:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7ff1d55e78f0" loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7ff1d55eb730" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7ff1d55e97e0" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7ff1d55e88e0" loc="76:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7ff1d55e7120" loc="83:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7ff1d55e9020" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../..//tos/interfaces/State.nc">
      <documentation loc="33:../../../..//tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7ff1d55cba70" loc="71:../../../..//tos/interfaces/State.nc">
        <documentation loc="68:../../../..//tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7ff1d55cd020" loc="56:../../../..//tos/interfaces/State.nc">
        <documentation loc="53:../../../..//tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7ff1d55cb2a0" loc="66:../../../..//tos/interfaces/State.nc">
        <documentation loc="63:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7ff1d55cb020" loc="66:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7ff1d55cd790" loc="61:../../../..//tos/interfaces/State.nc">
        <documentation loc="58:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7ff1d55d5ca0" loc="45:../../../..//tos/interfaces/State.nc">
        <documentation loc="40:../../../..//tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7ff1d55d5a20" loc="45:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7ff1d55ce7a0" loc="51:../../../..//tos/interfaces/State.nc">
        <documentation loc="47:../../../..//tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7ff1d55ce520" loc="51:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7ff1d5570640" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7ff1d5570060" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7ff1d55703b0" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7ff1d5571020" loc="93:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7ff1d5573690" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7ff1d5573020" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7ff1d5573400" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7ff1d5579a40" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ff1d55797c0" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7ff1d55718a0" loc="98:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7ff1d5575540" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7ff1d55752c0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7ff1d5578b90" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7ff1d5578910" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7ff1d556f8a0" loc="117:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7ff1d55746b0" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7ff1d5574430" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7ff1d556f070" loc="112:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7ff1d5576350" loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7ff1d563c670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7ff1d563cdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7ff1d5576b40" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7ff1d5579020" loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7ff1d55781f0" loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7ff1d5575ce0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../..//tos/interfaces/Read.nc">
      <documentation loc="33:../../../..//tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7ff1d556b2b0" loc="49:../../../..//tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff1d556b2b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7ff1d556bb70" loc="55:../../../..//tos/interfaces/Read.nc">
        <documentation loc="50:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7ff1d55698f0" loc="63:../../../..//tos/interfaces/Read.nc">
        <documentation loc="57:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff1d556b2b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7ff1d5569340" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7ff1d5569660" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff1d556b2b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ff1d553fc10" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff1d5b228b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff1d553f990" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff1d553e710" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff1d5b228b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff1d553e490" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../..//tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7ff1d555ec50" loc="48:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../..//tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7ff1d563c670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7ff1d563cdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../..//tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff1d555a020" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff1d555a020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff1d555a260" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d555a260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7ff1d5556e00" loc="109:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d555a260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ff1d5559e40" loc="78:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7ff1d5556460" loc="103:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d555a260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d555a260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ff1d5558e60" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d555a260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7ff1d55561d0" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d555a260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7ff1d5558640" loc="88:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7ff1d5555620" loc="116:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d555a260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ff1d555adc0" loc="66:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d555a260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ff1d555ab40" loc="66:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d555a260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff1d5559680" loc="73:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../..//tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7ff1d5547560" loc="50:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7ff1d55464f0" loc="60:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7ff1d5547d40" loc="55:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ff1d5ad8180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7ff1d5548cd0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff1d5ad8180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7ff1d55486f0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff1d5ad8180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7ff1d5548a40" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff1d5ad8560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7ff1d553ae40" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff1d5b228b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ff1d5544e80" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff1d5b228b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7ff1d5544020" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7ff1d5544890" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff1d5544be0" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff1d5541610" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff1d5b228b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7ff1d5542770" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7ff1d5541020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff1d5541370" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../..//tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../..//tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7ff1d554bc30" loc="68:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7ff1d554b470" loc="61:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7ff1d554cce0" loc="54:../../../..//tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7ff1d554c420" loc="53:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../..//tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff1d54364f0" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff1d54364f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff1d5436730" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d5436730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ff1d5435070" loc="64:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d5436730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ff1d5433190" loc="76:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ff1d54358f0" loc="71:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ff1d54338f0" loc="82:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../..//tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7ff1d536dbb0" loc="54:../../../..//tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7ff1d536cd70" loc="66:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7ff1d536c5c0" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ff1d536c340" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7ff1d536d350" loc="53:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../..//tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7ff1d5348a60" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ff1d5345540" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7ff1d53482d0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7ff1d5346cf0" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7ff1d5346a70" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7ff1d534bb00" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7ff1d53462b0" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7ff1d5233270" loc="24:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7ff1d5233ac0" loc="31:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7ff1d5232350" loc="39:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7ff1d520cb60" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff1d520c580" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff1d520c8d0" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7ff1d5207dd0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff1d5207490" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff1d52077e0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ff1d5207b30" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff1d52086b0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff1d5b228b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff1d52080d0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff1d5208420" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7ff1d520d730" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff1d5b228b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff1d520d150" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff1d520d4a0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7ff1d52092c0" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff1d520b930" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff1d520bc80" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ff1d5209020" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../..//tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff1d51eddf0" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7ff1d51ed480" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7ff1d51ed810" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff1d51edb50" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff1d51ea3c0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7ff1d51e96a0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7ff1d51e9a30" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff1d51e9d70" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ff1d51ea110" loc="89:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../..//tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7ff1d51f1c90" loc="45:../../../..//tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../..//tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7ff1d51f1a10" loc="45:../../../..//tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../..//tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7ff1d510d6f0" loc="53:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7ff1d510c070" loc="61:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7ff1d5104710" loc="39:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7ff1d5140020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7ff1d5140440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../..//tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../..//tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7ff1d510a2a0" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff1d510a020" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7ff1d5109680" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff1d5109400" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7ff1d510ab10" loc="68:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff1d51082a0" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff1d5108020" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../..//tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../..//tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7ff1d50feca0" loc="65:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7ff1d50fe480" loc="59:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7ff1d50f52a0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff1d50f5020" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7ff1d50f7780" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7ff1d50d2af0" loc="213:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7ff1d50dd790" loc="143:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7ff1d50ea610" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff1d515c080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7ff1d515c8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ff1d50ea390" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff1d515c080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7ff1d515c8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7ff1d50e0870" loc="123:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7ff1d50e8a90" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff1d5158080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7ff1d51588c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ff1d50e8810" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff1d5158080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7ff1d51588c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7ff1d50d7e70" loc="180:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7ff1d50d3480" loc="197:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7ff1d50e8070" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff1d515a020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7ff1d515a7b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7ff1d50e62b0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff1d5158080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7ff1d51588c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7ff1d50e2020" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7ff1d50e4d30" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7ff1d50e4610" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7ff1d50d7740" loc="179:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7ff1d50e9840" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff1d515a020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7ff1d515a7b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ff1d50e95c0" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff1d515a020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7ff1d515a7b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7ff1d50e5420" loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7ff1d50d65d0" loc="181:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7ff1d50e5e00" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7ff1d50e5b80" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7ff1d50e1910" loc="113:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7ff1d50e00e0" loc="118:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7ff1d50d8840" loc="177:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7ff1d50db790" loc="163:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7ff1d50df7e0" loc="133:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7ff1d50d7020" loc="178:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7ff1d50dc020" loc="148:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7ff1d50d6cf0" loc="182:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7ff1d50e2800" loc="103:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ff1d5163dd0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7ff1d515f680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7ff1d50d44c0" loc="187:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7ff1d50d2350" loc="207:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7ff1d50e6c50" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7ff1d50e69d0" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7ff1d50d14d0" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff1d50d1250" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7ff1d50eadf0" loc="55:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff1d515c080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7ff1d515c8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7ff1d50df020" loc="128:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7ff1d50dc770" loc="153:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7ff1d50d8020" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ff1d512ee70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7ff1d512d2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff1d50dacf0" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ff1d512ee70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7ff1d512d2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7ff1d50da2a0" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7ff1d5140020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7ff1d5140440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff1d50da020" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7ff1d5140020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7ff1d5140440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7ff1d50d1d90" loc="231:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7ff1d50d4cb0" loc="192:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7ff1d50e1070" loc="108:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7ff1d50d3be0" loc="202:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7ff1d50db020" loc="158:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7ff1d50dd020" loc="138:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7ff1d506a600" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7ff1d5042070" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7ff1d5055b10" loc="31:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7ff1d504ad50" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ff1d504aad0" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7ff1d505d270" loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7ff1d5046350" loc="71:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7ff1d504fcf0" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7ff1d5056c50" loc="28:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7ff1d50549c0" loc="34:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7ff1d5058c00" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7ff1d5058980" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7ff1d5059120" loc="21:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7ff1d5051790" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7ff1d5048c80" loc="66:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7ff1d50438f0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7ff1d504a390" loc="61:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7ff1d503eb60" loc="91:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7ff1d5039270" loc="100:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7ff1d505c0e0" loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7ff1d5051020" loc="38:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7ff1d5050910" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7ff1d5056500" loc="27:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7ff1d505e020" loc="7:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7ff1d504bba0" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ff1d504b920" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7ff1d50617e0" loc="6:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7ff1d5047b80" loc="69:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7ff1d50427d0" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7ff1d503c350" loc="94:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7ff1d503ba90" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7ff1d5045270" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7ff1d5041020" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7ff1d5048520" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7ff1d503fbb0" loc="87:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7ff1d505c800" loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7ff1d504c020" loc="53:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7ff1d503f020" loc="86:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7ff1d5043190" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7ff1d504f520" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7ff1d504f2a0" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7ff1d503caf0" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7ff1d504b1f0" loc="57:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7ff1d5046ac0" loc="72:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7ff1d505eaa0" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ff1d511ab90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7ff1d5119020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff1d505e820" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ff1d511ab90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7ff1d5119020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7ff1d5053870" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7ff1d505a980" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ff1d505a700" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7ff1d5050120" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff1d5051e70" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7ff1d503e3b0" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7ff1d5058270" loc="24:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7ff1d505a020" loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7ff1d504c9e0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7ff1d504c760" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff1d68c8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7ff1d505d9a0" loc="12:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7ff1d5041740" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7ff1d50459e0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7ff1d5047420" loc="68:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7ff1d504d740" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7ff1d504d4c0" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7ff1d5053120" loc="35:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7ff1d50553b0" loc="29:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7ff1d503b2b0" loc="96:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7ff1d5059aa0" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ff1d5059820" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7ff1d503d350" loc="92:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7ff1d5054270" loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7ff1d503db10" loc="93:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../..//tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../..//tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7ff1d4f9f780" loc="90:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7ff1d4f9e020" loc="98:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7ff1d4f66900" loc="56:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7ff1d4f65a20" loc="73:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7ff1d4f66070" loc="46:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7ff1d4f651f0" loc="65:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7ff1d4f64390" loc="81:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../..//tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7ff1d4f5ab50" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ff1d4f63b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7ff1d4f5a8d0" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ff1d4f63b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7ff1d4f5eb80" loc="53:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7ff1d4f5b6b0" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ff1d4f63b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7ff1d4f5b430" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ff1d4f63b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7ff1d4f5a020" loc="70:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7ff1d4f63b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../..//tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../..//tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ff1d4d555e0" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7ff1d4d55360" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ff1d4d42b00" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7ff1d4d421c0" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7ff1d4d42530" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff1d4d42860" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff1d4d40880" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7ff1d4d402c0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff1d4d405f0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff1d4d28530" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff1d4d28530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff1d4d28770" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d4d28770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7ff1d4d272e0" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../..//tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d4d28770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ff1d4d27060" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff1d4d28770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7ff1d4cc5580" loc="43:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7ff1d4c939e0" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7ff1d4c93020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7ff1d4c93750" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7ff1d4c947f0" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7ff1d4c94020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ff1d4c98d30" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7ff1d4ca93d0" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff1d68c8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d4ca9150" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7ff1d4caa3d0" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff1d619d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d4caa150" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff1d4ca6350" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d4ca60d0" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff1d4ca7390" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff1d4ca7110" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff1d5ac8ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7ff1d5ac6180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../..//tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff1d4b30910" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff1d4b30910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ff1d4b2d270" loc="61:../../../..//tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../..//tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff1d68c8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7ff1d499f5e0" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7ff1d499f5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7ff1d499b2a0" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../..//tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff1d6194c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7ff1d499f5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7ff1d499b020" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7ff1d499f5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
